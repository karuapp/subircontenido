export default {
  pushNotification:{
    activeSubscriptionWebPush: 'Active subscription for Web Push',
    updateSubscriptionWebPush: 'Update subscription for Web Push',
  },
  buscarMensagemModal: {
    title: "Search Messages (Beta)",
    searchPlaceholder: "Type a term to search",
    searchButton: "Search",
    loadingMessages: "Searching messages...",
    loadingMoreMessages: "Loading more messages...",
    atendimento: "Service: #",
    messageDate: "Message Date: ",
    channel: "Channel: ",
    status: "Status: ",
    group: "Group: ",
    lastMessage: "Last message: ",
    unknown: "Unknown",
    noMessages: "No messages",
    closeButton: "Close",
    statusMap: {
      closed: "Closed",
      open: "Open",
      pending: "Pending",
      schedule: "Scheduled"
    },
    isGroup: {
      yes: "Yes",
      no: "No"
    }
  },
  generalAgendamento: {
    appointments: 'Agendamentos',
    addAppointment: 'Adicionar Agendamento',
    attention: 'Atenção!! Deseja realmente deletar essa mensagem?',
    oldMessages: 'Mensagens antigas não serão apagadas no cliente.',
    yes: 'Sim',
    no: 'Não',
    message: 'Mensagem',
    contact: 'Contato',
    actions: 'Ações',
    status: 'Status',
    type: 'Tipo',
    date: 'Data',
    created: 'Criado',
    dateFormat: 'dd/MM/yyyy HH:mm:ss'
  },
  status: {
    open: 'Open',
    closed: 'Closed',
    pending: 'Pending',
    schedule: 'Scheduled',
    undefined: 'Undefined'
  },
  type: {
    chat: 'Text',
    image: 'Image',
    templates: 'Template',
    video: 'Video',
    application: 'File',
    text: 'File',
  },
  dialog: {
    title: 'Message Scheduling',
    close: 'Close',
    selectWhatsapp: 'Select WhatsApp',
    selectContact: 'Select Contact',
    loadingContacts: 'Please wait... Loading contacts!',
    searchTip: 'Search by name or phone number!',
  },
  inputMensagemAgendamento: {
    added: "Added",
    templateError: "No template selected.",
    scheduleError: "Scheduling date not defined.",
    templateScheduledSuccess: "Template(s) successfully scheduled!",
    templateSendError: "Error sending the template.",
    recurrenceCountLabel: "Repetitions (Default to create a message: 1)",
    scheduleError: "Choose the date",
    recurrenceLabel: "Recurrence",
    noRepeat: "Do not repeat",
    every5Days: "Every 5 days",
    every10Days: "Every 10 days",
    every15Days: "Every 15 days",
    every20Days: "Every 20 days",
    every25Days: "Every 25 days",
    every30Days: "Every 30 days",
    every35Days: "Every 35 days",
    every40Days: "Every 40 days",
    every45Days: "Every 45 days",
    every60Days: "Every 60 days",
    messageScheduled: "Message successfully scheduled!",
    placeholder: "Type your message",
    scheduleFile: "Schedule file",
    scheduleMessage: "Schedule message",
    scheduleSticker: "Schedule Sticker",
    scheduleImageTo: "Schedule image for",
    scheduleVideo: "Schedule link for video conference",
    templates: "Templates",
    activateSignature: "Activate Signature",
    deactivateSignature: "Deactivate Signature",
    confirmSend: "Confirm send: Enter",
    cancelSend: "Cancel: ESC",
    scheduleDateLabel: "Schedule Date/Time",
    customSchedule: "Custom Schedule",
    thirthyMinutes: "In 30 minutes",
    isTomorrow: "Tomorrow",
    nextWeek: "Next week",
    selectTemplate: "Choose a Template",
    schedule: "Schedule",
    cancel: "Cancel",
    selectWhatsapp: "Select WhatsApp",
    selectContact: "Select Contact",
    emoji: "Emoji",
    find: "Find...",
    invalidFile: "Invalid file",
    acceptFormats: "Accepted formats",
    error: "An error occurred",
    fileNotFound: "No files available for sending",
    messageNotFound: "No messages available for sending",
    scheduleError: "To schedule a message, provide the Schedule Date/Time field.",
    checkFiles: "Check the size and extensions of the selected files",
  },
  mixinCommonAgendamento: {
    note: "Note",
    buttonNotAvailable: "This button is only clickable on mobile",
    dateFormat: "MM/dd/yyyy",
  },
  aniversarios: {
    title: "Birthdays",
    sendManualMessage: "Send Birthday Messages Manually",
    modalTitle: "Select WhatsApp",
    modalDescription: "Send Birthday Messages Manually",
    modalWarning: "By clicking send, the registered birthday message will be sent to today's birthday celebrants.",
    sendingMessages: "Please wait, sending birthday messages...",
    sendingMessagesSuccess: "Birthday messages successfully sent!",
    sendingMessagesError: "Error sending birthday messages.",
    cancel: "Cancel",
    send: "Send",
    whatsappLabel: "WhatsApp",
    columns: {
      id: "#",
      name: "Name",
      birthdayDate: "Birthday",
      actions: "Actions",
    },
  },
  api: {
    title: "API Settings",
    addButton: "Add",
    postmanButton: "POSTMAN",
    copyToken: "Copy token",
    editConfig: "Edit Configuration",
    newToken: "Generate new Token",
    deleteConfig: "Delete Configuration",
    url: "URL",
    bearerToken: "Bearer Token",
    key: "Key",
    actions: "Actions",
    dialogDeleteTitle: "Attention!!",
    dialogDeleteMessage: "Do you really want to delete",
    dialogNewTokenMessage: "Do you really want to generate a new token for",
    deleteSuccess: "deleted!",
    deleteError: "Could not delete.",
    tokenUpdated: "Token updated!",
    tokenUpdateError: "Could not update the token.",
    tokenCopied: "Token copied!",
    dialogCancel: "No",
    dialogConfirm: "Yes",
    columns: {
      name: "Name",
      token: "Token",
      isActive: "Active",
      actions: "Actions",
    },
  },
  modalApi: {
    titleCreate: "Create API Configuration",
    titleEdit: "Edit API Configuration",
    fieldsetApiData: "API Data",
    apiNameLabel: "API Name",
    apiSessionLabel: "Send by",
    apiSessionError: "Required",
    apiAuthTokenLabel: "Authentication Token",
    apiAuthTokenHint:
      "It will be sent as authorization in the header. If a prefix exists, it must be included here. E.g.: Bearer, Token",
    apiAuthTokenError: "Authentication token is required",
    fieldsetWebhook: "WebHook",
    activeLabel: "Active",
    cancelButton: "Cancel",
    saveButton: "Save",
    wabaBannerTitle: "Official API (WABA)",
    wabaBannerDescription1:
      "Available endpoints: SetQueue, SetTicketInfo, SetTag, ShowTicketInformation, ShowChannelInformation, ShowTicketInformationChatBot, ShowAllTicketInformation",
    wabaBannerDescription2:
      "BETA: SendMessageParams, SendMessageAPIFile, SendMessageAPIFileURL, SendMessageAPIText, and SendMessageAPITextBase64",
    wabaBannerDescription3:
      "To send messages and other components, use Meta's official collection: ",
    wabaBannerLink: "link",
    validationError: "Check required fields and inconsistencies.",
    apiCreatedSuccess: "API successfully created.",
    apiEditedSuccess: "API successfully edited.",
    apiError: "An error occurred!",
  },
  assinatura: {
    lookForUpdatedData: "Looking for updated license data...",
    updateInfo: "Update Information",
    licenseRefreshError: "Error refreshing license",
    domainModalTitle: 'Domains',
    domainModalSubtitle: 'Add the domains you want to allow',
    domainFieldLabel: 'Domains (comma-separated)',
    domains: "Domains: ",
    backendVersion: "Backend Version: ",
    frontendVersion: "Frontend Version: ",
    expireIn: "This version expire in: ",
    remainingDays: "Next mandatory update: ",
    expiredVersion: "Expired version!",
    days: "days",
    blockOn: "Blocked",
    blockOff: "Released",
    license_code: "License Code",
    license_expiry: "License Expiry",
    is_blocked: "Is Blocked",
    pageTitle: "License Management",
    pageSubtitle: "Control and adjust license information.",
    license: "License: ",
    licenseStatusLabel: "License Status:",
    licenseActive: "Active",
    licenseValidating: "Validating...",
    forceReleaseUpdateButton: "Force Release Update",
    emailLabel: "Email:",
    updateLicenseButton: "Update License",
    modalTitle: "Change License Key",
    modalSubtitle: "Update the license key.",
    emailFieldLabel: "New Key",
    emailFieldError: "Email is required",
    cancelButton: "Cancel",
    saveButton: "Save",
    successMessage: "License key successfully updated!",
    errorLimitExceeded:
      "Too many activation attempts. Try again in 1 minute.",
    errorUpdate: "Error updating the email.",
  },
  modalPlano: {
    titleCreate: "Create Plan",
    titleEdit: "Edit Plan",
    valueLabel: "Plan Value",
    connectionsLabel: "Connections",
    usersLabel: "Users",
    cancelButton: "Cancel",
    saveButton: "Save",
    successCreate: "Plan successfully created!",
    successEdit: "Plan successfully edited!",
    error: "An error occurred!",
  },
  atualizar: {
    migrationTitle: "Start File Migration Process",
    migrationBanner:
      "WARNING: This is an irreversible process and will copy files from the public folder to the Company subfolder. Before starting the file migration process, it is mandatory to create a VPS snapshot and ensure root user access via SSH to the VPS for potential interventions. The process may take several hours depending on your VPS performance and the number of files.",
    migrationButton: "START MIGRATION",
    cleanTitle: "Start Public Folder Cleanup Process",
    cleanBanner:
      "WARNING: This is an irreversible process and will delete all files in the public folder. Before starting the file cleanup process, it is mandatory to create a VPS snapshot and ensure root user access via SSH to the VPS for potential interventions. The process may take several hours depending on your VPS performance and the number of files.",
    cleanButton: "START CLEANUP",
    uploadSuccess: "File uploaded successfully.",
    updateTitle: "Start Update Process",
    updateButton: "START UPDATE",
    updateBanner: "Only perform this process after taking a snapshot of the VPS. This process must be performed by the superadmin of tenant 1. I confirm that I have performed a backup (snapshot) of the server and have access to the terminal.",
    buttonWarning: "This process must be performed by the superadmin of tenant 1. I confirm that I have performed a backup (snapshot) of the server and have access to the terminal. Are you sure you want to start the upgrade process?",
    uploadError: "Error uploading file.",
    updateStartSuccess: "Update process successfully started.",
    updateStartError: "Failed to start the update process.",
    migrationStartSuccess: "Migration process successfully started.",
    migrationStartError: "Failed to start the migration process.",
    cleanStartSuccess: "Cleanup process successfully started.",
    cleanStartError: "Failed to start the cleanup process.",
    fileValidationError: "Only the update_rapido.zip file is allowed.",
  },
  configurarAvaliacao: {
    tooltipMessage: "When adding an evaluation message, you can customize the response message for each evaluation. Otherwise, the system will respond with the default message.",
    messagePlaceholder: "Type the evaluation message",
    title: "Evaluations",
    tooltipTitle: "Evaluation Types:",
    tooltipEvaluation: "Evaluation: Value assigned from 0 to 5.",
    tooltipLabel: "Label: Message sent for each evaluation.",
    saveButton: "Save",
    editablePlaceholder: "Click to edit the label",
    successMessage: "Evaluation updated.",
    errorMessage: "Error updating the evaluation.",
    ratingStore: "Review message stored successfully",
    ratingStoreError: "Error message when storing review",
    ratingStoreAttempt: "Assessment attempt message stored successfully",
    labels: {
      ruim: "Bad",
      regular: "Regular",
      bom: "Good",
      muitoBom: "Very Good",
      excelente: "Excellent",
      incrivel: "Incredible",
    },
  },
  listarAvaliacao: {
    empty: "Empty",
    contactName: "Contact Name",
    title: "Evaluations",
    addButton: "Add",
    searchPlaceholder: "Search",
    dateFilterPlaceholder: "Filter by date",
    evaluationColumn: "Evaluation",
    userColumn: "User",
    ticketColumn: "Ticket",
    dateColumn: "Date",
    actionsColumn: "Actions",
    deleteConfirmationTitle: "Attention!!",
    deleteConfirmationMessage: "Do you really want to delete the Evaluation",
    deleteSuccess: "Evaluation successfully deleted",
    deleteError: "Error deleting the evaluation.",
    loadError: "Error loading evaluations.",
    dialogCancel: "No",
    dialogConfirm: "Yes",
  },
  modalAvaliacao: {
    editTitle: "Edit Evaluation",
    createTitle: "Create Evaluation",
    evaluationLabel: "Evaluation",
    attemptsLabel: "Attempts",
    ticketLabel: "Ticket",
    updateSuccess: "Evaluation successfully edited!",
    createSuccess: "Evaluation successfully created!",
    errorMessage: "Error saving the evaluation.",
  },
  campanhas: {
    register: "Records per page:",
    campanhas: "campaigns",
    title: "Campaigns",
    warningBanner: "Campaigns available for Baileys and Whatsapp-Web.JS",
    addCampaign: "Add Campaign",
    columns: {
      id: "ID",
      name: "Campaign",
      start: "Start",
      status: "Status",
      contactsCount: "Contacts Count",
      notSended: "Not Sended",
      queueForSend: "Queue for Sending",
      sent: "Sent",
      actions: "Actions",
    },
    status: {
      pending: "Pending",
      scheduled: "Scheduled",
      processing: "Processing",
      canceled: "Canceled",
      finished: "Finished",
    },
    actions: {
      forceFinish: "Force Finish",
      refresh: "Refresh List",
      downloadReportCsv: "Download Report CSV",
      downloadReportPdf: "Download Report PDF",
      sortById: "Sort by ID",
      addCampaign: "Add Campaign",
      programSend: "Schedule Sending",
      cancelCampaign: "Cancel Campaign",
      duplicateCampaign: "Duplicate Campaign",
      downloadReport: "Download Report",
      deleteCampaign: "Delete Campaign",
      editCampaign: "Edit Campaign",
      viewContacts: "View Contacts",
    },
    dialogs: {
      forceFinish: {
        title: "Force Finish",
        message: "Do you really want to force finish the Campaign?",
      },
      cancelCampaign: {
        title: "Cancel Campaign",
        message: "Do you really want to cancel the Campaign?",
      },
      cancelCampaignError:{
        message: "Unable to cancel campaigns in process",
      },
      deleteCampaign: {
        title: "Delete Campaign",
        message: "Do you really want to delete the Campaign?",
      },
      duplicateCampaign: {
        title: "Duplicate Campaign",
        message: "Do you really want to duplicate the Campaign?",
        no: "No",
        yes: "Yes",
      },
      startCampaign: {
        title: "Start Campaign",
        message: "Do you really want to start the Campaign?",
      },
    },
    notifications: {
      campaignForceFinished: "Campaign force finished.",
      campaignStarted: "Campaign started.",
      campaignCanceled: "Campaign canceled.",
      campaignDuplicated: "Campaign successfully duplicated.",
      campaignDeleted: "Campaign deleted.",
      reportGenerated: "Report successfully generated.",
      errorGeneratingReport: "Error generating report.",
      errorDuplicate: "Error duplicating campaign.",
      warningEdit: "Only pending or canceled campaigns can be edited.",
      errorCancel: "Unable to cancel the campaign.",
      errorStart: "Cannot schedule a campaign with a start date earlier than today.",
      errorStartContact: "Contacts must be linked to schedule the campaign.",
      errorStartCancel: "Only pending or canceled campaigns can be scheduled.",
      errorGeneral: "Unable to start the campaign.",
    },
    warningModal: {
      title: "Campaign Warnings",
      description: {
        whatsappRisk1: {
          title: "Can WhatsApp block or ban my number?",
          content: "Yes, the possibility is real and should be taken seriously! WhatsApp enforces strict rules and closely monitors mass messaging.",
        },
        whatsappRisk2: {
          title: "WhatsApp has zero tolerance for spam!",
          content: "It enforces strict rules and rigorously monitors mass messaging.",
        },
        highSpamRisk: {
          title: "ATTENTION",
          content: "If 2% of recipients report your number or mark your message as spam, your number will be blocked/banned!",
        },
      },
    },
    baixarRelatorio: {
      title: "Campaign Report",
      description: {
        generatedAt: "Generated at: ",
        page: "Page: ",
        campaignDetails: {
          id: "ID: {id}",
          status: "Status: {status}",
          startDate: "Start Date: {date}",
          totalContacts: "Total Contacts: {total}",
          delivered: "Delivered: {count}",
          pending: "Pending: {count}",
          failed: "Failed: {count}",
        },
        tableHeaders: {
          index: "#",
          name: "Name",
          status: "Status",
          message: "Message",
          media: "Media",
        },
        statusDescriptions: {
          delivered: "Delivered",
          pending: "Pending",
          failed: "Failed",
        },
        placeholders: {
          unknownName: "Unknown",
          noMessage: "No Message",
          noMedia: "No Media",
        },
        notifications: {
          success: "Report successfully generated!",
          error: "Error generating PDF report.",
        },
        fileName: "campaign_report_{id}.pdf",
      },
    },
  },
  modalCampanha: {
    title: {
      create: "Create Campaign",
      edit: "Edit Campaign",
    },
    labels: {
      campaignName: "Campaign Name",
      startDate: "Start Date/Time",
      session: "Send via",
      delay: "Delay",
      media: "Message Media Composition",
      message: "Type the message",
      messagePreview: "Preview",
      firstMessage: "1st Message",
      secondMessage: "2nd Message",
      thirdMessage: "3rd Message",
      variables: "Variables",
      emoji: "Emoji",
      seconds: "Seconds",
    },
    placeholders: {
      message: "Type the message",
    },
    validations: {
      required: "Required",
      invalidDate: "Cannot be earlier than the current date",
    },
    buttons: {
      cancel: "Cancel",
      save: "Save",
    },
    notifications: {
      successEdit: "Campaign successfully edited!",
      successCreate: "Campaign successfully created!",
      error: "An issue occurred while creating the campaign.",
      validationError: "Check if all required fields are filled.",
      errorImage: "An issue occurred while uploading the image.",
    },
    emojiPicker: {
      search: "Search...",
      lang: "en-US",
    },
    optRadio: {
      msg1: "Msg. 1",
      msg2: "Msg. 2",
      msg3: "Msg. 3",
    },
  },
  listChatflow: {
    title: "Flows",
    addButton: "Add",
    status: {
      active: "Active",
      inactive: "Inactive",
    },
    actions: {
      edit: "Edit Information",
      duplicate: "Duplicate Flow",
      open: "Open Flow",
      importJson: "Import JSON",
      delete: "Delete",
    },
    confirmDelete: {
      title: "Are you sure you want to delete this flow?",
      message: "{name}",
    },
    importJsonDialog: {
      title: "Import JSON to {name}",
      jsonLabel: "Paste JSON",
      jsonValidationError: "JSON is required",
      importButton: "Import",
      cancelButton: "Cancel",
      importSuccess: "JSON successfully imported!",
      importError: "Invalid format. Check the JSON.",
    },
  },
  modalChatflow: {
    title: {
      create: "Create Flow",
      edit: "Edit Flow",
      duplicate: "Duplicate Flow",
      duplicateSuffix: "(Name: {name})",
    },
    fields: {
      description: "Description",
      isActive: "Active",
      testNumber: "Test Number",
      testNumberHint:
        "Leave it blank for Auto Response to work. Otherwise, it will only work for the number entered here.",
    },
    actions: {
      save: "Save",
      cancel: "Cancel",
    },
    notifications: {
      created: "New flow created.",
      edited: "Flow edited.",
      duplicated: "Flow duplicated.",
    },
  },
  chatPrivado: {
    labels: {
      grupo: "Group",
    },
    toolbar: {
      returnMenu: "Return to Menu",
      atendimento: "Service",
      minimize: "Minimize",
      groupMembers: "Group Members",
    },
    dialog: {
      groupMembers: "Group Members",
    },
    chatHeader: {
      online: "Online",
      offline: "Offline",
      noName: "No Name",
      noEmail: "No Email",
    },
    chatFooter: {
      emoji: "Emoji",
      attachFile: "Attach File",
      sendVideoLink: "Send video conference link",
      placeholder: "Type your message",
      send: "Send",
    },
    tabs: {
      users: "Users",
      groups: "Teams",
    },
    messages: {
      dateSeparator: "Today",
      downloadTooltip: "Download: {fileName}",
      read: "Read",
      unread: "Unread",
      today: "Today",
      senderMe: "Me",
      download: "Download",
      pdfPlaceholder: "Download the PDF",
      online: "Online",
      offline: "Offline",
      searchPlaceholder: "Search...",
      usersTab: "Users",
      groupsTab: "Teams",
      noMessages: "No messages found.",
    },
    notifications: {
      errorLoadMessages: "Error loading messages.",
      fileRejected: "Error: Check the files sent.",
      sendMessageError: "Error sending message.",
      successMessageSent: "Message successfully sent.",
    },
  },
  configuracoesSessoes: {
    baileys: {
      title: "Reset Baileys connection (clears sessions and restarts)",
      description: "Are you sure you want to reset the Baileys connection? This action will clear all sessions and restart the connection.",
      message: "Baileys connection successfully reset",
      error: "Error resetting Baileys connection"
    },    
    labels: {
      updateSessions: "Updated Sessions",
      noEvents: "No events found.",
      eventCount: "Events",
      name: "Name",
      status: "Status",
      session: "Session",
      number: "Number",
      updatedAt: "Last Update",
      isDefault: "Default",
      actions: "Actions",
      defaultConnection: "Default Connection",
      deleteConnection: "Delete Connection",
      setDefault: "Set as Default",
      confirmDeleteTitle: "Attention!! Do you really want to delete?",
      confirmDeleteMessage: "Open chats for this channel will be closed but can still be viewed on the service panel.",
      cancel: "No",
      confirm: "Yes",
    },
    messages: {
      reloadPage: "Reload Page",
      errorLoadingColors: "Error loading colors.",
      noColorsStored: "No colors stored in localStorage.",
    },
  },
  configuracoesSessoesStatus: {
    statuses: {
      qrcode: {
        title: "Waiting for QR Code scan",
        description: "Click the 'QR CODE' button and scan the QR Code with your phone to start the session.",
      },
      disconnected: {
        title: "Failed to establish communication for this channel.",
        whatsapp: "Make sure your phone is connected to the internet and try again, or request a new QR Code.",
        waba: "Try reconnecting. If the error persists, confirm that the tokens are correct.",
        telegram: "Try reconnecting. If the error persists, confirm that the token is correct.",
        instagram: "Try reconnecting. If the error persists, confirm that the credentials are correct.",
      },
      connected: {
        meow: "Connection established: ",
        waba: "Connection established: ",
        whatsapp: "Connection established: ",
        loading: "Loading data...",
      },
      pairingTimeout: {
        title: "The connection with the phone was lost",
        description: "Ensure your phone is connected to the internet and WhatsApp is open, or click the 'Disconnect' button to obtain a new QR Code.",
      },
      opening: {
        title: "Establishing connection.",
        description: "This might take a while...",
      },
    },
    labels: {
      lastUpdate: "Last Update",
    },
  },
  configuracoesChatgpt: {
    labels: {
      enableChatgpt: "Enable ChatGPT Integration",
      enableChatgptDescription: "When enabled, the system will use ChatGPT data.",
      enableChatgptAll: "Enable ChatGPT Integration for all services by default",
      enableChatgptAllDescription: "When enabled, the system will use ChatGPT data in all services.",
    },
    notifications: {
      success: "Configuration updated!",
      error: "An error occurred while updating the configuration.",
    },
  },
  configuracoesLm: {
    labels: {
      enableLm: "Enable LM Studio Integration",
      enableLmDescription: "When enabled, the system will use LM Studio data.",
      enableLmAll: "Enable LM Studio Integration for all services by default",
      enableLmAllDescription: "When enabled, the system will use LM Studio data in all services.",
    },
    notifications: {
      success: "Configuration updated!",
      error: "An error occurred while updating the configuration.",
    },
  },
  configuracoesOllama: {
    labels: {
      enableChatgpt: "Enable Ollama Integration",
      enableChatgptDescription: "When enabled, the system will use Ollama data.",
      enableChatgptAll: "Enable Ollama Integration for all services by default",
      enableChatgptAllDescription: "When enabled, the system will use Ollama data in all services.",
    },
    notifications: {
      success: "Configuration updated!",
      error: "An error occurred while updating the configuration.",
    },
  },
  configuracoesDialogflow: {
    labels: {
      enableDialogflow: "Enable Dialogflow",
      enableDialogflowDescription: "When enabled, the system will use Dialogflow for workflows.",
      enableDialogflowAll: "Enable Dialogflow Integration for all services by default",
      enableDialogflowAllDescription: "When enabled, the system will use Dialogflow data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesDify: {
    labels: {
      enableDify: "Enable Dify Integration (Beta)",
      enableDifyDescription: "When enabled, the system will use Dify data.",
      enableDifyAll: "Enable Dify Integration for all services by default",
      enableDifyAllDescription: "When enabled, the system will use Dify data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesGemini: {
    labels: {
      enableGemini: "Enable Gemini Integration (Beta)",
      enableGeminiDescription: "When enabled, the system will use Gemini data.",
      enableGeminiAll: "Enable Gemini Integration for all services by default",
      enableGeminiAllDescription: "When enabled, the system will use Gemini data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesDeepseek: {
    labels: {
      enableDeepseek: "Enable Deepseek Integration (Beta)",
      enableDeepseekDescription: "When enabled, the system will use Deepseek data.",
      enableDeepseekAll: "Enable Deepseek Integration for all services by default",
      enableDeepseekAllDescription: "When enabled, the system will use Deepseek data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesQwen: {
    labels: {
      enableQwen: "Enable Qwen Integration (Beta)",
      enableQwenDescription: "When enabled, the system will use Qwen data.",
      enableQwenAll: "Enable Qwen Integration for all services by default",
      enableQwenAllDescription: "When enabled, the system will use Qwen data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesClaude: {
    labels: {
      enableClaude: "Enable Claude Integration (Beta)",
      enableClaudeDescription: "When enabled, the system will use Claude data.",
      enableClaudeAll: "Enable Claude Integration for all services by default",
      enableClaudeAllDescription: "When enabled, the system will use Claude data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesGrok: {
    labels: {
      enableGrok: "Enable Grok Integration (Beta)",
      enableGrokDescription: "When enabled, the system will use Grok data.",
      enableGrokAll: "Enable Grok Integration for all services by default",
      enableGrokAllDescription: "When enabled, the system will use Grok data in all services.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration.",
    },
  },
  configuracoesgroqCloud: {
    labels: {
      installApi: "Register your GroqCloud API for free",
      apiIntegrationUrl: "https://console.groq.com/",
      apiKey: "API Key",
      language: "Language",
      model: "Model",
      enableGroqCloud: "Enable integration with GroqCloud",
      enableGroqCloudDescription: "When enabled, the system will consume data from Groq Cloud.",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating configuration. Please check the data and try again.",
      loadError: "Error loading configuration. Please try again.",
      invalidUrl: "Please enter a valid URL before continuing!",
    },
  },    
  configuracoesEvolution: {
    labels: {
      warningEvo: "Evolution v.2.20.0 or superior",
      installApi: "Install your Evolution API for free",
      apiIntegrationUrl: "https://github.com/EvolutionAPI/evolution-api",
      checkApiStatus: "Check API Status in a new tab",
      apiUrl: "API URL (https://subevo.com.br)",
      globalKey: "Global Key",
    },
    notifications: {
      success: "Configuration updated successfully!",
      error: "Error updating the configuration. Check the data and try again.",
      loadError: "Error loading configurations. Please try again.",
      invalidUrl: "Please enter a valid URL before continuing!",
    },
  },
  configuracaoLanes: {
    title: "Lanes",
    addLane: "Add Lane",
    editLane: "Edit Lane",
    deleteLane: "Delete Lane",
    deleteConfirmation: "Do you really want to delete the Lane \"{lane}\"?",
    laneDeleted: "Lane \"{lane}\" successfully deleted!",
    columns: {
      id: "#",
      name: "Lane",
      position: "Position",
      actions: "Actions",
    },
    notifications: {
      successDelete: "Lane successfully deleted!",
      errorDelete: "Error deleting the Lane.",
    },
  },
  hub: {
    createAccountInstruction: "Create an account at hub.notificame.com.br and generate your token",
    tooltip: "HUB Notificame (Beta)",
    tokenLabel: "Your Notificame Token",
  },
  configuracaoMeta: {
    title: "Meta Settings",
    webhookMeta: "Meta Webhook",
    webhookTooltip: "Meta Webhook",
    metaTokenLabel: "Meta Webhook Token",
    testBMTitle: "Test BM",
    testBMDescription: "Enter the data below to check your BM status",
    testBMTooltip: "Test BM",
    wabaIdLabel: "WABA ID (WhatsApp Business Account Identification)",
    wabaVersionLabel: "WABA Version (WhatsApp Business API Version)",
    wabaTokenLabel: "WABA Token (Meta Business Manager Token)",
    verifyBMButton: "Verify BM",
    verificationResultTitle: "Verification Result",
    verification: {
      verifiedName: "Verified Name",
      verificationStatus: "Verification Status",
      phoneNumber: "Phone Number",
      qualityRating: "Quality Rating",
      platformType: "Platform Type",
      throughputLevel: "Throughput Level",
      webhookConfigured: "Webhook Configured",
      id: "ID",
    },
    notConfigured: "Not Configured",
    notifications: {
      successVerify: "Verification completed!",
      errorVerify: "Error verifying BM!",
      successCopy: "Link copied!",
      successUpdate: "Token successfully updated!",
      errorUpdate: "Error updating the token!",
    },
  },
  configuracaoMotivo: {
    title: "Demands",
    addMotivo: "Add Demand",
    editMotivo: "Edit Demand",
    deleteMotivo: "Delete Demand",
    deleteConfirmation: "Do you really want to delete the demand \"{motivo}\"?",
    motivoDeleted: "Demand \"{motivo}\" successfully deleted!",
    columns: {
      id: "#",
      name: "Demand",
      actions: "Actions",
    },
    notifications: {
      successDelete: "Demand successfully deleted!",
      errorDelete: "Error deleting the demand.",
    },
  },
  configuracoesN8N: {
    title: "N8N Integration Settings",
    enableIntegration: "Enable N8N Integration",
    enableIntegrationCaption: "When enabled, the system will use N8N data.",
    enableIntegrationAllTickets: "Enable N8N Integration for all tickets by default",
    enableIntegrationAllTicketsCaption: "When enabled, the system will use N8N data in all tickets.",
    toggleEnabled: "Enabled",
    toggleDisabled: "Disabled",
    notifications: {
      success: "Configuration successfully updated!",
      error: "Error updating the configuration.",
    },
  },
  configuracaoPagamento: {
    title: "Payment Information",
    paymentLink: "Payment Link",
    paymentId: "Payment ID",
    status: "Status",
    dueDate: "Due Date",
    pending: "Pending",
    overdue: "Overdue",
    toolbarTitle: "Payment Information",
    notifications: {
      errorFetch: "Unable to list payment options.",
    },
  },
  configuracoesSMS: {
    title: "SMS Settings",
    comteleAccount: "Create an account at comtele.com.br and generate an API key",
    conectaAccount: "Create an account at Conecta and generate an API key",
    comteleTokenLabel: "Your Comtele API Key",
    conectaTokenLabel: "Your Conecta API Key",
    comteleTooltip: "SMS Comtele",
    conectaTooltip: "SMS Conecta",
    livsonAccount: "Create an account at BHI and generate an API key",
    livsonTokenLabel: "Your BHI API Key",
    livsonTooltip: "SMS BHI",
    notifications: {
      successUpdate: "Token successfully updated!",
      errorUpdate: "Error updating the token.",
    },
  },
  configuracoesSMTP: {
    erroEnvioTeste: 'Error sending test.',
    mensagemTeste: 'This is a test email sent by the system.',
    assuntoTeste: 'Test Email',
    enviarTeste: 'Send Test',
    testeEnviado: 'Test sent successfully!',
    testeErro: 'Error sending test.',
    testeEmail: 'Test Email',
    testeAssunto: 'Test Subject',
    testeMensagem: 'Test Message',
    testeBotao: 'Click here to test',
    emailDestino: 'Destination Email',
    title: "SMTP Settings",
    enableSMTP: "Enable SMTP",
    enableSMTPCaption: "When enabled, the system will send information to the user's email.",
    emailHostLabel: "Email Server (Host):",
    emailPortLabel: "SMTP Port",
    emailUserLabel: "Email User:",
    emailPassLabel: "Email Password:",
    emailSecure: "Security Protocol",
    emailSecureCaption: "Enable secure protocol.",
    notifications: {
      successUpdate: "Configuration successfully updated!",
      errorUpdate: "Error updating the configuration.",
    },
  },
  configuracoesTypebot: {
    title: "Typebot Settings",
    enableTypebot: "Enable Typebot",
    enableTypebotCaption: "When enabled, the system will use Typebot workflows.",
    enableAllTickets: "Enable Typebot Integration for all services by default",
    enableAllTicketsCaption: "When enabled, the system will use Typebot workflows in all services.",
    notifications: {
      successUpdate: "Configuration successfully updated!",
      errorUpdate: "Error updating the configuration.",
    },
  },
  configuracoesVariaveis: {
    titlePlatform: "Platform Variables",
    platformVariables: {
      name: "name",
      greeting: "greeting",
      protocol: "opening protocol",
      email: "email (if available)",
      phoneNumber: "phone number",
      kanban: "kanban (if available)",
      user: "agent",
      userEmail: "agent email",
      firstName: "first name",
      lastName: "last name",
      businessName: "business",
    },
    titleTypebot: "TypeBot Variables",
    typebotVariables: {
      nome: "name",
      numero: "number",
      atendimento: "ticket number",
      email: "email (if available)",
      status: "ticket status",
      canal: "service channel",
      grupo: "group service or not",
      fullTicket: "all ticket properties",
    },
  },
  configuracoesWebhook: {
    enableWebhook: "Enable webhook",
    enableWebhookCaption: "When enabled, the system will send information to the defined webhook.",
    webhookUrlLabel: "Webhook URL:",
    webhookMessage: "Receive messages and tickets",
    webhookCreateChannel: "Create channel/connection",
    webhookUpdateChannel: "Update channel/connection",
    webhookCreateUser: "Create user/contact/opportunity",
    webhookUpdateUser: "Update user/contact/opportunity",
    webhookCreateApi: "Create API",
    webhookUpdateApi: "Update API",
    webhookRenewApi: "Renew API token",
  },
  configuracoesWuzapi: {
    title: "Meow API (Wuzapi) Settings",
    installApiLabel: "Install your MEOW API for free",
    installApiTooltip: "Meow API (Wuzapi) (Beta)",
    apiUrlLabel: "API URL (https://subwuzapi.com.br)",
    checkApiStatus: "Check API Status in a new tab",
    invalidUrlMessage: "Please enter a valid URL before continuing!",
    globalKeyLabel: "Global Key",
  },
  configuracoes: {
    tabs: {
      gerais: "General Settings",
      botsIA: "Bots and AI",
      integracoes: "Integrations",
      crm: "CRM",
      sessoes: "Sessions",
    },
    sidebar: {
      googleCalendar: "Google Calendar",
      vapi: "Vapi",
      tutoriais: 'Tutorials',
      webchat: 'WebChat',
      groqcloud: 'GroqCloud',
      grok: 'Grok',
      gemini: 'Gemini',
      qwen: 'Qwen',
      claude: 'Claude',
      deepseek: 'Deepseek',
      ollama: 'Ollama',
      lm: 'LM Studio',
      payment: "Payment",
      gerais: "General Configurations",
      smtp: "SMTP",
      typebot: "Typebot",
      chatGPT: "Chat GPT",
      n8n: "N8N",
      dify: "Dify",
      dialogflow: "Dialogflow",
      webhooks: "Webhooks",
      meta: "Meta",
      evolution: "Evolution API",
      wuzapi: "Wuzapi API",
      hub: "Hub Notificame",
      sms: "SMS",
      kanban: "Kanban and Lanes",
      motivos: "Demands",
      variaveis: "Variables",
      sessoes: "List Sessions",
    },
    tooltips: {
      toggleSidebar: "Show/Hide Menu",
    },
  },
  configuracoesWebchat: {
    copyCodeError: 'Error copying code',
    sucessCopy: 'Code successfully copied!',
    copyCode: 'Copy code',
    widgetCode: 'Webchat Widget Code',
    tokenWarning2: 'This token is used to authenticate WebSocket connections for your webchat. Keep it safe and do not share it.',
    generateNewToken: 'Generate new token',
    tokenWarning: 'The token is required for WebChat connection.',
    autenticationToken: 'Authentication token',
    title: 'WebChat Settings',
    enableWebchat: 'Enable WebChat',
    enableWebchatCaption: 'When enabled, the system will consume the WebChat.',
    webchatUrlLabel: 'WebChat URL:',
    webchatConfigurado: 'The webchat is configured and ready to use.',
    wssFuncionando: 'The WebSocket connection is working correctly.',
    gerarWidget: 'You can generate the widget to implement on your website.',
    wssNaoFuncionando: 'The webchat is configured, but the WebSocket connection is not working.',
    verificarWss: 'Check if the WebSocket server is online and accessible.',
    solicitarInstalacao: 'To use the webchat, you need to ask the system administrator to install the webchat interface.',
    configurarAmbiente: 'WSS_URL and WSS_PORT settings must be configured in the environment.',
    selecionarCanal: 'Select the channel to generate the widget',
    gerarWidgetBtn: 'Generate Widget',
    widgetGerado: 'Widget successfully generated!',
    erroGerarWidget: 'Error generating widget',
    carregandoCanais: 'Loading channels...',
    erroCarregarCanais: 'Error loading channels',
    tenantErro: 'Error loading tenant',
    tokenUpdated: 'Token successfully updated!',
    tokenError: 'Error generating new token. Please try again',
  },    
  configuracoesModalCampanha: {
    create: "Create Lane",
    edit: "Edit Lane",
    name: "Lane Name",
    position: "Position",
    notifications: {
      created: "Lane created!",
      updated: "Lane updated!",
    },
  },
  configuracoesModalMotivos: {
    create: "Create Demand",
    edit: "Edit Demand",
    name: "Demand Name",
    notifications: {
      created: "Demand created!",
      updated: "Demand updated!",
    },
  },
  configuracoesGerais: {
    labels: {
      allowPause: "Allow Pause",
      useUserBusinessHours: "Use User Business Hours",
      scanContacts: "Scan Contacts without LID",
      postmanLink: 'Postman Link',
      listarPelaUltimaMensagem: 'List by last message',
      forceReason: 'Force demand definition when closing service',
      syncTicketData: 'Sync Ticket Data',
      controlFeatures: 'Control Features',
      syncMessagesUpdate: 'Update Imported Messages Date',
      ignoreIgStories: "Ignore Instagram Stories",
      audioPlugin: 'Using Audio Plugin (Beta)',
      audioModule: 'Using audio module with Waves (Beta)',
      showGroupsForAll: "Show all groups in the ticket list",
      persistirMedia: "Persist Media Downloads (Baileys)",
      showClosedForAll: "Show all closed in the ticket list",
      waitProcessing: 'Enable waiting on message processing with external integrations  (Typebot, ChatGPT...)',
      openChat: 'Enable Waba message sending outside the window (does not guarantee delivery)',
      shutdownWallet: "Disable external integrations when walletization is active",
      notViewAssignedTickets: "Do not view Tickets already assigned to other users",
      notViewTicketsChatBot: "Do not view Tickets in the ChatBot",
      directTicketsToWallets: "Force service via Wallet",
      ticketNulo: "View Tickets without Assigned User or Queue",
      supervisor: "Remove supervisor view privileges",
      semRedis: "Use Fast Message Sending",
      chatbotLane: "Enable Chatbot Service Tab",
      chatbotFix: "Fix connections at the top of the service list",
      ignoreGroupMsg: "Ignore Group Messages",
      rejectCalls: "Reject calls on WhatsApp",
      callRejectMessage: "Message when rejecting calls:",
      agruparTickets: "Show message history",
      transbordo: "Message Overflow",
      atualizarNomes: "Do not update name when receiving messages",
      forcarAdmin: "Force admin in service",
      signed: "Disable signature control",
      universalCounter: "Counter in top tabs (Private/Groups)",
      autoClose: "Automatically resolve inactive tickets",
      autoCloseTime: "Choose an option (time in minutes)",
      autoCloseMessage: "Closing message",
      ticketLimit: "Filter old tickets",
      days: "Days",
      ticketLimitDaysAgo: "Days ago to filter",
      notificationSilenced: "Sound Notifications",
      forbiddenNumbers: "Numbers blocked on the platform",
      resetFlow: "Reset Chatbot Flow",
      maxRetries: "Maximum number of times the schedule message should be sent",
      privateMessageLimit: "Number of messages in internal chat",
      ticketLimitNumber: "Number of tickets consulted",
      validateAllContacts: "Validate All Contacts",
      forcePendingUser: "Force current user when changing status to pending",
    },
    captions: {
      allowPause: 'When activating this option, the system will allow the service to be paused temporarily.',
      useUserBusinessHours: 'When activating this option, the system will use the user\'s business hours to define the service time.',
      scanContacts: 'When activating this option, the system will scan all contacts without LID and update them.',
      postmanLink: 'When changing the Postman link, the system will update the API collection page.',
      listarPelaUltimaMensagem: 'When activating this option, the system will list tickets by the last message received.',
      forceReason: 'When activating this option, the system will require the definition of demand when closing the service.',
      syncTicketData: 'When this option is enabled, the system will sync the ticket data to the database.',
      controlFeatures: 'When this option is enabled, the system will control the features of spying and forced closure for users.',
      syncMessagesUpdate: 'When this option is enabled, the system will update the imported messages date to their original timestamp.',
      audioPlugin: 'By enabling this option, a new beta audio plugin will be used.',
      audioModule: 'By enabling this option, a new audio module with sound waves will be used.',
      ignoreIgStories: "By enabling this option, Instagram Stories will not be visible to users",
      showGroupsForAll: 'By enabling this option, Groups will be visible to all users',
      showClosedForAll: 'By enabling this option, Closed will be visible to all users',
      persistirMedia: 'By enabling this option, sequential attempts will be made to download media received via the Unofficial Baileys API.',
      waitProcessing: 'When receiving more than one message in customer service, the system will only process new messages after the first message has been responded to. Messages received in the meantime will not interact with the external integration.',
      openChat: 'Enables the sending of WABA messages after sending any template, even if the conversation window is not open. It does not guarantee message delivery. Consult Waba policies',
      shutdownWallet: "When enabled, external integrations like ChatGPT, Typebot, and others will be disabled when walletization is active, and a new ticket is received.",
      notViewAssignedTickets: "Only the ticket's responsible user and administrators can view it.",
      notViewTicketsChatBot: "No user can view tickets attended by ChatBot.",
      directTicketsToWallets: "Routes service to wallet owners of clients.",
      ticketNulo: "All users will see tickets without an assigned user or queue.",
      supervisor: "Supervisors will follow regular user logic.",
      semRedis: "Messages will be sent without pacing.",
      chatbotLane: "Exclusive tab for ChatBots will be added.",
      ignoreGroupMsg: "The system will not open tickets for groups.",
      rejectCalls: "Audio and video calls will be automatically rejected.",
      agruparTickets: "Displays all messages associated with the channel and contact.",
      transbordo: "Overflow walletized services if the user is offline.",
      atualizarNomes: "Does not update contact name on received messages.",
      forcarAdmin: "Pending tickets will be assigned to admin.",
      signed: "Users cannot disable signatures.",
      universalCounter: "Displays a counter for open tickets in top tabs.",
      autoClose: "Idle tickets will be automatically resolved.",
      ticketLimit: "Filters old tickets.",
      notificationSilenced: "Receive sound notifications.",
      forbiddenNumbers: "List of numbers blocked on the platform.",
      validateAllContacts: "Validates the number of all system contacts.",
      resetFlow: "Resets the active flow for new tickets.",
      maxRetries: "Maximum number of absence messages sent.",
      privateMessageLimit: "Number of messages in internal chat per ticket.",
      ticketLimitNumber: "Number of tickets queried at a time.",
    },
    notifications: {
      scanContactsSuccess: "Contacts updated successfully!",
      scanContactsError: "Error updating contacts",
      updatingMessagesDate: 'Updating imported messages date...',
      success: "Configuration successfully updated.",
      error: "Error updating the configuration.",
      warningTicketSettings: "You cannot use these settings together: Tickets assigned to other users, Tickets in the ChatBot, and Tickets without an assigned queue or user.",
      processStarted: "Process started.",
      contactsValidated: "Contacts validated.",
      errorValidatingContacts: "Error validating contacts.",
      sendingMessages: "Attempting to send pending messages.",
      errorSendingMessages: "Error sending messages.",
      configChanged: "Configuration updated.",
    },
    dialogs: {
      confirmationTitleScanContacts: "Do you want to scan all contacts without LID?",
      scanContacts: "Scan contacts without LID",
      confirmationTitle4: "Do you want to sync the ticket data to the database?",
      syncTicketData: "Sync ticket data",
      confirmationTitle: "Do you want to send/resolve all pending messages in the system?",
      resolvePendingMessages: "Resolve pending messages in the system",
      sendPendingMessages: "Send pending messages in the system",
      confirmationTitle2: 'Do you want to update the dates of the synced messages?',
      updateMessagesDate: 'Update imported messages date',
      confirmationTitle3: 'Warning: Having too many contact numbers in the system may lead to WhatsApp being blocked. Do you want to validate all contacts in bulk?',
      validateAllContacts: 'Validate all system contacts in bulk.'
    },
  },
  configuracaoPagamentoAtraso: {
    title: "Payment Information",
    status: {
      pending: "Pending",
      overdue: "Overdue",
      paid: "Paid",
    },
    dueDate: "Due Date",
    paymentLink: "Payment Link",
    checkPaymentStatus: "Check Invoice Status",
    invalidUrlMessage: "Please enter a valid URL before continuing!",
  },
  configuracaoTenantSmtp: {
    title: "SMTP Settings",
    enableSmtp: "Enable SMTP",
    enableSmtpCaption: "When enabled, the system will send information to the user's email.",
    emailHost: "Email Server (Host):",
    emailPort: "SMTP Port",
    emailUser: "Email User:",
    emailPass: "Email Password:",
    secureProtocol: "Security Protocol",
    secureProtocolCaption: "Enable secure protocol.",
    successMessage: "Configuration successfully updated.",
    errorMessage: "Error updating configuration.",
    toggleOn: "Enabled",
    toggleOff: "Disabled",
    label: "SMTP Config",
  },
  contactsModal: {
    updateLidButton: 'Update LID',
    updateLidSuccessMessage: 'LID updated successfully!',
    updateNameSuccessMessage: 'Name updated successfully!',
    updateNameButton: 'Update Name',
    placeholderLid: 'WhatsApp-LID',
    hintLid: 'WhatsApp-LID',
    labelLid: 'WhatsApp-LID',
    titleAdd: "Add Contact",
    titleEdit: "Edit Contact",
    labelName: "Name",
    labelNumber: "Number",
    labelEmail: "Email",
    labelCpf: "CPF/CNPJ",
    labelBirthday: "Birthday",
    labelFirstName: "First Name",
    labelLastName: "Last Name",
    labelBusinessName: "Business",
    labelMessengerId: "Messenger ID",
    labelInstagramPK: "Instagram ID",
    labelhubWhatsapp: 'ID Whatsapp Hub',
    placeholderhubWhatsapp: 'ID Whatsapp Hub',
    hinthubWhatsapp: 'ID Whatsapp Hub',
    walletSectionTitle: "Wallet",
    walletNoAvailable: "Oops... No wallets available!",
    tagSectionTitle: "Tag",
    tagNoAvailable: "Oops... No tags available!",
    additionalInfoSectionTitle: "Additional Information",
    saveButtonLabel: "Save",
    exitButtonLabel: "Exit",
    createSuccessMessage: "Contact created!",
    editSuccessMessage: "Contact updated!",
    removeInfoErrorMessage: "Error removing additional information.",
    validationErrorMessage: "Oops! Check the errors...",
    errorContact: "An error occurred while creating the contact",
    invalidContact: "Invalid contact",
    errorUsers: "Problem loading users.",
    errorTags: "Problem loading tags.",
    placeholderNumber: "+CountryCode (AreaCode) 99999 9999",
    hintNumber: "If an active WABA connection exists in the system, you must provide the exact WhatsApp account number.",
    placeholderCpf: "CPF/CNPJ",
    hintCpf: "The CPF/CNPJ number must include special characters like dashes and slashes.",
    placeholderBirthday: "MM/DD/YYYY",
    hintBirthday: "The birthday must be in the format MM/DD/YYYY.",
    placeholderFirstName: "First Name",
    hintFirstName: "First name",
    placeholderLastName: "Last Name",
    hintLastName: "Last name",
    placeholderBusinessName: "Business",
    hintBusinessName: "Business",
    placeholderMessengerId: "Messenger ID",
    hintMessengerId: "Messenger ID",
    placeholderInstagramPK: "Instagram ID",
    hintInstagramPK: "Instagram ID",
  },
  contacts: {
    forbidden: "Removing contacts with registered tickets or opportunities is restricted to administrators.",
    deleteSelectedContacts: "Do you want to delete {count} selected contact(s)?",
    warning1DeleteSelect: "Contact ID {contactId} has registered tickets. Do you want to force delete?",
    warning2DeleteSelect: "Contact ID {contactId} has registered opportunities. Do you want to force delete?",
    deleteCanceled: "User canceled forced deletion",
    deleteError: 'Error forcibly deleting contact',
    deleteMessage: 'Contact forcibly deleted successfully',
    deleteTitle: 'Force Delete',
    warning1: 'This contact has registered tickets. Do you want to force delete? (This will delete all related tickets and messages)',
    warning2: 'This contact has registered opportunities. Do you want to force delete? (This will delete all related opportunities)',
    agruparLid: 'Group contacts by LID',
    agruparLidTitle: 'Group contacts by LID',
    agruparLidMessage: 'When this option is enabled, contacts with the same WhatsApp LID will be grouped into a single contact.',
    lid: "WhatsApp LID",
    tableTitle: "Contacts",
    searchPlaceholder: "Search",
    walletFilterLabel: "Filter by Wallet",
    tagFilterLabel: "Filter by Tag",
    syncContactsLabel: "Sync Contacts",
    syncGroupsLabel: "Sync Groups",
    removeDuplicatesLabel: "Remove Duplicates",
    checkDigit: "Check Ninth Digit (BR)",
    addContactLabel: "Add Contact",
    importContactsLabel: "Import Contacts",
    importWarning: "The file must contain Name and Number columns.",
    exportContactsLabel: "Export Contacts",
    photoColumn: "Photo",
    nameColumn: "Name",
    whatsappColumn: "WhatsApp",
    businessColumn: "Business",
    telegramColumn: "Telegram",
    messengerColumn: "Messenger",
    instagramColumn: "Instagram",
    hubWaba: 'Waba (Hub)',
    emailColumn: "Email",
    cpfColumn: "CPF",
    birthdayColumn: "Birthday",
    firstNameColumn: "First Name",
    lastNameColumn: "Last Name",
    businessNameColumn: "Business",
    walletColumn: "Wallet",
    validateContact: "Validate Contacts",
    validateContactWarning: 'When checking this option, you must have an active connection to validate the contacts. When used with Unofficial APIs, validating many numbers may result in blocking',
    tagsColumn: "Tags",
    kanbanColumn: "Kanban",
    actionsColumn: "Actions",
    blockContactColumn: "Block Contact",
    blockChatbotColumn: "Block Chatbot",
    confirmSyncContactsTitle: "Attention!! Do you really want to sync contacts?",
    confirmSyncContactsMessage:
      "All contacts you've already chatted with on WhatsApp will be created. This might take some time...",
    confirmRemoveDuplicatesTitle: "Attention!! Do you want to delete duplicate contacts?",
    confirmRemoveDuplicatesMessage:
      "All tickets and messages will be assigned to the oldest duplicate contact...",
    confirmSyncGroupsTitle: "Attention!! Do you really want to sync groups?",
    confirmSyncGroupsMessage:
      "All groups you've already chatted with on WhatsApp will be created. This might take some time...",
    deleteContactTitle: "Attention!! Do you really want to delete the contact?",
    deleteContactSuccess: "Contact deleted!",
    syncInProgressMessage: "This may take some time...",
    blockContactSuccess: "Block status updated successfully!",
    blockContactError: "Error updating block status.",
    blockChatbotSuccess: "Chatbot block status updated successfully!",
    blockChatbotError: "Error updating chatbot block status.",
    downloadModelLabel: "Download Template",
    selectDestiny: "Select Destination",
    modelDownloadHint: "Name;Number;Email;CPF;Birthday;FirstName;LastName;Business",
    uploadFileLabel: "Import contacts",
    fileUploadHint: "The file must contain Name and Number columns.",
    noTagsAvailable: "Oops... No tags created!",
    noTagsAvailableWarning: "Register new tags in the system administration.",
    noWalletsAvailable: "Oops... No wallets available!",
    downloadCsvHint: "Download template in CSV format.",
    saveButton: "Save",
    cancelButton: "Cancel",
    coluumnsButton: "Columns",
    block: "Block",
    blockBot: "Block Chatbot",
    queueDestiny: "Queue Destination",
    userDestiny: "User Destination",
    dialog: {
      contact: "Contact",
      selectChannel: "Select the channel to start the service.",
      start: "Start",
      cancel: "Cancel",
      confirmDelete: "Do you really want to delete the contact?",
      syncContactsTitle: "Sync Contacts",
      syncContactsMessage: "All contacts will be created. This might take some time...",
      syncGroupsTitle: "Sync Groups",
      syncGroupsMessage: "All groups will be created. This might take some time...",
      removeDuplicatesTitle: "Remove Duplicate Contacts",
      removeDuplicatesMessage: "All tickets will be assigned to the oldest contact.",
      checkDigitTitle: "Treat Ninth Digit for Brazilian Numbers",
      checkDigitMessage: "The contact with the incorrect number will be removed, along with tickets and messages."
    },
    notifications: {
      existingTicket: "There is already an ongoing service for",
      existingTicketDetails: "There is already an ongoing service",
      contactDeleted: "Contact deleted successfully!",
      deleteError: "Error deleting contact.",
      tokenUpdateError: "Error updating token.",
      started: "Service started",
      importInProgress: "Import in progress.",
      importCaption: "The page will be refreshed once finished.",
      importSuccess: "Contacts imported successfully!",
      importError: "Error importing contacts.",
      loadQueuesError: "Error loading queues.",
      loadSynError: "Error synchronizing.",
      loadUsersError: "Error loading users.",
      ticketTransferred: "Ticket successfully transferred.",
      exportError: "Error exporting contacts.",
      syncContact: "Contacts are being updated. This may take some time...",
      syncGroups: "Groups are being updated. This may take some time...",
    },
    actions: {
      blockBot: "Block Chatbot",
      queueDestiny: "Queue Destination",
      userDestiny: "User Destination",
    },
  },
  customizar: {
    logoDark: {
      title: "Dark Logo",
      chooseFile: "Choose File",
      upload: "Upload",
      current: "Current Dark Logo"
    },    
    title: "Customize Application",
    forceLogout: {
      title: "Force Logout Configuration per Tenant",
      description: "Configure whether each tenant should have single-session (force logout) enabled or disabled.",
      selectTenant: "Select Tenant",
      forceLogout: "Force Logout",
      enabled: "Enabled",
      disabled: "Disabled",
      forceLogoutEnabled: "Force Logout Enabled",
      forceLogoutDisabled: "Force Logout Disabled",
      warning1: "Single session enabled - users will be logged out when logging in from another device",
      warning2: "Single session disabled - users can log in on multiple devices"
    },
    masterkey: {
      generateRandom: "Generate Random",
      title: "MasterKey Configuration",
      description: "Configure the MasterKey for the application",
      enabled: "MasterKey Enabled",
      disabled: "MasterKey Disabled",
      lastUsed: "MasterKey Usage Log",
      keyLabel: "MasterKey",
      warningTitle: "Warning!!",
      warningText: "The MasterKey is a unique access key for the application. Please keep it in a safe place and do not share it with anyone. This key can only be edited by the superadmin of Tenant 1"
    },    
    tabs: {
      masterkey: "MasterKey",
      colors: "Colors",
      branding: "Branding",
      tutorials: "Tutorials",
      forceLogout: "Force Logout"
    },    
    chooseColors: "Choose Colors",
    colors: {
      neutral: "Neutral Color",
      primary: "Primary Color",
      secondary: "Secondary Color",
      accent: "Accent Color",
      warning: "Warning Color",
      negative: "Negative Color",
      positive: "Positive Color",
      light: "Light Color",
    },
    saveColors: "Save Colors",
    applyColors: "Apply Color Changes",
    logo: {
      title: "Logo",
      chooseFile: "Choose File",
      upload: "Upload",
      current: "Current Logo",
    },
    favicon: {
      title: "Favicon",
      chooseFile: "Choose File",
      upload: "Upload",
      current: "Current Favicon",
    },
    video: {
      title: "Video (Home)",
      chooseFile: "Choose file",
      upload: "Upload",
      current: "Current Video"
    },      
    appName: {
      title: "Application Name",
      label: "Name",
      update: "Update Name",
    },
    frontend: {
      rebuildTitle: "Apply Logo, Favicon, and Name Changes",
      warning: "Changes will only work in installations with the default folder and user setup from the automatic installer.",
      rebuildMessage: "Please wait, applying changes to your frontend... Your frontend is being rebuilt now.",
      rebuildButton: "Apply Changes",
    },
    notifications: {
      errorVideoSize: "The selected video is too large. The maximum size is 5MB.",
      errorLogo: "Invalid file format. Only JPG, JPEG, and PNG files are allowed.",
      errorIcon: "Invalid file format. Only ICO files are allowed.",
      successLoadColors: "Colors loaded successfully.",
      errorLoadColors: "Error loading colors.",
      successSaveColors: "Colors saved successfully.",
      errorSaveColors: "Error saving colors.",
      successUploadLogo: "Logo uploaded successfully.",
      errorUploadLogo: "Error uploading logo.",
      successUploadIcon: "Favicon uploaded successfully.",
      errorUploadIcon: "Error uploading favicon.",
      successRebuildFrontend: "Frontend rebuilt successfully.",
      errorRebuildFrontend: "Error rebuilding frontend.",
      successUpdateAppName: "Application name updated successfully.",
      errorUpdateAppName: "Error updating application name.",
    },
  },
  equipes: {
    title: "Teams",
    columns: {
      id: "#",
      group: "Team",
      isActive: "Active",
      actions: "Actions",
    },
    actions: {
      addUser: "Add/Remove Users",
      edit: "Edit Team",
      delete: "Delete Team",
    },
    notifications: {
      deleted: "Team {group} deleted!",
      errorLoading: "Error loading teams.",
      errorDelete: "Error deleting team.",
      created: "Team created successfully!",
      updated: "Team updated successfully!",
    },
    dialog: {
      deleteTitle: "Attention!!",
      deleteMessage: 'Do you really want to delete the team "{group}"?',
    },
    modal: {
      titleCreate: "Create Team",
      titleEdit: "Edit Team",
      nameLabel: "Team Name",
      activeLabel: "Active",
      cancelButton: "Cancel",
      saveButton: "Save",
      notifications: {
        created: "Team created successfully!",
        updated: "Team updated successfully!",
        error: "Error saving team.",
      },
    },
    modalUser: {
      title: "Manage Team Users",
      placeholder: "Select users to add",
      tooltip: "Check or uncheck users from the list.",
      saveButton: "Save",
      closeButton: "Close",
      notifications: {
        updated: "Users updated!",
        error: "Error updating users!",
      },
    },
  },
  etiquetas: {
    title: "Tags",
    columns: {
      id: "#",
      tag: "Tag",
      color: "Color",
      isActive: "Active",
      actions: "Actions",
    },
    notifications: {
      created: "Tag created successfully!",
      updated: "Tag updated successfully!",
      deleted: "Tag {tag} deleted!",
      errorLoading: "Error loading tags.",
      errorDelete: "Error deleting tag.",
    },
    dialog: {
      deleteTitle: "Attention!!",
      deleteMessage: 'Do you really want to delete the tag "{tag}"?',
    },
  },
  modalEtiqueta: {
    titleCreate: "Create Tag",
    titleEdit: "Edit Tag",
    nameLabel: "Tag Name",
    colorLabel: "Color",
    activeLabel: "Active",
    cancelButton: "Cancel",
    saveButton: "Save",
    notifications: {
      created: "Tag created successfully!",
      updated: "Tag updated successfully!",
      error: "Error saving tag.",
    },
  },
  fechamento: {
    title: "Farewells",
    messageLabel: "Message",
    userLabel: "User",
    dateLabel: "Date",
    actionsLabel: "Actions",
    deleteAllButton: "Delete All",
    searchPlaceholder: "Search",
    deleteConfirmation: 'Do you really want to delete the farewell "{id}"?',
    deleteAllConfirmation: "Do you really want to delete all farewell records?",
    deleteSuccess: "Farewell deleted successfully!",
    deleteAllSuccess: "All farewells were successfully deleted!",
    notifications: {
      error: "Error processing the request.",
    },
    system: "System",
  },
  modalDespedida: {
    titleCreate: "Create Farewell",
    titleEdit: "Edit Farewell",
    label: "Farewell",
    notifications: {
      created: "Farewell created successfully!",
      updated: "Farewell updated successfully!",
      error: "An error occurred while saving the farewell.",
    },
  },
  filas: {
    title: "Queues",
    notifications: {
      created: "Queue created successfully!",
      updated: "Queue updated successfully!",
      deleted: "Queue deleted successfully!",
      error: "An error occurred while processing the queue.",
    },
    confirmDelete: 'Do you really want to delete the queue "{name}"?',
  },
  modalFila: {
    title: {
      create: "Create Queue",
      edit: "Edit Queue",
    },
    notifications: {
      created: "Queue created successfully!",
      updated: "Queue updated successfully!",
      error: "An error occurred while processing the queue.",
    },
    labels: {
      name: "Queue Name",
    },
  },
  horarioAtendimento: {
    title: "Business Hours",
    tooltips: {
      open: "Open: Establishment open all day. No absence message will be sent.",
      closed: "Closed: Establishment closed all day. Absence message will be sent regardless of the time.",
      schedule:
        "Schedule: Represents the establishment's operating hours. Absence message will be sent outside the defined hours.",
      important: "**Important: The absence message will be sent after automatic service ends.",
    },
    labels: {
      holidaysInfo: "Holidays are days that the establishment is not open. These days will be considered as closed days.",
      closed: "Closed",
      absenceMessage: "Absence Message",
      time: "at",
      holidays: "Holidays",
      holidayDate: "Holiday Date",
      holidayDescription: "Holiday Description",
      addHoliday: "Add Holiday",
    },
    notifications: {
      scheduleUpdated: "Operating hours updated.",
      absenceMessageUpdated: "Absence message updated.",
      holidaysUpdated: "Holidays updated.",
    },
  },
  businessHours: {
    warnings: {
      overlap: "The schedules cannot overlap. Adjust the intervals.",
      invalidTime: "The schedules must be between 00:01 and 23:59.",
        invalidHour: "Invalid schedule"
    },
    days: {
      0: "Sunday",
      1: "Monday",
      2: "Tuesday",
      3: "Wednesday",
      4: "Thursday",
      5: "Friday",
      6: "Saturday",
    },
    types: {
      O: "Open",
      C: "Closed",
      H: "Hours",
      L: "Free",
      B: "Blocked",
    },
    labels: {
      start: "Start",
      end: "End",
      to: "to",
    },
    notifications: {
      updated: "Business hours successfully updated.",
    },
  },
  kanbanMenu: {
    kanban: "Kanban",
    tags: "Tags",
  },
  kanbans: {
    cardsLoaded: "Cards loaded successfully!",
    contactTitle: "Contact",
    title: "Visual Management of Services",
    loadingMessage: "Please wait, loading Kanban information...",
    attendances: "Attendances",
    contacts: "Contacts",
    removeAttendanceTitle: "Remove Attendance from Board",
    removeAttendanceMessage: "Do you want to remove the attendance?",
    startAttendance: "Select the channel to start the service.",
    existingTicketMessage:
      "{title} has an ongoing service. Do you want to open the service?",
    existingTicketAdminOnly:
      "{title} has an ongoing service. Only an administrator can assign this service to you.",
    loadingNewData: "Loading new data into the Kanban... Please wait!",
    successEdit: "All cards were successfully edited!",
    contactEdited: "Contact edited!",
    contactEditError: "An error occurred while editing the contacts.",
    kanbanUpdated: "Kanban updated!",
    openAttendance: "Open Attendance",
    selectChannel: "Select the channel to start the service.",
    contactHasTicket:
      "{title} has an ongoing service. Do you want to open the service?",
    adminOnlyTicket:
      "{title} has an ongoing service. Only an administrator can assign this service to you.",
    successEditCards: "All cards were successfully edited!",
    loadingKanban: "Loading new data into the Kanban... Please wait!",
    contactEdited: "Contact successfully edited!",
    contactEditError: "Error editing contacts.",
    kanbanUpdated: "Kanban updated!",
    tokenUpdateError: "Failed to update token.",
    fetchingContactsError: "Error retrieving contacts.",
    noNameAvailable: "Name not available",
    fetchingKanbansError: "Error listing Kanbans.",
    kanbanUpdated: "Kanban updated successfully!",
  },
  tagsKanban: {
    contacts: "Contacts",
    title: "Tag View in Kanban",
    description:
      "View only, it is not possible to save tags while manipulating cards.",
    loading: "Please wait, loading Kanban information...",
    removeTitle: "Remove Attendance from Board",
    removeMessage: "Do you want to remove the attendance?",
    cardEdited: "Contact edited!",
    startService: "Select the channel to start the service.",
    serviceStarted: "Service Started",
    contactError: "Error retrieving contacts.",
    kanbanError: "Error listing Kanbans.",
    cardsSaved: "All cards were successfully edited!",
    saveError: "An error occurred while editing contacts.",
    existingServiceTitle: "Ongoing Service",
    existingServiceMessageUser:
      "{title} has an ongoing service. Only an administrator can assign this service to you.",
    existingServiceMessageAdmin:
      "{title} has an ongoing service (Service: {ticketId} - Queue: {queueId}). Do you want to open the service?",
    tokenError: "Failed to update token.",
    buttons: {
      yes: "Yes",
      no: "No",
      ok: "OK",
    },
  },
  cardsTags: {
    title: "Tag Cards",
    description: "View detailed information about contacts.",
    tagsTooltip: "Tag",
    walletTooltip: "Wallet",
    actions: {
      whatsapp: "WhatsApp WWebJs Service",
      baileys: "Baileys Service",
      meow: "Meow Service",
      evo: "Evolution Service",
      waba: "Waba Service",
    },
    phoneTooltip: "Phone",
    removeTooltip: "Remove",
  },
  cardsKanbans: {
    title: "Kanban Cards",
    description: "View detailed information about contacts.",
    tagsTooltip: "Tag",
    walletTooltip: "Wallet",
    actions: {
      whatsapp: "WhatsApp WWebJs Service",
      baileys: "Baileys Service",
      meow: "Meow Service",
      evo: "Evolution Service",
      waba: "Waba Service",
      remove: "Remove",
    },
    phoneTooltip: "Phone",
  },
  lanes: {
    title: "Kanban Lanes",
    actions: "Actions",
    add: "Add New Lane",
    edit: "Edit Lane",
    deleteConfirm: 'Do you really want to delete the Kanban "{name}"?',
    deleteSuccess: "Kanban {name} deleted successfully!",
    columns: {
      id: "ID",
      name: "Lane",
      actions: "Actions",
    },
    notifications: {
      loadError: "Error loading lanes.",
      deleteError: "Error deleting lane.",
    },
  },
  modalLanesKanban: {
    createTitle: "Create Kanban",
    editTitle: "Edit Kanban",
    nameLabel: "Kanban Name",
    createSuccess: "Kanban created successfully!",
    updateSuccess: "Kanban updated successfully!",
    notifications: {
      error: "Error processing Kanban.",
    },
  },
  modalMensagemRapida: {
    createTitle: "Create Quick Message",
    editTitle: "Edit Quick Message",
    idLabel: "ID",
    keyLabel: "Key",
    keyHint: "The key is the shortcut to search for the message by users.",
    messageLabel: "Message",
    placeholder: "Type the message",
    sendAsAudio: "Send as Recorded Audio",
    fileLabel: "Choose the file",
    removeFile: "Remove File",
    saveSuccess: {
      create: "Quick message created successfully!",
      update: "Quick message updated successfully!",
    },
    saveError: "An error occurred while saving the quick message.",
    variablesLabel: "Variables",
    emojiLabel: "Emoji",
    variablesList: [
      { label: "Name", value: "{{name}}" },
      { label: "Greeting", value: "{{greeting}}" },
      { label: "Protocol", value: "{{protocol}}" },
      { label: "Email (if exists)", value: "{{email}}" },
      { label: "Phone", value: "{{phoneNumber}}" },
      { label: "Kanban (if exists)", value: "{{kanban}}" },
      { label: "Attendant (if in service)", value: "{{user}}" },
      { label: "Attendant Email (if in service)", value: "{{userEmail}}" },
      { label: "First Name (if exists)", value: "{{firstName}}" },
      { label: "Last Name (if exists)", value: "{{lastName}}" },
      { label: "Business (if exists)", value: "{{businessName}}" },
    ],
  },
  mensagemRapida: {
    title: "Quick Messages",
    add: "Add Quick Message",
    edit: "Edit Quick Message",
    create: "Create Quick Message",
    key: "Key",
    message: "Message",
    file: "File",
    recordedAudio: "Recorded Audio",
    noFile: "No File",
    fileOpen: "Open File",
    active: "Active",
    inactive: "Inactive",
    actions: "Actions",
    deleteConfirmation: 'Do you really want to delete the message with key "{key}"?',
    deleteSuccess: "Message deleted successfully!",
    saveSuccess: {
      create: "Quick message created successfully!",
      update: "Quick message updated successfully!",
    },
    saveError: "An error occurred while saving the quick message.",
  },
  notas: {
    title: "Notes",
    searchPlaceholder: "Search",
    dateFilterPlaceholder: "Filter by date",
    note: "Note",
    user: "User",
    ticket: "Service",
    date: "Date",
    actions: "Actions",
    noResults: "No notes found.",
    deleteConfirmation: 'Do you really want to delete the note "{note}"?',
    deleteSuccess: "Note deleted successfully!",
    saveSuccess: {
      create: "Note created successfully!",
      update: "Note updated successfully!",
    },
    saveError: "An error occurred while saving the note.",
    system: "System",
  },
  modalNotas: {
    titleCreate: "Create Note",
    titleEdit: "Edit Note",
    noteLabel: "Note Number",
    ticketLabel: "Service",
    saveSuccess: "Note saved successfully!",
    saveError: "An error occurred while saving the note.",
  },
  modalNotaAtendimento: {
    titleCreate: "Create Service Note",
    titleEdit: "Edit Service Note",
    labelNote: "Service Note",
    saveSuccess: "Note saved successfully!",
    saveError: "An error occurred while saving the note.",
  },
  notificacao: {
    title: "Notifications",
    add: "Add Notification",
    deleteAll: "Delete All",
    deleteOne: 'Do you really want to delete the notification "{id}"?',
    deleteAllConfirm: "Do you really want to delete all notifications?",
    created: "Notification created successfully!",
    updated: "Notification updated successfully!",
    deleted: "Notification deleted successfully!",
    allDeleted: "All notifications have been deleted!",
    columns: {
      id: "#",
      message: "Message",
      userId: "User ID",
      userName: "User",
      isRead: "Read Status",
      createdAt: "Date",
      actions: "Actions",
    },
    isRead: {
      read: "Read",
      unread: "Unread",
    },
  },
  modalNotificacao: {
    title: {
      create: "Create Notification",
      edit: "Edit Notification",
    },
    fields: {
      message: "Notification",
    },
    notifications: {
      created: "Notification created successfully!",
      updated: "Notification edited successfully!",
      error: "An error occurred while creating or editing the notification.",
    },
  },
  pagamentoTenants: {
    title: "Tenants Payments",
    loading: "Please wait, loading tenant payment information...",
    tenantId: "Tenant ID",
    paymentInfo: "Payment Information",
    columns: {
      id: "Payment ID",
      status: "Status",
      dueDate: "Due Date",
      bankSlipUrl: "Payment Link",
    },
    status: {
      pending: "Pending",
      overdue: "Overdue",
    },
    actions: {
      toggleTable: "Show Data",
    },
  },
  planos: {
    title: "Plans",
    columns: {
      id: "ID",
      value: "Value",
      connections: "Connections",
      users: "Users",
      trial: "Trial",
      trialPeriod: "Period",
      actions: "Actions",
    },
    buttons: {
      add: "Add Plan",
      tokenAsaas: "Asaas Token",
      viewToken: "View Token",
    },
    tooltips: {
      showToken: "Show Token",
    },
    status: {
      enabled: "Active",
      disabled: "Inactive",
    },
    messages: {
      deleteConfirmation: 'Do you really want to delete the plan "{id}"?',
      tokenUpdated: "Token updated successfully!",
      tokenUpdateError: "Error updating token.",
    },
  },
  modalPlanos: {
    title: {
      edit: "Edit Plan",
      create: "Create Plan",
    },
    labels: {
      value: "Plan Value",
      connections: "Connections",
      users: "Users",
      trial: "Trial",
      trialPeriod: "Trial Period (days)",
    },
    warnings: {
      trial:
        "Warning: When enabling the trial, the company's data will be deleted from the system after the trial period expires.",
    },
    buttons: {
      cancel: "Cancel",
      save: "Save",
    },
    notifications: {
      created: "Plan created successfully!",
      updated: "Plan updated successfully!",
    },
  },
  protocolos: {
    ticketNotFound: "Service not found.",
    title: "Protocols",
    columns: {
      id: "#",
      protocol: "Protocol",
      userId: "User",
      ticketId: "Service",
      createdAt: "Date",
      actions: "Actions",
    },
    filter: {
      search: "Search",
      date: "Filter by date",
    },
    notifications: {
      deleted: "Protocol deleted!",
      error: "Error loading more protocols.",
    },
    confirm: {
      delete: 'Do you really want to delete the protocol "{protocol}"?',
    },
    buttons: {
      edit: "Edit",
      delete: "Delete",
    },
  },
  modalProtocolo: {
    title: {
      create: "Create Protocol",
      edit: "Edit Protocol",
    },
    fields: {
      protocol: "Protocol Number",
      ticketId: "Service",
    },
    notifications: {
      created: "Protocol created successfully!",
      updated: "Protocol updated successfully!",
      error: "An error occurred while saving the protocol.",
    },
  },
  tasks: {
    title: "Tasks",
    table: {
      headers: {
        id: "ID",
        status: "Status",
        name: "Task",
        description: "Description",
        limitDate: "Due Date",
        owner: "Responsible",
        priority: "Priority",
        comments: "Comments",
        actions: "Actions",
      },
      status: {
        delayed: "🚩 Delayed",
        pending: "🔄 Pending",
        finished: "✅ Finished",
      },
      priority: {
        high: "⚡⚡⚡ High",
        medium: "⚡⚡ Medium",
        low: "⚡ Low",
        none: "😉 None",
      },
    },
    labels: {
      dateFormat: "{day}-{month}-{year}",
    },
    filters: {
      search: "Search for a task",
      status: "Status",
      owner: "Responsible",
      limitDate: "Due Date",
      noResults: "No tasks found.",
    },
    modal: {
      createTask: "Create Task",
      editTask: "Edit Task",
      name: "Name",
      description: "Description",
      limitDate: "Due Date",
      responsible: "Responsible",
      recurrence: "Recurrence",
      recurrenceTimes: "Number of Recurrences",
      status: "Status",
      priority: "Priority",
      comments: "Comments",
      recurrenceOptions: {
        none: "No recurrence",
        sevenDays: "7 days",
        thirtyDays: "30 days",
        fortyFiveDays: "45 days",
        sixtyDays: "60 days",
        seventyFiveDays: "75 days",
        ninetyDays: "90 days",
      },
      statusOptions: {
        delayed: "🚩 Delayed",
        pending: "🔄 Pending",
        finished: "✅ Finished",
      },
      priorityOptions: {
        high: "⚡⚡⚡ High",
        medium: "⚡⚡ Medium",
        low: "⚡ Low",
        none: "😉 None",
      },
      validation: {
        required: "The field {field} is required",
      },
      notifications: {
        userLoadError: "Error loading users.",
        created: "Task created successfully!",
        edited: "Task edited successfully!",
        error: "An error occurred while processing the task.",
      },
    },
    notifications: {
      finishSuccess: "Task completed successfully!",
      duplicateSuccess: "Task duplicated successfully!",
      checkDelayedError: "Error checking delayed tasks.",
      deleteConfirm: 'Do you really want to delete the task "{name}"?',
      deleteSuccess: 'Task "{name}" deleted successfully!',
      taskCreated: "Task created successfully!",
      taskUpdated: "Task updated successfully!",
      taskDuplicated: "Task duplicated successfully!",
      taskCompleted: "Task completed successfully!",
      taskDeleted: "Task deleted successfully!",
      error: "Error performing the action.",
      loadUsersError: "Error loading users.",
      loadTasksError: "Error listing tasks.",
      createSuccess: "Task created successfully!",
      updateSuccess: "Task updated successfully!",
    },
    tooltip: {
      conclued: "Conclude",
      duplicate: "Duplicate",
      edit: "Edit",
      delete: "Delete",
    },
  },
  tenantApi: {
    table: {
      title: "Tenant APIs",
      columns: {
        id: "ID",
        apiToken: "API Token",
        actions: "Actions",
      },
      noData: "No Tenant API found.",
    },
    form: {
      create: "Create Tenant API",
      edit: "Edit Tenant API",
    },
    modal: {
      confirmDelete: 'Do you really want to delete the Tenant API "{id}"?',
      notifications: {
        created: "Tenant API created successfully!",
        updated: "Tenant API updated successfully!",
        deleted: "Tenant API deleted successfully!",
      },
    },
    routes: {
      createTitle: "Routes to create/edit a new tenant via API:",
      activateTitle: "Route to activate/deactivate a tenant via API:",
      showTitle: "Route to show tenant information via API:",
      endpoint: "Endpoint",
      bearerToken: "Bearer Token",
      body: "Body",
    },
  },
  modalTenantApi: {
    title: {
      create: "Create Tenant API",
      edit: "Edit Tenant API",
    },
    form: {
      apiToken: "API Token",
      generateToken: "Generate Token",
    },
    notifications: {
      created: "Tenant API created successfully!",
      updated: "Tenant API updated successfully!",
      error: "Error saving the Tenant API.",
    },
  },
  tenant: {
    metrics: {
      actions: "Metrics", 
      title: "Metrics",
      total: "Total Tickets",
      pending: "Pending Tickets",
      scheduled: "Scheduled Tickets",
      open: "Open Tickets",
      closed: "Closed Tickets",
      contacts: "Contacts",
      tickets: "Tickets",
      messages: "Messages",
      sent: "Messages Sent",
      received: "Messages Received",
      averageRating: "Average Rating",
      totalTickets: "Total Tickets",
      totalContacts: "Total Contacts",
      totalMessages: "Total Messages",
    },      
    title: "Companies",
    actions: {
      edit: "Edit Company",
      delete: "Delete Company",
      calculateFiles: "Calculate Company File Sizes",
      deleteFiles: "Delete Company Files",
      toggleHideUnoficial: "Disable Non-Official",
    },
    columns: {
      id: "#",
      status: "Status",
      name: "Name",
      maxUsers: "User Limit",
      maxConnections: "Connection Limit",
      hideUnoficial: "Disable Non-Official",
      asaas: "Asaas Active",
      asaasToken: "Asaas Token",
      asaasCustomerId: "Asaas Customer ID",
      identity: "Identity",
      trial: "Trial",
      trialPeriod: "Trial Period",
      createdAt: "Date",
      actions: "Actions",
    },
    modals: {
      asaasToken: {
        title: "Edit Asaas Token",
        tokenLabel: "Asaas Token",
        save: "Save Token",
        cancel: "Cancel",
      },
    },
    notifications: {
      tenantDeleted: "Tenant {id} deleted successfully!",
      tenantUpdated: "Tenant {id} updated successfully!",
      filesSize: "File sizes: {size} MB",
      deleteFiles: "Files deleted successfully!",
      deleteError: "Error deleting files.",
    },
    confirmation: {
      irreversibleAction: "Warning: This action is irreversible!",
      deleteTenant: 'Do you really want to delete the company {id}?',
      deleteFiles: 'Do you really want to delete all files for the company {id}?',
    },
    hideUnoficial: {
      updated: "Tenant {id} updated successfully!",
      updateError: "Error updating tenant {id}!",
    },
    asaasToken: {
      updated: "Asaas token updated successfully!",
      updateError: "Error updating Asaas token!",
    },
    calcular: {
      size: "File sizes: {size} MB",
      error: "Error calculating file sizes",
    },
    limpar: {
      title: "Warning: This action is irreversible!",
      confirmMessage: 'Do you really want to delete all files for the company {id}?',
      success: "Tenant {id} files deleted successfully!",
      error: "Error deleting tenant files!",
    },
    status: {
      active: "Active",
      inactive: "Inactive",
    },
    asaas: {
      enabled: "Active",
      disabled: "Inactive",
    },
    trial: {
      enabled: "Active",
      disabled: "Inactive",
    },
    list: {
      error: "Error listing tenants",
    },
    create: {
      success: "Tenant {name} created successfully!",
    },
    delete: {
      protected: "It is not possible to delete tenant {id}!",
      success: "Tenant {id} deleted successfully!",
      error: "Error deleting tenant: {error}",
    },
  },
  modalTenant: {
    visibleMenu: {
      title: "Visible Menus",
      grupos: "Groups",
      disparoMassa: "Mass Messaging",
      kanban: "Kanban e Pipeline",
      tarefas: "Tasks",
      api: "API",
      chatbot: "Chatbot",
      relatorios: "Reports",
      campanhas: "Campaigns",
      chat: "Chat",
      equipes: "Teams",
    },      
    title: {
      create: "Create Tenant",
      edit: "Edit Tenant",
    },
    fields: {
      status: "Status",
      name: "Name",
      maxUsers: "User Limit",
      maxConnections: "Connection Limit",
      identity: "Identity",
      asaasToken: "Asaas Token",
      asaasCustomerId: "Asaas Customer ID",
      trialPeriod: "Trial Period",
    },
    trial: {
      title: "Trial",
      enabled: "Trial Active",
      disabled: "Trial Inactive",
      warning: "Warning: When enabling trial, the company data will be deleted from the system after the trial period expires.",
    },
    asaas: {
      title: "Asaas",
      enabled: "Asaas Active",
      disabled: "Asaas Inactive",
    },
    validation: {
      requiredFields: "Fill in all required fields and activate the Tenant.",
      cannotDeactivateMain: "It is not possible to deactivate Company 1!",
    },
    notifications: {
      created: "Tenant created successfully!",
      updated: "Tenant updated successfully!",
      error: "Error saving tenant.",
    },
  },
  tenantsPk: {
    titles: {
      environmentVariables: "Environment Variables",
      packageJsonData: "Package JSON Data",
    },
    labels: {
      key: "Key",
      value: "Value",
    },
    errors: {
      loadEnvData: "Error loading environment variable data",
      loadPackageData: "Error loading Package JSON data",
    },
  },
  tenantQueue: {
    title: "Task Queues",
    updateQueues: "Update Queues",
    openBullBoard: "Open Bull Board",
    restartBackend: "Restart Backend",
    restartQueues: "Restart Queues",
    queuesUpdated: "Queues updated every 10 seconds",
    refreshQueue: "Reprocess Queue",
    columns: {
      queueName: "Queue Name",
      failedCount: "Failed Jobs",
      activeCount: "Active Jobs",
      waitingCount: "Waiting Jobs",
      actions: "Actions",
    },
    dialogs: {
      restartBackendTitle: "Warning!! Do you really want to restart your backend?",
      restartBackendMessage:
        "This process will restart all services and should only be executed if you have access to the server to fix possible inconsistencies.",
      restartQueuesTitle: "Warning!! Do you really want to restart the queues?",
      restartQueuesMessage:
        "Execute only if there are queues with many stopped jobs on the Bull Board. This process will restart all Bull queues and should be executed no more than 5 times without restarting the backend. After this limit, restart the backend to clear extra connections made to Redis.",
    },
    notifications: {
      bullBoardRedirect:
        "User: admin<br>Password: use your Redis password<br>You will be redirected in 3 seconds",
    },
  },
  terminal: {
    title: "Terminal",
    placeholder: "Type your command here...",
    sendButton: "Send",
    noOutput: "No output received",
    error: "Error: ",
    userNotAllowed: "User not authorized to access the terminal"
  },
  usuarios: {
    title: "Users",
    placeholder: "Search",
    add: "Add",
    email: "Email",
    queues: "Queues",
    whatsappAllowed: "Connections",
    isOnline: "Status",
    profile: "Profile",
    actions: "Actions",
    blockWavoip: "Block Wavoip",
    modals: {
      userManagement: "User Queue Management",
      whatsappManagement: "User Connection Management",
      deleteConfirmation: 'Warning!! Do you really want to delete the user "{name}"?'
    },
    notifications: {
      userDeleted: "User {name} deleted!",
      deleteError: "Cannot delete the user.",
      error: "Error loading more users",
      changeStatusInToolbar: "It is not possible to change the logged in user status. Use the option in the profile, in the top right corner.",
      status1: "Status of the user",
      statusOnline: "Online: User available",
      statusOffline: "Offline: User unavailable",
      statusReload: "To verify the change in the frontend, the user must reload the page"
    },
    profiles: {
      user: "User",
      super: "Supervisor",
      admin: "Administrator",
      superadmin: "Super Administrator"
    }
  },
  modalFilaUsuario: {
    title: "User Queues",
    name: "Name",
    email: "Email",
    inactive: "(Inactive)",
    successMessage: "User queues successfully updated!"
  },
  modalUsuario: {
    sipConfigInfo: "SIP Configuration (Asterisk, FreeSWITCH, PBX, others.)",
    sipWebRTCInfo: "Your extension must support WebRTC",
    sipWSSInfo: "Your extension must support WSS (WebSocket Secure)",
    horarioAtendimento: "Business Hours",
    configSip: "SIP Configuration",
    sipEnabled: "Enable SIP",
    sipUser: "SIP User",
    sipPassword: "SIP Password",
    sipServer: "SIP Server",
    sipPort: "SIP Port",
    emailAlreadyExists: "Error when registering: ",
    titleEdit: "Edit User",
    name: "Name",
    email: "Email",
    password: "Password",
    profile: "Profile",
    blockWavoip: "Block Wavoip",
    visibleMenu: "Visible Menus",
    massa: 'Mass Messaging',
    grupo: 'Groups',
    chatprivado: 'Private Chat',
    kanban: 'Kanban and Funnel',
    tarefas: 'Tasks',
    sessoes: 'Sessions',
    relatorios: 'Reports',
    filas: 'Queues',
    equipes: 'Teams',
    mensagensrapidas: 'Quick Messages',
    chatflow: 'Chat Flow',
    agendamentos: 'Schedules',
    aniversarios: 'Birthdays',
    fechamento: 'Closure',
    etiquetas: 'Tags',
    notas: 'Notes',
    protocolos: 'Protocols',
    avaliacoes: 'Ratings',
    horarioAtendimento: 'Business Hours',
    campanhas: 'Campaigns',
    blockWavoipHint: "When changing Wavoip settings, clear your browser cache (Ctrl+Shift+R).",
    successEdit: "User updated!",
    successCreate: "User created!",
    errorLimit: "User limit reached.",
    errorValidation: "Oops! Please check the errors..."
  },
  modalWhatsappUsuario: {
    title: "User Connections (BETA)",
    name: "Name",
    email: "Email",
    successMessage: "User connections successfully updated!"
  },
  usuariosTenants: {
    title: "Users",
    tenant: "Tenant",
    id: "ID",
    name: "Name",
    email: "Email",
    profile: "Profile",
    actions: "Actions",
    filterPlaceholder: "Search",
    deleteConfirmation: {
      title: 'Warning!! Do you really want to delete the user "{name}"?',
      successMessage: "User {name} successfully deleted!",
      errorMessage: "Unable to delete the user"
    }
  },
  modalUsuariosTenants: {
    title: "Edit User",
    tenantLabel: "Tenant",
    nameLabel: "Name",
    emailLabel: "Email",
    passwordLabel: "Password",
    profileLabel: "Profile",
    saveSuccess: "User updated!",
    createSuccess: "User created!",
    validationError: "Oops! Please check the errors...",
    userLimitError: "User limit reached.",
    warning: "After applying changes, clear your browser cache (Ctrl+Shift+R)."
  },
  wavoip: {
    title: "Call List",
    subTitle: "Enter your Wavoip account email and password",
    emailLabel: "Email",
    passwordLabel: "Password",
    authorizeButton: "Authorize Call Listing",
    callsTitle: "Calls",
    logsDownloaded: "Logs downloaded successfully!",
    confirmClear: "Do you really want to clear the logs?",
    confirmClearMessage: "This action cannot be undone.",
    logsCleared: "Logs cleared successfully!",
    downloadLogs: "Download Logs",
    clearLogs: "Clear Logs",
    logsTitle: "Logs",
    logsSubtitle: "Click to view the logs",
    eventSummary: "Event Summary",
    connectEvents: "Connection Events",
    incomingEvents: "Incoming Events",
    outgoingEvents: "Outgoing Events",
    errorEvents: "Error Events",
    offer: "Offer Events",
    terminate: "Termination Events",
    devicesTitle: "Devices",
    resetLogin: "Reset Wavoip Login",
    action: "Action",
    error: "Error authenticating or listing messages",
    columns: {
      id: "ID",
      caller: "Number",
      receiver: "Destination",
      direction: "Direction",
      duration: "Duration",
      createdDate: "Date",
      status: "Status",
      link: "Action"
    },
    columnsDevices: {
      id: "ID",
      idUser: "User ID",
      name: "Name",
      phone: "Number",
      token: "Token",
      status: "Status"
    },
    direction: {
      outcoming: "Outgoing",
      incoming: "Incoming"
    },
    status: {
      ended: "Ended",
      rejected: "Rejected"
    },
    resetMessage: "Resetting Wavoip login..."
  },
  error404: {
    title: "404",
    subtitle: "Oooooops... Nothing here...",
    button: "Go Back"
  },
  login: {
    welcome: "Welcome!",
    emailPlaceholder: "my@@email.com",
    emailError: "Must be a valid email.",
    passwordLabel: "Password",
    validateCaptcha: "Drag the slider to the end to unlock your login:",
    loginButton: "Login",
    loginLoading: "Logging in...",
    forgotPassword: "Forgot my password",
    resetPasswordTitle: "Recover Password",
    resetPasswordLabel: "Enter your email",
    resetPasswordButton: "Send",
    resetPasswordSuccess: "Password recovery email sent.",
    resetPasswordError: "Error sending password recovery email.",
    captchaValidationMessage: "CAPTCHA successfully validated!",
    captchaErrorMessage: "Please validate the CAPTCHA before continuing.",
    errorMessage: "Enter a valid username and password.",
    validateEmailError: "Enter a valid email."
  },
  resetPassword: {
    title: "Reset Password",
    newPasswordPlaceholder: "New Password",
    confirmPasswordPlaceholder: "Confirm Password",
    resetButtonLabel: "Reset",
    loadingMessage: "Resetting...",
    successMessage: "Password successfully reset!",
    errorMismatch: "Passwords do not match.",
    errorMessage: "Error resetting password."
  },
  signup: {
    title: "Create your account!",
    namePlaceholder: "Name",
    cpfCnpjPlaceholder: "CPF/CNPJ",
    emailPlaceholder: "Email",
    mobilePhonePlaceholder: "Mobile",
    passwordPlaceholder: "Password",
    selectPlanPlaceholder: "Select a Plan",
    submitButtonLabel: "Create Account",
    cancelButtonLabel: "Login",
    loadingMessage: "Creating...",
    validations: {
      requiredFields: "Fill in all fields!",
      invalidCpfCnpj: "Invalid CPF or CNPJ.",
      invalidEmail: "Invalid email.",
      invalidPassword: "Password must be at least 7 characters long, including letters, numbers, and a special character!",
      successMessage: "Client successfully created.",
      errorMessage: "Error creating client"
    },
    planLabel: "Value: R${value} | Connections: {connections} | Users: {users}"
  },
  atendimentoChat: {
    selectTicket: "Select a ticket!",
    noResults: "No results :(",
    noMore: "Nothing more to load :)",
    forwardMessage: "Forwarding Message",
    forwardHint: "Type at least two letters to find the contact.",
    forwardLimit: "Only 1 contact can be selected.",
    messageSent: "Message successfully sent!",
    messageFailed: "Unable to send the message. Try again.",
    forwardMessages: "{count} of 10 messages selected for forwarding.",
    contactNotSelected: "Select the destination contact for the messages.",
  },
  atendimentoChatdialogAgendamentoMensagem: {
    title: "Message Scheduling",
    close: "Close",
  },
  atendimentoVcard: {
    contactTitle: "Contact: {name}",
    selectChannelMessage: "Select the channel to start the service.",
    startButton: "Start",
    attentionTitle: "Attention",
    ongoingTicketMessage: "{name} has an ongoing service (Ticket: {ticketId} - Queue: {queueId}). Do you want to open the service?",
    adminOnlyMessage: "{name} has an ongoing service. Only an administrator can assign this service to you.",
    ongoingTicketError: "Unable to update the token",
    notifyTicketStarted: "Service Started - {name} - Ticket: {ticketId}",
  },
  atendimentoModalSMS: {
    title: "Send SMS",
    messageLabel: "SMS",
    selectServiceLabel: "Select Service",
    cancel: "Cancel",
    send: "Send",
    noServiceSelected: "Please select a service.",
    comteleSuccess: "Comtele: sent!",
    conectaSuccess: "ConectaStartup: sent!",
    livsonSuccess: "BHI: sent!",
    errorSending: "Error sending SMS: {error}",
  },
  atendimentoModalNovoTicket: {
    title: "Create Ticket",
    contactPlaceholder: "Find Contact",
    contactHint: "Type at least two letters to find the contact.",
    addContact: "Add Contact",
    start: "Start",
    selectDestination: "Select the destination:",
    queueDestination: "Queue destination",
    userDestination: "User destination",
    ticketTransferred: "Ticket transferred.",
    errorLoadingQueues: "Problem loading queues",
    errorLoadingUsers: "Problem loading users",
    existingTicketMessage: "{name} has an ongoing service (Ticket: {id} - Queue: {queue}). Do you want to open the service?",
    noQueue: "no queue",
    adminOnlyMessage: "{name} has an ongoing service. Only an administrator can assign this service to you.",
    confirmStart: "Contact: {name}. Select the channel to start the service.",
    contactCreated: "Contact created!",
  },
  atendimentoMixinSockets: {
    tokenInvalid: "Invalid token. Redirecting to the login page.",
    privateMessage: {
      update: "New private message received.",
      unread: "Unread private message received.",
      notification: "New private message notification.",
    },
    onlineUsers: "Checking online users.",
    userOnline: "User came online.",
    updateStatusUser: "Updating user statuses.",
    newClient: "New client connected.",
    pendingCliente: "New pending client",
    client: "Client: ",
  },
  atendimentomixinCommon: {
    note: "📝Note:",
    transfer: "⏩ Transfer: ",
    audio: "🔊Audio: ",
    buttonNotAvailable: "This button is only clickable on mobile",
    dateFormat: "MM/dd/yyyy",
  },
  atendimentoMixinAtualizar: {
    label: "Evaluate the service",
    rating: {
      0: "Poor",
      1: "Fair",
      2: "Good",
      3: "Very Good",
      4: "Excellent",
      5: "Incredible",
    },
    notifications: {
      selecioneUmMotivo: "Select a reason to close the service.",
      demandaSalva: "Demand saved! Now you can close the service.",
      erroSalvarDemanda: "Unable to save the demand.",
      erroCarregarMotivos: "Unable to load the reasons.",
      forcarDemanda: 'To close the service, define the demand',
      iniciarAtendimento: "Service Started - {name} - Ticket: {id}",
      espiarAtendimento: "Spying - {name} - Ticket: {id}",
      avaliacaoEnviada: "Evaluation sent for service {id}. The service will automatically close after the client sends the evaluation.",
      avaliacaoErro: "Unable to send the service evaluation.",
      ticketEncerrado: "Service closed! (Ticket {id})",
      mensagemDespedida: "The selected message is being sent, and the ticket will close within 30 seconds!",
      erroAtualizarStatus: "Unable to update service status.",
      atendimentoJaIniciado: "Service on this connection already started in the open/pending tab or ask the admin to open a new service under the contact option.",
      atendimentoEncerrado: "Service closed!",
      atendimentoIniciado: "Service started!",
      retornadoFila: "Returned to the queue!",
    },
    dialogs: {
      iniciar: "The service will be started, ok?",
      retornarFila: "Return to the queue?",
      encerrar: "Close the service?",
      encerrarForcado: "Close the service? Ticket: {id}",
      mensagemCliente: 'Do you want to update the service #{ticketId} for the client {cliente}?',
      mensagemCliente2: 'Do you want to close this service?',
      ticketEncerrar: "Close the service?",
    },
    titles: {
      iniciar: "The service will be started, ok?",
      retornarFila: "Return to the pending queue?",
      encerrar: "Close the service?",
      encerrarAtendimento: "Close the service?",
      encerrarForcado: "Close the service? Ticket: {id}",
    },
    evaluation: "Evaluation sent",
  },
  atendimentoMensagemRespondida: {
    labels: {
      mensagemApagada: "Message deleted on {data}.",
      baixarContato: "Download Contact",
      baixarArquivo: "Download: {nomeArquivo}",
      visualizarPDF: "View PDF",
      audioInacessivel: "Audio unavailable",
      grupoNome: "Group: {nomeGrupo}",
      contatoNome: "Contact: {nomeContato}",
    },
    errors: {
      erroMensagem: "Error processing the message.",
      erroAudio: "Error loading the audio.",
      erroDownload: "Error downloading the file.",
    },
  },
  atendimentoMensagemChat: {
    noName: "No name",
    system: "System",
    labels: {
      atencao: "Attention!! Do you really want to try resending this message?",
      processoReenvio: "This process will attempt to resend the pending message in the system.",
      processoIniciado: "Process started.",
      tentandoEnvio: "Attempting to send pending messages.",
      erroEnvio: "Error sending messages: {erro}",
      deletarAtencao: "Attention!! Do you really want to delete the message?",
      deletarAviso: "Old messages will not be deleted on the client.",
      deletarErro: "Unable to delete the message.",
      mensagemSincronizada: "Message Synchronized: {tempoSincronizacao}",
      mensagemEditada: "Edited: {conteudoMensagem}",
      mensagemApagada: "Message deleted on {data}.",
      downloadContato: "Download Contact",
      baixarArquivo: "Download: {nomeArquivo}",
      mensagemNaoEntregue: "Message not delivered",
      mensagemAgendada: "Scheduled message",
      enviadoCancelado: "Send canceled: {data}",
      criadoEm: "Created on: {data}",
      programadoPara: "Scheduled for: {data}",
      facaDownload: "Download the File",
      editarMensagem: "Edit Message",
    },
    errors: {
      erroAudio: "Error loading the audio.",
      erroMensagem: "Error processing the message.",
      erroDownload: "Error downloading the file.",
      maximoMensagens: "A maximum of 10 messages is allowed.",
    },
    dialogs: {
      reenviarTitulo: "Resend Message",
      reenviarMensagem: "Do you want to resend this pending message?",
      deletarTitulo: "Delete Message",
      deletarMensagem: "Do you really want to delete this message? Old messages will not be deleted on the client.",
    },
  },
  atendimentoItemTicketPainel: {
    labels: {
      atender: "Assist",
      espirar: "Spy",
      usuario: "User: {nomeUsuario}",
      canalRemovido: "Channel removed",
      atendimentoResolvido: "Service Resolved",
      chatbotAtendendo: "ChatBot assisting",
      integracaoExterna: "External Integration",
      fila: "Queue: {nomeFila}",
      etiquetas: "Tags: {etiquetas}",
      carteiras: "Wallets: {carteiras}",
      espiarAtendimento: "Spy on Service: {idTicket}",
    },
    status: {
      aberto: "Open",
      pendente: "Pending",
      resolvido: "Resolved",
    },
    errors: {
      erroInformacoes: "Error fetching {tipoInformacao}: {erro}",
    },
  },
  atendimentoItemTicket: {
    labels: {
      forceClose: "Force Close",
      atender: "Assist",
      atendimentoResolvido: "Service Resolved",
      chatbotAtendendo: "ChatBot assisting",
      integracaoExterna: "External Integration",
      forcarFechamento: "Force Close (without farewell/evaluation/demand)",
      espiarAtendimento: "Spy on Service: {id}",
      usuario: "User: {username}",
      etiquetas: "Tags:",
      kanban: "Kanban: {kanbanName}",
      semFoto: "Channel removed",
      espiar: "Spy",
      fecharTicketSemDespedida: "Force Close (without farewell/evaluation/demand)",
    },
    status: {
      aberto: "Open",
      pendente: "Pending",
      resolvido: "Resolved",
    },
    errors: {
      erroInformacoes: "Error fetching information for {tipoInformacao}: {erro}",
      erroRemoverFoto: "Error removing null photo: ",
    },
    dialogs: {
      fecharTitulo: "Attention",
      fecharMensagem: "Do you want to force close the ticket?",
    },
  },
  inputMensagem: {
    novo: {
      camposObrigatorios: "Fill in all required fields before sending the message.",
      enviarLocalizacao: "Send Location",
      latitude: "Latitude",
      longitude: "Longitude",
      nomeLocal: "Place Name",
      enderecoLocal: "Place Address",
      localizacaoEnviada: "Location sent successfully!",
      erroEnviarLocalizacao: "Error sending location",
      enviarCTAURL: "Send CTA URL",
      enviarReplyButtons: "Send Reply Buttons",
      enviarAddress: "Send Address",
      enviarLocationRequest: "Send Location Request",
      enviarFlow: "Send Flow",
      enviarLocation: "Send Location",
      sendLocation: "Send Location",
      tipoDeHeader: "Header Type",
      texto: "Text",
      imagem: "Image",
      video: "Video",
      documento: "Document",
      textoDoHeader: "Header Text",
      urlDoHeader: "Header URL",
      mensagem: "Message",
      digiteSuaMensagem: "Type your message",
      textoDoBotao: "Button Text",
      exemploTextoDoBotao: "Ex: View Product",
      urlDoBotao: "Button URL",
      exemploUrlDoBotao: "https://exemplo.com",
      footeropt: "Footer (optional)",
      textoDoFooter: "Footer Text",
      flowIdopt: "Flow ID (optional)",
      idDoFlow: "Flow ID",
      flowNameopt: "Flow Name (optional)",
      nomeDoFlow: "Flow Name",
      flowCtaopt: "Flow CTA *",
      textoDoCta: "CTA Text",
      flowTokenopt: "Flow Token (optional)",
      tokenDoFlow: "Flow Token",
      flowAction: "Flow Action",
      navegar: "Navigate",
      trocaDeDados: "Data Exchange",
      flowActionPayloadopt: "Flow Action Payload (optional)",
      tituloDoBotao: "Button Title",
      rua1opt: "Street 1 *",
      enderecoPrincipal: "Main Address",
      rua2opt: "Street 2 (optional)",
      complemento: "Complement",
      cidadeopt: "City *",
      nomeDaCidade: "City Name",
      estadoopt: "State *",
      nomeDoEstado: "State Name",
      cepopt: "ZIP Code *",
      cep: "00000-000",
      paisopt: "Country *",
      nomeDoPais: "Country Name",
      tipoDeEndereco: "Address Type",
      casa: "Home",
      trabalho: "Work",
      latitudeopt: "Latitude *",
      longitudeopt: "Longitude *",
      nomeDaLocalizacaoopt: "Location Name (optional)",
      exemploNomeDaLocalizacao: "Ex: Shopping Mall",
      enderecoopt: "Address (optional)",
      enderecoCompleto: "Full Address",
      enderecoEnviado: "Address sent successfully!",
      localizacaoEnviada: "Location sent successfully!"
    },    
    labels: {
      campoVazio: "Fill in all variable fields before sending the template.",
      vcardEnviado: "VCard sent successfully!",
      telefoneContato: "Phone",
      nomeContato: "Name",
      enviarContato: "Send contact",
      nothingHere: "Attention... Nothing here!",
      nothingHereDescription: "Register your messages in the system administration.",
      erroAnexar: "Error attaching the file",
      anexoEnviado: "File sent successfully!",
      selecioneArquivo: "Select a file",
      preview: "Preview",
      anexarArquivo: "Attach File",
      selecioneArquivo: "Select a file",
      caption: "Caption",
      emoji: "Emoji",
      templates: "Templates",
      digiteMensagem: "Type here...",
      enviarArquivo: "Send Multiple Files",
      enviarArquivoCaption: "Send File with Caption",
      enviarFigurinha: "Send Sticker",
      enviarEmoji: "Emoji",
      enviarMensagem: "Send Message",
      enviarAudio: "Send Audio",
      enviarLinkVideo: "Send Video Link",
      enviarMarcacaoFantasma: "Send Ghost Mention",
      enviarMarcacao: "Send Mention",
      enviarBotoes: "Send Buttons",
      enviarListas: "Send Lists",
      enviarTemplate: "Templates",
      removerMidiaMensagemRapida: "Remove Media from Quick Message",
      cancelarGravacao: "Cancel Recording",
      enviarGravacao: "Send Recording",
      gravacaoIniciada: "Recording Started",
      gravacaoParada: "Recording Stopped",
      mensagemRapida: "Quick Messages",
      mensagemMarcacao: "Mention Message",
      mensagemMarcacaoFantasma: "Ghost Mention Message",
      videoGravacao: "Video Recording",
      arquivo: "File: ",
      voz: "Voice: ",
      semMidia: "No Media",
      sim: "Yes",
      nao: "No",
      dataHoraAgenda: "Schedule Date/Time",
      desativarAssinatura: "Disable Signature",
      ativarAssinatura: "Enable Signature",
      selecioneParticipantes: "Select participants",
      botao: "Button",
      botao1: "Button 1",
      botao2: "Button 2",
      botao3: "Button 3",
      header: "Header",
      title: "Title",
      footer: "Footer",
      title1: "Column 1 Title",
      title2: "Column 2 Title",
      title3: "Column 3 Title",
      title4: "Column 4 Title",
      title5: "Column 5 Title",
      description1: "Column 1 Description",
      description2: "Column 2 Description",
      description3: "Column 3 Description",
      description4: "Column 4 Description",
      description5: "Column 5 Description",
      templateChoose: "Choose a template",
      startRecord: "Start Recording",
      stopRecord: "Stop Recording",
      sendRecord: "Send Recording",
    },
    dialogs: {
      confirmarEnvio: "Confirm sending: Enter",
      cancelarEnvio: "Cancel: ESC",
    },
    errors: {
      arquivoRejeitado: "File rejected due to size or incompatible type.",
      gravacaoErro: "Error recording the video or audio.",
    },
    error: {
      vcardErro: "Error sending VCard!",
      erroEnviarVcard: "Error sending VCard!",
    },
    success: {
      vcardEnviado: "VCard sent successfully!",
    }      
  },
  atendimentoInputScript: {
    pendingMessageSended: "Please wait... Message being sent",
    micPermissionDenied: "Microphone permission denied",
    scheduleError: "To schedule a message, provide the Schedule Date/Time field.",
    sendMessage: "Send message",
    scheduleMessage: "Schedule message",
    recordAudio: "Record audio",
    stopRecording: "Stop recording",
    cancelRecording: "Cancel recording",
    startRecording: "Start recording",
    prepareMedia: "Prepare media for sending",
    invalidFile: "Invalid file!",
    fileAcceptedFormats: "Accepted formats: {formats}",
    sendingMessage: "Sending message...",
    errorSendingMessage: "Error sending message",
    invalidMessage: "Invalid message",
    customSchedule: "Custom Schedule",
    in30Minutes: "In 30 minutes",
    tomorrow: "Tomorrow",
    nextWeeks: "Next week",
    uploadFile: "Upload file",
    attachFile: "Attach file",
    previewImage: "Preview image",
    dragFileHere: "Drag the file here",
    selectAll: "Select All",
    schedulePlaceholder: "Provide the Schedule Date/Time field",
    videoRecordingError: "Error starting video recording",
    audioRecordingError: "Error starting audio recording",
    filePreviewError: "Error loading file preview",
    messageScheduled: "Message successfully scheduled",
    messageError: "Error processing the message",
    headerUrl: "Header URL",
    namedVariable: "Variable Value",
    templateSuccess: "Template successfully sent",
    templateError: "Error sending the template",
    ghostMessageSuccess: "Ghost mention message successfully sent",
    ghostMessageError: "Error sending the ghost mention message",
    mentionAllSuccess: "Mention message successfully sent",
    mentionAllError: "Error sending the mention message",
    previewTitle: "Send image to {contactName}",
    noFilesToSend: "No files to send",
    emptyMessageError: "Empty Message",
    multipleQuickMessagesError: "Multiple quick messages found. Select one or type a unique key for the message",
    noQuickMessageFoundError: "/ indicates you want to send a quick message, but none were found. Register or delete the / and type your message.",
    dataMessage: "Please provide the data to be sent",
    messageValidationError: "Message must be between 1 and 60 characters.",
    buttonValidationError: "Button must have a maximum of 20 characters.",
    duplicateButtonError: "Buttons cannot have duplicate values.",
    missingFieldsError: "Please provide the data to be sent.",
  },
  atendimentoInfoCabecalho: {
    pauseAttendance: "Pause Attendance",
    resumeAttendance: "Resume Attendance",
    attendancePaused: "Attendance paused successfully",
    attendanceResumed: "Attendance resumed successfully",
    pauseError: "Error controlling attendance pause",
    menuAction: "Menu Action",
    contactInfo: "Contact Information",
    assignedTo: "Assigned to:",
    ticketNumber: "Ticket Number:",
    reopenTicket: "Reopen Ticket",
    messageScheduling: "Message Scheduling",
    returnToQueue: "Return Ticket to Queue",
    resolveTicket: "Resolve",
    transfer: "Transfer",
    chatbot: "Chatbot",
    channel: "Channel",
    channels: "Channels",
    resolve: "Resolve",
    reopenCall: "Reopen Call Wavoip",
    scheduleMessage: "Schedule Message",
    actions: "Actions",
    selectDestination: "Select Destination:",
    ticket: "Ticket",
    destinationQueue: "Destination Queue",
    destinationUser: "Destination User",
    destinationChatbot: "Destination Chatbot",
    destinationChannel: "Destination Channel",
    alreadyAssigned: "Ticket already belongs to the selected user.",
    alreadyAssignedToYou: "Ticket already belongs to your user.",
    alreadyInQueueAndUser: "Ticket already belongs to this queue and user.",
    transferredToChatbot: "Ticket transferred to the chatbot",
    transferredToChannel: "Ticket transferred to the channel",
    transferredToQueue: "Ticket transferred.",
    loadingQueuesError: "Problem loading queues",
    loadingUsersError: "Problem loading users",
    loadingChatbotsError: "Problem loading chatbots",
    loadingChannelsError: "Problem loading channels",
    ticketOpen: "Open",
    ticketClosed: "Closed",
    transferError: "Unable to transfer",
    checkTicketError: "There is already an open/pending ticket for this contact.",
  },
  generalSupport: {
    selectWavoip: "Select the WhatsApp to make the call",
    looginForWarning1: 'Durante a busca tickets não são atualizados!',
    looginForWarning2: 'Apague o campo para atualizar...',
    lookingFor: 'Looking for id, name or number...',
    closingForecast: "Closing Forecast",
    createdAt: "Created at",
    status: "Status",
    opportunities: "Logs",
    funil: "Pipeline",
    ticketFunil: "Create stage in the pipeline",
    privateChat:'Private',
    groupChat:'Group',
    searchMessage: 'Search message',
    searchTicket: 'Search ticket',
    notes: "Notes",
    number: "Number",
    message: "Message",
    placeholderNumber: '+CountryCode (AreaCode) 99999 9999',
    hintNumber: "If there is an active WABA connection in the system, you must enter the exact number of the WhatsApp account.",
    ticketNotes: "Ticket Notes",
    evaluation: "Evaluation",
    ticketEvaluation: "Ticket Evaluation",
    markasNoRead: "Mark as Unread",
    markasRead: "Mark as Read",
    businessName: "Business Name",
    lastName: "Last Name",
    firstName: "First Name",
    profile: "Profile",
    logout: "Logout",
    activate: "Activate",
    deactivate: "Deactivate",
    toggleDarkMode: "Dark Mode",
    viewTickets: "View Tickets",
    returnMenu: "Return to Menu",
    taskCreate: "Create Task",
    inernalChat: "Internal Chat",
    privateChats: "Private Chats",
    groupChats: "Group Chats",
    advancedFilter: "Advanced Filter",
    filterByQueues: "Queues",
    filterByConnections: "Connection (Beta)",
    filterByUser: "User (Beta)",
    filterByTags: "Tags (Beta)",
    filterByKanban: "Kanbans (Beta)",
    openTickets: "Open",
    pendingTickets: "Pending",
    resolvedTickets: "Resolved",
    unreadTicketsOnly: "Only Tickets with unread messages",
    advancedFilterNotice: "When using filters, you must click the Load More Tickets button above.",
    scheduleMessages: "Scheduled Messages",
    scheduledFor: "Scheduled for:",
    extractConversations: "Extract Conversations",
    downloadPDF: "Download PDF",
    difyDescription: "When enabled, the system will consume Dify",
    lmDescription: "When enabled, the system will consume LM Studio",
    grokDescription: "When enabled, the system will consume Grok",
    geminiDescription: "When enabled, the system will consume Gemini",
    deepseekDescription: "When enabled, the system will consume Gemini",
    qwenDescription: "When enabled, the system will consume Qwen",
    claudeDescription: "When enabled, the system will consume Claude",
    ollamaDescription: "When enabled, the system will consume Ollama",
    clearKanban: "Clear Kanban",
    reason: "Reason",
    clearReason: "Clear Reason",
    value: "Value",
    blockContact: "Block Contact",
    blockChatbot: "Block Chatbot",
    tags: "Tags",
    kanban: "Kanban",
    chatgptDescription: "When enabled, the system will consume ChatGPT",
    dialogflowDescription: "When enabled, the system will consume DialogFlow",
    typebotDescription: "When enabled, the system will consume Typebot",
    n8nescription: "When enabled, the system will consume N8N",
    private: "Private",
    groups: "Groups",
    chatbot: "Chatbot",
    n8nDescription: "When enabled, the system will consume N8N",
    contacts: "Contacts",
    openWavoip: "Open Wavoip",
    startNew: "Start New Conversation",
    loadMore: "Load More Tickets",
    reverseOrder: "Reverse Ticket Order",
    protocol: "Protocol",
    ticketProtocol: "Ticket Protocol",
    syncHistory: "Sync History",
    log: "Logs",
    noTagsAvailable: "Oops... No tags created!",
    noTagsAvailableWarning: "Register new tags in system administration.",
    noWalletsAvailable: "Oops... No wallets available!",
    wallets: "Wallets",
    filter: {
      queues: "Queues",
      whatsapp: "Connection",
      users: "Users",
      tags: "Tags",
      kanbans: "Kanbans",
    },
    toggleFilterOptions: "Show/Hide Filter Options",
    addTag: "Add Tag",
    addWallet: "Add Wallet",
    markAsRead: "Mark as Read",
    markAsUnread: "Mark as Unread",
    sanitizeContact: "Sanitize Contact",
    logsticket: "Ticket Logs",
    contactSanitizeNotice: "This routine recreates the user and closes all tickets associated with this contact.",
    addValue: "Add Value",
    ticketProtocols: "Ticket Protocols",
    ticketsEvaluations: "Ticket Evaluations",
    evaluationAverage: "Evaluation Average",
    ticketNotes: "Ticket Notes",
    evaluationNotConclusive: "Evaluation was not successfully completed",
    contactDetails: {
      vapi: "Vapi",
      title: "Contact Details",
      reduceMenu: "Reduce Menu",
      name: "Name",
      phone: "Phone",
      email: "Email",
      cpf: "CPF",
      birthday: "Birthday",
      businessName: "Company",
      firstName: "First Name",
      lastName: "Last Name",
      edit: "Edit",
      call: "Wavoip",
      asterisk: "SIP",
      telephony: "Telephony",
      sms: "SMS",
    },
    logs: {
      contactLogs: "Contact Logs",
      ticketLogs: "Ticket Logs",
      evaluationLogs: "Evaluation Logs",
      protocolLogs: "Protocol Logs",
      noteLogs: "Note Logs",
    },
  },
  rating: {
    poor: "Poor",
    fair: "Fair",
    good: "Good",
    veryGood: "Very Good",
    excellent: "Excellent",
    incredible: "Incredible",
  },
  generalSupportScript: {
    sendMessage: "Send Message",
    sendingMessage: "Sending Message...",
    messageSent: "Message sent to the number: ",
    messageSendError: "Error sending individual message: ",
    closeModal: "Close Modal",
    error: "Error",
    success: "Success",
    notificationPosition: "top",
    notificationColorPositive: "positive",
    notificationColorNegative: "negative",
    downloadPDF: "Download PDF",
    downloadingPDF: "Downloading PDF...",
    errorDownloadingPDF: "Error downloading messages",
    reportTitle: "Message Report - Support",
    protocolLabel: "Protocol",
    ticketIdLabel: "Ticket ID",
    whatsappIdLabel: "WhatsApp ID",
    channelLabel: "Channel",
    footerGeneratedOn: "Generated on",
    contactInfo: "Contact Information",
    nameLabel: "Name",
    numberLabel: "Number",
    profilePicLabel: "Profile Picture",
    messageFrom: "Message from",
    dateTimeLabel: "Date/Time",
    userIdLabel: "UserID",
    messageBody: "Message Body",
    separatorLine: "Separator Line",
    saveFileName: "support_",
    termsAcceptanceNotification: "Ask the Super Administrator to accept the terms of use for your company.",
    tenantWithFalseAcceptTermsNotification: "Ask the Super Administrator to accept the terms of use for the tenant",
    acceptTermsSuccess: "Terms successfully accepted for the domain",
    errorAcceptingTerms: "Error accepting terms",
    notifyActionClose: "Close",
    tenantId: "Tenant ID",
    superadminProfile: "superadmin",
    tenantNotFound: "Tenant not found",
    deleteNoteConfirmation: 'Do you really want to delete the Note "${note.notes}"?',
    deleteNoteSuccess: 'Note ${note.notes} deleted!',
    attentionTitle: 'Attention',
    noLabel: 'No',
    yesLabel: 'Yes',
    autoCloseWarning: 'Support ${ticket.id} automatically resolved for being inactive for over ${time} minutes.',
    autoCloseEnabled: 'Automatic support enabled',
    autoCloseDisabled: 'Automatic support disabled',
    noInteraction: 'No interaction',
    timeExceeded: 'Time exceeded',
    ticketsLoaded: 'Supports loaded!',
    ticketsLoadedTabs: 'Supports loaded in the open, pending, and closed tabs!',
    attention: 'Attention',
    syncOldMessagesWarning: 'Do you really want to sync the message history?',
    syncOldMessagesHint: 'Only positive numbers are allowed',
    syncOldMessagesSuccess: 'Wait a moment, the system will import ${value} messages for user ${focusedTicket.contact.number}',
    invalidValue: 'Value entered by the user is invalid or not provided.',
    sendProtocolConfirmation: 'Do you want to send a protocol for this support?',
    protocolSent: 'Protocol ${protocol} sent for support ${focusedTicket.id}',
    protocolError: 'Unable to send the support protocol.',
    limitMessagesLabel: 'Message import limit',
    loading: 'Loading...',
    ratingMessageTitle: 'Rate this support:',
    notificationMessageFrom: 'Message from: ',
    loadMoreTicketsMessage: 'When reaching the end of the ticket list, new supports are loaded in all tabs, if available. This action will recur every 3 seconds!',
    companyInactive: 'Your company is inactive!',
    contactAdmin: 'Contact the system administrator!',
    logoutError: 'Unable to log out',
    tenantInactiveMessage: 'The company is inactive, you will be logged out shortly.',
    sessionExpired: 'Session expired, redirecting to login.',
    deleteMessageConfirmation: 'Do you really want to delete the message?',
    deleteMessageWarning: 'Old messages will not be deleted on the client.',
    deleteError: 'Unable to delete the message',
    loadUsersError: 'Problem loading users',
    loadUserError: 'Problem loading user',
    loadError: 'An error occurred while saving the data: ',
    contactSanitizeSuccess: 'Contact sanitized successfully...',
    contactSanitizeError: 'Error sanitizing contact...',
    loadMessage: 'Wait while tickets are being loaded...',
    confirmExitTitle: 'Do you really want to leave this page?',
    confirmExitMessage: 'Leaving this page will lose control of the call.',
  },
  dashTickets: {
    noQueue: 'No Queue',
    consultTicketsError: 'Error querying supports',
    open: "Open",
    tickets: "Supports",
    panelTitle: "Support Panel",
    filtersButtonLabel: "Filters",
    closeOpenTicketsButtonLabel: "Close Open Supports",
    closePendingTicketsButtonLabel: "Close Pending Supports",
    transferTicketButtonLabel: "Transfer Support Between Users",
    markAllAsReadButtonLabel: "Mark All Messages as Read",
    filtersTitle: "Filters",
    dateStartLabel: "Start Date",
    dateEndLabel: "End Date",
    showAllLabel: "(Admin) - View All",
    viewTypeLabel: "View Type",
    updateButtonLabel: "Update",
    visionButtonLabel: "Vision",
    selectDestinationQueueLabel: "Destination Queue",
    selectUserLabel: "Destination User",
    transferWithoutQueueLabel: "Transfer all supports without a queue",
    transferBetweenUsersLabel: "Transfer support between users",
    resolvePendingTicketsLabel: "Resolve all pending supports",
    resolveOpenTicketsLabel: "Resolve all open supports",
    selectSourceUserLabel: "Source User",
    attentionMessage: "Attention, users must have access to the same queues",
    actionInMassMessage: "Attention, this is a mass action and cannot be undone",
    transferTicketsConfirmation: "Transfer all supports without a queue",
    closeTicketsConfirmation: "Resolve all pending supports",
    closeOpenTicketsConfirmation: "Resolve all open supports",
    userSelectionError: "Select the destination user and queue for the pending supports!",
    userDestinationSelectionError: "Select the destination user!",
    massActionError: "Problem performing transfer",
    markAllAsReadMessage: "Messages are being marked as read.",
    massCloseTicketsError: "Problem closing supports in bulk",
    updateTicketError: "Problem updating ticket",
    ticketsReloadMessage: "Please wait, the page will reload after the action is completed.",
    loadQueuesError: 'Problem loading queues',
    loadUsersError: 'Problem loading users',
    selectUserAndQueueError: 'Select the user and destination queue for the pending supports!',
    transferError: 'Problem performing transfer',
    closeMassTicketsError: 'Problem closing supports in bulk',
    markAllAsReadMessage: 'Messages are being marked as read.',
    resolveTicketsBatchMessage: 'Tickets are being resolved in batches of 10 items.',
    reloadPageMessage: 'Please wait, the page will reload after the action is completed.',
    markAllAsReadError: 'Problem marking all as read',
    viewTypeUser: 'User',
    viewTypeUserSynthetic: 'Synthetic User',
    viewTypeQueue: 'Queue',
    viewTypeQueueSynthetic: 'Synthetic Queue',
  },
  dashBoard: {
    dataValidation: "Attention, it is not possible to consult the same day for the start and end of the period",
    attendanceValueEvolution: "Attendance Value Evolution",
    values: "Values",
    attendances: "Attendances",
    filterGroups: "Filter statistics for groups!",
    filterPrivateChats: "Filter statistics for private chats!",
    controlPanel: "Control Panel",
    attendanceByChannelName: "Attendance by channel (Name)",
    undefined: "Undefined",
    attendanceByChannel: "Attendance by channel (Connection)",
    attendanceByQueue: "Attendance by queue",
    attendanceByReasons: "Attendance by reasons",
    attendanceByStatus: "Attendance by status",
    attendanceByUser: "Attendance by user",
    evolutionByChannel: "Evolution by channel",
    evolutionByValue: "Evolution by value",
    attendanceEvolution: "Attendance evolution",
    user: "User",
    pending: "Pending",
    attending: "Attending",
    resolved: "Resolved",
    total: "Total",
    avgRating: "Average Ratings",
    avgFirstResponse: "Average First Response Time",
    avgHandlingTime: "Average Handling Time (AHT)",
    hours: "hours",
    minutes: "minutes",
    controlPanel: "Control Panel",
    scheduleStartDate: "Start Date/Time",
    scheduleEndDate: "End Date/Time",
    generate: "Generate",
    filterGroups: "Filter Groups",
    noDataHere: "No data here!",
    totalTickets: "Total Attendances",
    activeTickets: "Active",
    receptiveTickets: "Receptive",
    newContacts: "New Contacts",
    avgResponseTime: "Average First Response Time",
    avgHandlingTime: "Average Handling Time (AHT)",
    performanceByTeam: "Team Performance",
    ticketsByChannel: "Attendance by channel",
    ticketsByQueue: "Attendance by queue",
    ticketsByStatus: "Attendance by status",
    ticketsByUser: "Attendance by user",
    ticketsEvolutionChannels: "Evolution by channel",
    ticketsEvolutionByPeriod: "Attendances evolution",
    notInformed: "Not informed",
    evolutionByPeriod: "Attendances"
  },
  confirmation: {
    irreversibleAction: "Warning: This is an irreversible action!",
    deleteTenant: "Do you really want to delete the company {id}?"
  },
  socketInitial: {
    updateWhatsapps: "WhatsApp update received",
    deleteWhatsapps: "WhatsApp deletion received",
    updateSession: "Session updated",
    loadingScreen: "The connection is being synchronized: ",
    readySession: "Connection updated.",
    wavoipSession: "Connection synchronized with Wavoip: ",
    updateImport: "Synchronizing device with the application.",
    refreshImport: "Updating device messages.",
    changeBattery: "The battery of the WhatsApp phone needs to be charged.",
    ticketUpdate: "Ticket updated.",
    ticketCreate: "New ticket created.",
    chatCreate: "New chat created.",
    ticketNotification: "New pending client.",
    messageAck: "Message acknowledged.",
    messageDelete: "Message deleted.",
    messageUpdate: "Message updated.",
    contactUpdate: "Contact updated.",
    privateMsgReceived: "New private message received.",
    unreadPrivateMsgReceived: "Unread private message received.",
    notificationPrivateMsgReceived: "Private message notification received.",
    userVerified: "User verified.",
    userChatUpdate: "User status updated.",
    userStatusUpdate: "User status updated"
  },
  mainLayout: {
    novo: {
      wabaTemplate: "For WABA, a new ticket will be created for template sending",
      userNotFound: "Error: User not found. Please log in again.",
      whatsappNotFound: "Error: WhatsApp not selected.",
      numberNotFound: "Error: Number not provided.",
      numberInvalid: "Error: Invalid number.",
      invalidIds: "Invalid IDs for ticket verification",
      invalidData: "Error: Invalid data to create ticket.",
      ticketCreated: "New ticket created for {contatoName} - Ticket: {ticketId}",
      ticketCreatedError: "Error: Ticket created but without a valid ID."
    },  
    noTutorials: 'No tutorials found',
    tutoriais: 'Tutorials',
    checkAllInternalMessages: "Mark all as read (Private Chat)",
    checkAllInternalMessagesSuccess: "All messages have been marked as read (Private Chat)",
    checkAllInternalMessagesError: "Error marking all messages as read (Private Chat)",
    checkAllMessages: "Mark all as read",
    checkAllMessagesSuccess: "All messages have been marked as read",
    checkAllMessagesError: "Error marking all messages as read",
    webphone: 'SIP Webphone',
    cookieWarning: "Cache and cookies cleared. Click OK to reload the page!",
    cleanCookies: "Restart",
    task: "Task",
    dashboard: "Dashboard",
    attendances: "Attendances",
    contacts: "Contacts",
    bulkSending: "Bulk Sending",
    groups: "Groups",
    chat: "Chat",
    kanban: "Kanban",
    tasks: "Tasks",
    profile: "Profile",
    logout: "Logout",
    close: "Close",
    send: "Send",
    cancel: "Cancel",
    startConversation: "Start New Conversation",
    internalMessages: "Internal Messages",
    tasks: "Tasks",
    taskLimit: "Limit",
    taskStatus: "Status",
    taskPriority: "Priority",
    taskDate: "Due Date",
    message: "Message",
    number: "Number",
    whatsappId: "WhatsApp ID",
    taskName: "Task",
    taskPriorityMap: {
      high: "High",
      medium: "Medium",
      low: "Low",
      none: "None"
    },
    taskStatusMap: {
      delayed: "Delayed",
      pending: "Pending",
      finished: "Finished"
    },
    user: "User",
    hello: "Hello",
    userOnline: "User Online",
    userOffline: "User Offline",
    newChat: "Start New Conversation",
    reopenCall: "Reopen Call Wavoip",
    internalMessage: "Internal Message",
    menu: "Menu",
    notifications: "Notifications",
    noNewNotifications: "Nothing new here!",
    newMessagesInInternalChat: "Unread messages in internal chat!",
    unreadMessagesInInternalChat: "Unread messages in internal chat!",
    sharedTicketInvites: "Shared ticket invites",
    pendingClientsInQueue: "Pending clients in the queue",
    contact: "Contact",
    yes: "Yes",
    no: "No",
    attention: "Attention!",
    userProfile: "User Profile",
    updateUser: "Update User",
    acceptTerms: "Accept Terms",
    error: "Error",
    successfullySent: "Message sent successfully",
    acceptTermsMessage: "Accept the terms of use to continue.",
    invalidTenant: "Invalid tenant. Ask the Super Administrator to validate the email.",
    profile: "Profile",
  },
  scriptMainLayout: {
    groupTabAccess: "Access the Groups tab in attendance to open the ticket.",
    tokenUpdateError: "Failed to update the token.",
    noQueue: "No queue",
    attention: "Attention!!",
    logoutError: "Failed to log out.",
    messagesLoadError: "Error loading internal messages.",
    tasksLoadError: "Error loading tasks.",
    markAsReadError: "Error marking message as read.",
    deleteMessageError: "Error deleting message.",
    fetchMessagesError: "Error fetching unread messages.",
    contactHasOngoingTicket: "{contact} already has an ongoing ticket.",
    adminCanAssign: "Only an administrator can assign this ticket to you.",
    openTicketConfirmation: "{contact} has an ongoing ticket (Ticket: {ticketId} - Queue: {queueId}). Do you want to open the ticket?",
    callNotification: "New call received",
    messageSent: "Message sent to number: {number}",
    messageSendError: "Error sending individual message: {error}",
    internalMessagesNotification: "You have {count} unread messages.",
    tasksNotification: "You have {count} pending tasks.",
    acceptTermsSuccess: "Terms successfully accepted.",
    acceptTermsError: "Ask the Super Administrator to accept the terms of use for your company.",
    adminContact: "Contact the system administrator!",
    betaMenuAccess: "Beta Menu available only for authorized users.",
    taskStatus: {
      delayed: "🚩 Delayed",
      pending: "🔄 Pending",
      finished: "✅ Finished"
    },
    priorityStatus: {
      high: "⚡⚡⚡ High",
      medium: "⚡⚡ Medium",
      low: "⚡ Low",
      none: "😉 None"
    },
    notifications: {
      chatUpdate: "Chat updated.",
      newMessage: "New message from {contact}.",
      messageFrom: "Message from {contactName}",
      notificationBody: "{messageBody} - {time}",
    },
  },
  menu: {
    funil: {
      title: 'Funil',
      caption: 'Gestão de Oportunidades'
    },
    dashboard: {
      title: 'Dashboard',
      caption: ''
    },
    atendimentos: {
      title: 'Tickets',
      caption: 'Ticket List'
    },
    contatos: {
      title: 'Contacts',
      caption: 'Contact List'
    },
    disparoMassa: {
      title: 'Bulk Sending',
      caption: 'Mass message sending'
    },
    grupos: {
      title: 'Groups',
      caption: 'Mass Group Management'
    },
    chat: {
      title: 'Chat',
      caption: 'Chat'
    },
    kanban: {
      title: 'Kanban',
      caption: 'CRM'
    },
    tarefas: {
      title: 'Tasks',
      caption: 'To-Do List'
    },
  },
  menuSupervisor: {
    canais: {
      title: 'Channels',
      caption: 'Communication Channels'
    },
    relatorios: {
      title: 'Reports',
      caption: 'General Reports'
    },
    filas: {
      title: 'Queues',
      caption: 'Queue Registration'
    },
    equipes: {
      title: 'Teams',
      caption: 'Teams'
    },
    mensagensRapidas: {
      title: 'Quick Messages',
      caption: 'Predefined messages'
    },
    chatbot: {
      title: 'Chatbot',
      caption: 'Customer Service Bot'
    },
    agendamentos: {
      title: 'Schedules',
      caption: 'Scheduled Messages'
    },
    aniversarios: {
      title: 'Birthdays',
      caption: 'Scheduled Messages'
    },
    fechamento: {
      title: 'Closure',
      caption: 'Closure Messages'
    },
    etiquetas: {
      title: 'Labels',
      caption: 'Label Registration'
    },
    notas: {
      title: 'Notes',
      caption: 'Service Notes'
    },
    protocolos: {
      title: 'Protocols',
      caption: 'Service Protocols'
    },
    avaliacoes: {
      title: 'Evaluations',
      caption: 'Service Evaluations'
    },
    horarioAtendimento: {
      title: 'Service Hours',
      caption: 'Operating Hours'
    },
    campanhas: {
      title: 'Campaigns',
      caption: 'Message Campaigns'
    }
  },
  callLogs: {
    downloadReport: "Download Report",
    title: "SIP Call Logs",
    subtitle: "Records of outgoing and incoming SIP calls",
    columns: {
      id: "ID",
      originNumber: "Origin Number",
      destinationNumber: "Destination Number",
      callStatus: "Call Status",
      callDuration: "Duration",
      createdAt: "Created At",
      user: "User"
    },
    status: {
      calling: "Calling",
      received: "Received",
      accepted: "Accepted",
      completed: "Completed",
      ended: "Ended"
    }
  },    
  menuAdmin: {
    logligacao: {
      title: "Call Log",
      caption: "SIP Call Logs"
    },      
    canais: {
      title: 'Channels',
      caption: 'Communication Channels'
    },
    painelAtendimentos: {
      title: 'Ticket Panel',
      caption: 'Overview of Tickets'
    },
    relatorios: {
      title: 'Reports',
      caption: 'General Reports'
    },
    usuarios: {
      title: 'Users',
      caption: 'User Management'
    },
    filas: {
      title: 'Queues',
      caption: 'Queue Registration'
    },
    equipes: {
      title: 'Teams',
      caption: 'Chat Teams'
    },
    mensagensRapidas: {
      title: 'Quick Messages',
      caption: 'Predefined messages'
    },
    chatbot: {
      title: 'Chatbot',
      caption: 'Customer Service Bot'
    },
    agendamentos: {
      title: 'Schedules',
      caption: 'Scheduled Messages'
    },
    aniversarios: {
      title: 'Birthdays',
      caption: 'Scheduled Messages'
    },
    fechamento: {
      title: 'Closure',
      caption: 'Closure Messages'
    },
    etiquetas: {
      title: 'Labels',
      caption: 'Label Registration'
    },
    notas: {
      title: 'Notes',
      caption: 'Service Notes'
    },
    wavoip: {
      title: 'Wavoip',
      caption: 'Sent and Received Calls'
    },
    protocolos: {
      title: 'Protocols',
      caption: 'Service Protocols'
    },
    avaliacoes: {
      title: 'Evaluations',
      caption: 'Service Evaluations'
    },
    horarioAtendimento: {
      title: 'Service Hours',
      caption: 'Operating Hours'
    },
    campanhas: {
      title: 'Campaigns',
      caption: 'Message Campaigns'
    },
    api: {
      title: 'API',
      caption: 'External System Integration'
    },
    configuracoes: {
      title: 'Settings',
      caption: 'General Settings'
    }
  },
  menuSuperAdmin: {
    backup: {
      title: 'Export',
      caption: 'Data Center'
    },
    monitor: {
      title: 'Monitor',
      caption: 'System Monitoring'
    },
    assinatura: {
      title: 'Subscription',
      caption: 'Manage License'
    },
    tenants: {
      title: 'Tenants',
      caption: 'Tenants'
    },
    usuarios: {
      title: 'Users',
      caption: 'User Management'
    },
    email: {
      title: 'Email',
      caption: 'Password Recovery'
    },
    planos: {
      title: 'Plans',
      caption: 'Register Plans'
    },
    pagamentos: {
      title: 'Payments',
      caption: 'Payment Data'
    },
    canais: {
      title: 'Channels',
      caption: 'Communication Channels'
    },
    api: {
      title: 'API',
      caption: 'SuperAdmin API'
    },
    atualizar: {
      title: 'Update',
      caption: 'System Maintenance'
    },
    customizar: {
      title: 'Customize',
      caption: 'Logos and Colors'
    },
    notificacao: {
      title: 'Notification',
      caption: 'Internal Messages'
    },
    filasTarefas: {
      title: 'Queues and Tasks',
      caption: 'Bull and Redis'
    },
    dadosInternos: {
      title: 'Internal Data',
      caption: 'Internal Messages'
    },
    terminal: {
      title: 'Terminal',
      caption: 'SSH Terminal'
    }
  },
  menuBloqueio: {
    configuracoes: {
      title: 'Settings',
      caption: 'General Settings'
    }
  },
  grupoIndex: {
    tabs: {
      bulkGroups: "Groups and Participants",
      manipulateGroups: "Manipulate Groups",
      manipulateUsers: "Manipulate Users",
      banList: "Banned Numbers",
      wordList: "Prohibited Words",
      greetings: "Greeting Messages",
      farewells: "Farewell Messages"
    },
    banner: {
      stability: "This option is available for Baileys and Whatsapp-Web.JS. When using bulk actions, prefer Whatsapp-Web.JS for more stability in group management.",
      warning: {
        title: "Warning about Group Automations",
        blockRisk: "Can WhatsApp block or ban my number?",
        realRisk: "Yes, the risk is real and should be taken seriously!",
        spamTolerance: "WhatsApp has zero tolerance for spam!",
        monitoring: "It enforces strict rules and monitors message sending and bulk actions rigorously.",
        attention: "ATTENTION: If 2% of recipients report your number or mark your message as spam, your number will be blocked/banned!"
      }
    },
    dialog: {
      confirmButton: "Continue",
      cancelButton: "Exit"
    },
    notifications: {
      colorsLoadError: "Error loading colors.",
      noStoredColors: "No colors stored in localStorage."
    }
  },
  grupoGeralBanlist: {
    table: {
      columns: {
        id: "#",
        number: "Number",
        userId: "User",
        groupId: "Group",
        createdAt: "Date",
        actions: "Actions"
      },
      title: "Bans"
    },
    placeholders: {
      search: "Search"
    },
    buttons: {
      add: "Add",
      delete: "Delete"
    },
    dialogs: {
      deleteSingle: 'Do you really want to delete the Ban "{banId}"?',
      deleteAll: 'Do you really want to delete all {banCount} Ban records?'
    },
    notifications: {
      deleteSuccess: "Ban {banId} deleted!",
      deleteAllSuccess: "All Ban records have been deleted!",
      groupNameError: "Error retrieving group name for {groupId}."
    }
  },
  grupoGeralDespedida: {
    table: {
      columns: {
        id: "#",
        message: "Message",
        userId: "User",
        groupId: "Group",
        createdAt: "Date",
        actions: "Actions"
      },
      title: "Farewells"
    },
    placeholders: {
      search: "Search"
    },
    buttons: {
      add: "Add",
      delete: "Delete"
    },
    dialogs: {
      deleteSingle: 'Do you really want to delete the Farewell "{farewellId}"?',
      deleteAll: 'Do you really want to delete all {farewellCount} Farewell records?'
    },
    notifications: {
      deleteSuccess: "Farewell {farewellId} deleted!",
      deleteAllSuccess: "All Farewell records have been deleted!",
      groupNameError: "Error retrieving group name for {groupId}."
    }
  },
  grupoGeralSaudacao: {
    table: {
      columns: {
        id: "#",
        message: "Message",
        userId: "User",
        groupId: "Group",
        createdAt: "Date",
        actions: "Actions"
      },
      title: "Greetings"
    },
    placeholders: {
      search: "Search"
    },
    buttons: {
      add: "Add",
      delete: "Delete"
    },
    dialogs: {
      deleteSingle: 'Do you really want to delete the Greeting "{greetingId}"?',
      deleteAll: 'Do you really want to delete all {greetingCount} Greeting records?'
    },
    notifications: {
      deleteSuccess: "Greeting {greetingId} deleted!",
      deleteAllSuccess: "All Greeting records have been deleted!",
      groupNameError: "Error retrieving group name for {groupId}."
    }
  },
  grupoGeralWordlist: {
    table: {
      columns: {
        id: "#",
        word: "Word",
        userId: "User",
        groupId: "Group",
        createdAt: "Date",
        actions: "Actions"
      },
      title: "Prohibited Words"
    },
    placeholders: {
      search: "Search"
    },
    buttons: {
      add: "Add",
      delete: "Delete",
      activateWordWatch: "Enable Word Watch"
    },
    dialogs: {
      deleteSingle: 'Do you really want to delete the Word "{wordId}"?',
      deleteAll: 'Do you really want to delete all {wordCount} Word records?'
    },
    notifications: {
      deleteSuccess: "Word {wordId} deleted!",
      deleteAllSuccess: "All Word records have been deleted!",
      groupNameError: "Error retrieving group name for {groupId}."
    }
  },
  grupoGeralModalDespedida: {
    dialog: {
      titleCreate: "Create Farewell",
      titleEdit: "Edit Farewell"
    },
    form: {
      message: "Farewell Message",
      whatsappId: "WhatsApp ID",
      group: "Group"
    },
    notifications: {
      createSuccess: "Farewell created!",
      editSuccess: "Farewell updated!",
      errorFetchingGroups: "Error listing groups.",
      errorSaving: "An error occurred while saving the farewell."
    }
  },
  grupoGeralModalBan: {
    dialog: {
      titleCreate: "Create Ban",
      titleEdit: "Edit Ban"
    },
    form: {
      number: "Ban Number",
      whatsappId: "WhatsApp ID",
      group: "Group"
    },
    notifications: {
      createSuccess: "Ban created!",
      editSuccess: "Ban updated!",
      errorFetchingGroups: "Error listing groups.",
      errorSaving: "An error occurred while saving the Ban."
    }
  },
  grupoGeralModalSaudacao: {
    dialog: {
      titleCreate: "Create Greeting",
      titleEdit: "Edit Greeting"
    },
    form: {
      message: "Greeting Message",
      whatsappId: "WhatsApp ID",
      group: "Group"
    },
    notifications: {
      createSuccess: "Greeting created!",
      editSuccess: "Greeting updated!",
      errorFetchingGroups: "Error listing groups.",
      errorSaving: "An error occurred while saving the greeting."
    }
  },
  grupoGeralModalWordlist: {
    dialog: {
      titleCreate: "Create Word",
      titleEdit: "Edit Word"
    },
    form: {
      word: "Word (lowercase)",
      whatsappId: "WhatsApp ID",
      group: "Group"
    },
    notifications: {
      createSuccess: "Word created!",
      editSuccess: "Word updated!",
      errorFetchingGroups: "Error listing groups.",
      errorSaving: "An error occurred while saving the word."
    }
  },
  grupoGeralModalWordlistGrupo: {
    dialog: {
      title: 'Enable Word Watch',
    },
    form: {
      connection: 'Connection',
      toggleLabel: 'Enable / Disable',
    },
    notifications: {
      selectConnection: 'Please select a connection.',
      updateSuccess: 'WhatsApp {connection} updated successfully!',
      updateError: 'Error updating WhatsApp. Check the logs for more details.',
    },
  },
  grupoMassa1: {
    title: 'Group Generator',
    sections: {
      createMassGroups: 'Create Groups in Bulk',
      listParticipants: 'List Participants',
    },
    form: {
      connection: 'Connection',
      groups: 'Groups',
      groupId: 'Group ID',
      participants: 'Participants',
    },
    notifications: {
      selectConnection: 'Please select a connection.',
      selectGroups: 'Please select one or more groups.',
      fieldsReset: 'Fields reset, this page will refresh.',
      loadingParticipants: 'Please wait, loading all group participants...',
    },
    actions: {
      listGroupIds: 'List Group IDs',
      listParticipants: 'List Participants',
      exportToXLS: 'Export to XLS',
      clear: 'Clear',
    },
  },
  grupoMassa2: {
    title: 'Manage Groups',
    form: {
      connection: 'Connection',
      groups: 'Groups',
      changeTitle: 'Change Title',
      newTitle: 'New Title',
      changeDescription: 'Change Description',
      newDescription: 'New Description',
      changeImageUrl: 'Change Image (URL)',
      newImageUrl: 'New Image URL',
      changeImageFile: 'Change Image (Upload)',
      uploadImage: 'Upload Image',
      changePermission: 'Change Permission',
      adminOnly: 'Only admins can send messages',
    },
    actions: {
      modify: 'Modify',
      clear: 'Clear',
    },
    notifications: {
      selectConnection: 'Please select a connection.',
      selectGroups: 'Please select one or more groups.',
      fillTitle: 'Please fill in the option with the new title.',
      fillDescription: 'Please fill in the option with the new description.',
      fillImageUrl: 'Please fill in the option with the new image URL.',
      uploadFile: 'Please upload the new file.',
    },
    loading: {
      modifyingGroups: 'Please wait, updating group details...',
    },
  },
  grupoMassaUsuarios: {
    title: 'Manage Users',
    actions: {
      execute: 'Execute',
      clear: 'Clear Fields',
      reload: 'Reload Page',
    },
    form: {
      connection: 'Connection',
      groups: 'Groups',
      promoteAdmins: 'Promote Admins',
      demoteAdmins: 'Demote Admins',
      addUsers: 'Add Users',
      removeUsers: 'Remove Users',
      importContacts: 'Import Contacts',
      numbersInput: 'Numbers (comma-separated)',
      csvImport: 'Import Numbers from CSV',
      selectContacts: 'Select Contacts',
      numbersCommaSeparated: 'Numbers (comma-separated)',
      importCSV: 'Import CSV',
    },
    notifications: {
      selectConnection: 'Please select a connection.',
      selectGroups: 'Please select one or more groups.',
      fillContacts: 'Please select or provide the contacts.',
      clearFields: 'Fields reset, this page will refresh.',
    },
    loading: {
      fetchingContacts: 'Please wait, loading all system contacts...',
      executingActions: 'Please wait, executing actions...',
    },
  },
  grupoMassaModalCriarGrupo: {
    form: {
      createGroups: 'Create Groups',
      connection: 'Connection',
      groupName: 'Group Name',
      participantNumber: 'Participant Number',
      groupQuantity: 'Number of Groups',
      importContacts: 'Set Contact / Select Contact',
      selectContact: 'Select Contact',
    },
    notifications: {
      selectConnection: 'Please select a connection.',
      fillGroupName: 'Please fill in the field with the name of the group(s).',
      fillParticipant: 'Please fill in the field with a contact to be added to the new group(s).',
      selectContact: 'Please select a contact to be added to the new group(s).',
      fillQuantity: 'Please fill in the field with the number of group(s) to create.',
    },
    loading: {
      fetchingContacts: 'Please wait, loading contacts...',
      creatingGroups: 'Please wait, creating groups...',
    },
  },
  massaGeral: {
    tabs: {
      template: 'Bulk Send Templates',
      templateVariable: 'Bulk Send Templates + Variable',
      text: 'Bulk Send',
      textVariable: 'Bulk Send + Variable',
      sms: 'Bulk SMS Send',
    },
    dialog: {
      title: 'Bulk Send Notice',
      description: {
        importantNotice: {
          title: 'Can WhatsApp block or ban my number?',
          content: 'Yes, the possibility is real and should be taken seriously!',
        },
        additionalInfo: {
          title: 'WhatsApp has zero tolerance for spam!',
          content: 'It enforces strict rules and rigorously monitors bulk message sending.',
        },
        alert: {
          title: 'ATTENTION',
          content: 'If 2% of recipients report your number or mark your message as spam, <b>your number will be blocked/banned!</b>',
        },
      },
      actions: {
        exit: 'Exit',
        continue: 'Continue',
      },
    },
  },
  massaSMS: {
    form: {
      selectService: 'Select Service',
      minSeconds: 'Minimum (seconds)',
      maxSeconds: 'Maximum (seconds)',
      contacts: 'Contacts',
      selectContacts: 'Select Contacts',
      numbersCommaSeparated: 'Numbers (comma-separated)',
      importCSV: 'Import Numbers from CSV',
      message: 'Message',
    },
    notifications: {
      selectService: 'Please select a service.',
      validMinMax: 'Please enter valid numbers for min and max.',
      enterNumbersMessage: 'Please enter the numbers and the message.',
      successComtele: 'Bulk send via Comtele successfully started.',
      successConecta: 'Bulk send via ConectaStartup successfully started.',
      successLivson: 'Bulk send via BHI successfully started.',
      errorSending: 'Error sending messages: {error}',
      fieldsCleared: 'Fields cleared.',
    },
  },
  massaTexto: {
    form: {
      bulkSend: 'Bulk Send',
      availableFunctions: 'This function is available for Baileys and WhatsApp-Web.JS',
      availableFunctionsWaba: "This function is available for WABA",
      selectConnection: 'WhatsApp ID',
      minSeconds: 'Minimum (seconds)',
      maxSeconds: 'Maximum (seconds)',
      contacts: 'Contacts',
      groups: 'Groups',
      tags: 'Tags',
      kanban: 'Kanban',
      selectTag: 'Select Tag',
      selectKanban: 'Select Kanban',
      selectContacts: 'Select Contacts',
      numbersCommaSeparated: 'Numbers (comma-separated)',
      importCSV: 'Import Numbers from CSV',
      includeText: 'Include Text',
      message: 'Message',
      includeMedia: 'Include Media (URL)',
      mediaUrl: 'Media URL',
      mediaDescription: 'Media Description',
      includeRecordedAudio: 'Include Recorded Audio',
      audioUrl: 'Audio URL (.ogg)',
      includeFile: 'Include File (Upload)',
      fileDescription: 'File Description',
      recordedAudio: 'Recorded Audio',
      send: 'Send',
      clear: 'Clear Fields',
      fetchingContacts: 'Please wait, loading all system contacts...',
    },
    notifications: {
      selectConnection: 'Please select a connection.',
      enterValidNumbers: 'Please enter valid numbers for min and max.',
      chooseSendOption: 'Please choose one or more sending options.',
      enterMessage: 'Please enter the message to be sent.',
      enterMediaDetails: 'Please provide the media URL and description.',
      enterAudioDetails: 'Please provide the audio file URL.',
      uploadFile: 'Please upload the file and provide its description.',
      uploadingMessages: 'Please wait, your messages are being uploaded.',
      messagesSent: 'Your messages are being sent.',
      errorSendingMessages: 'Error sending messages.',
      errorFetchingTags: 'Error fetching tags.',
      errorFetchingKanbans: 'Error fetching kanbans.',
      errorFilteringContactsByTag: 'Error filtering contacts by tag.',
      errorFilteringContactsByKanban: 'Error filtering contacts by kanban.',
      destiny: 'Please enter the destination numbers.',
    },
  },
  massaTextoVariavel: {
    form: {
      availableFunctions: 'Available functions for Baileys and WhatsApp-Web.JS',
      minSeconds: 'Minimum (seconds)',
      maxSeconds: 'Maximum (seconds)',
      includeText: 'Include Text',
      includeMedia: 'Include Media (URL)',
      mediaUrl: 'Media URL',
      mediaDescription: 'Media Description',
      includeRecordedAudio: 'Include Recorded Audio',
      audioUrl: 'Audio URL (.ogg)',
      includeFile: 'Include File (Upload)',
      recordedAudio: 'Recorded Audio',
      send: 'Send',
      clear: 'Clear',
      dataInputLabel: 'number,variable1,variable2,variable3...',
      instructions: 'Enter your message/media description and use variables in double curly braces.',
      example: 'For example: Hello, \{\{var1\}\}! Your status is \{\{var2\}\} and your age is \{\{var3\}\}...'
    },
    notifications: {
      enterValidNumbers: 'Please enter valid numbers for min and max.',
      destiny: 'Please enter the destination numbers.',
      chooseSendOption: 'Please choose one or more sending options.',
      enterMessage: 'Please enter the message to be sent.',
      enterMediaDetails: 'Please provide the media URL and description.',
      enterAudioDetails: 'Please provide the audio file URL.',
      uploadFile: 'Please upload the file and provide its description.',
      uploadingMessages: 'Please wait, your messages are being uploaded.',
      messagesSent: 'Your messages are being sent.',
    },
  },
  massaTemplate: {
    title: 'Bulk Sends',
    form: {
      selectTemplate: 'Select Template',
      selectTag: 'Select Tag',
      fetchingContacts: 'Please wait, loading contacts...',
      numbersCommaSeparated: 'Comma-separated numbers',
      importCSV: 'Import CSV',
      minSeconds: 'Minimum (seconds)',
      maxSeconds: 'Maximum (seconds)',
      contacts: 'Contacts',
      selectConnection: 'Choose a connection',
      errorFetchingTags: 'Error loading tags',
      chooseTemplate: 'Choose a template',
      headerFormat: 'Header format: {format}',
      variableNumber: 'Value',
    },
    notifications: {
      chooseMinTime: 'Please select a minimum time.',
      chooseMaxTime: 'Please select a maximum time greater than the minimum time.',
      chooseConnection: 'Please select a connection.',
      chooseContact: 'Please select a contact.',
      messagesSent: 'Templates sent: {sent} out of {total}.',
      errorSendingTemplate: 'Error sending templates.',
      uploadingMessages: 'Please wait, sending messages... Do not close this page until the process is complete.',
      uploadingTemplate: 'Please wait, loading templates...',
      errorFetchingTags: 'Error fetching tags.',
    },
    table: {
      variable: 'Variable',
      value: 'Value',
    },
  },
  massaTemplateVariavel: {
    title: 'Bulk Sends with Variables',
    form: {
      availableFunctions: 'This function is available for the Official API (WABA)',
      chooseTemplate: 'Select Template',
      minSeconds: 'Minimum (seconds)',
      maxSeconds: 'Maximum (seconds)',
      numberFormat: 'Numbers (format: number,variable1,variable2)',
      fetchingTemplates: 'Loading templates...',
    },
    notifications: {
      messagesSent: 'Templates sent: {sent} out of {total}.',
      uploadingMessages: 'Please wait, sending messages...',
      chooseConnection: 'Please select a connection.',
      chooseTemplate: 'Please select a template.',
      completeFields: 'Please fill in all required fields.',
      sendingCompleted: 'Sends completed.',
      errorFetchingTemplates: 'Error loading templates. Check your API connection.',
    },
    variables: {
      templateVariables: 'Template Variables',
      expectedFormat: 'Expected format for each line: number, {variables}',
    },
  },
  sessao: {
    compactView: 'Compact View',
    normalView: 'Normal View',
    page: 'Page',
    title: 'Communication Channels',
    addChannel: 'Add Channel',
    defaultConnection: 'Default Connection',
    editChannel: 'Edit Channel',
    revalidateWebhook: 'Revalidate Webhook',
    revalidateConnection: 'Revalidate Connection',
    chatbot: 'ChatBot',
    queue: 'Queue',
    user: 'User',
    qrCode: 'QR Code',
    connect: 'Connect',
    edit: 'Edit',
    newQrCode: 'New QR Code',
    connecting: 'Connecting',
    disconnect: 'Disconnect',
    deleteConnection: 'Delete Connection',
    setAsDefault: 'Set as Default',
    closeOpenTickets: 'Close All Open Tickets',
    closePendingTickets: 'Close All Pending Tickets',
    syncMessagesUpdate: 'Update Messages Sync Time',
    syncMessages: 'Sync Messages',
    syncPrompt: 'Attention!! Do you really want to sync?',
    syncMessagesPrompt: 'Limit of messages to be imported',
    syncWarningPrompt: 'The process may take a few minutes depending on the size of your chat list.',
    syncMessagesHint: 'Only positive numbers are allowed',
    noQueueTooltip: 'The queue will be assigned only if the ticket does not already have a manually or chatbot-defined queue.',
    noUserTooltip: 'The user will be assigned only if the ticket does not already have a manually or chatbot-defined user.',
    processStarted: 'Process started.',
    closingOpenTickets: 'Closing open tickets.',
    closingPendingTickets: 'Closing pending tickets.',
    syncingMessages: 'Please wait, the system will import {limit} messages per user.',
    syncError: 'Error trying to sync messages.',
    invalidValue: 'The value entered by the user is invalid or was not provided.',
    actionError: 'Error trying to perform the action.',
    actionSuccess: 'Action performed successfully.',
    noPageConfigured: 'No page configured.',
    selectChatbot: 'Select ChatBot',
    selectQueue: 'Select Queue',
    selectUser: 'Select User',
    defaultTooltip: 'Set this connection as default.',
    deleteTooltip: 'Permanently delete this connection.',
    syncTooltip: 'Sync old messages.',
    actionWarningDelete: 'Attention! Do you really want to delete this connection?',
    disconnectWarning: 'Attention! Do you really want to disconnect this session?',
    defaultSet: 'Connection successfully set as default.',
    closeOpenTicketsPrompt: 'Attention!! Do you really want to close all open tickets for this channel?',
    closePendingTicketsPrompt: 'Attention!! Do you really want to close all pending tickets for this channel?',
    disconnectPrompt: 'Attention!! Do you really want to disconnect?',
    deleteChannelPrompt: 'Attention!! Do you really want to delete?',
    deleteChannelMessage: 'Open chats from this channel will be closed. They can be viewed on the ticket panel but will no longer be accessible.',
    tokenRequiredTelegram: 'It is necessary to provide the token for Telegram.',
    qrCodeGenerated: 'QR Code successfully generated.',
    errorGeneratingQrCode: 'Error generating the QR Code.',
    whatsappSaveError: 'Error saving the WhatsApp number.',
    whatsappSaved: 'Connection successfully added.',
  },
  sessaoItemStatus: {
    waitingQrCode: 'Waiting for QR Code scan',
    clickQrCodeButton: 'Click the "QR CODE" button and scan the QR Code with your phone to start the session',
    disconnectedError: 'Failed to establish communication for this channel.',
    whatsappDisconnected: 'Ensure your phone is connected to the internet and try again, or request a new QR Code.',
    wabaDisconnected: 'Try reconnecting. If the error persists, verify the tokens are correct.',
    telegramDisconnected: 'Try reconnecting. If the error persists, verify the token is correct.',
    instagramDisconnected: 'Try reconnecting. If the error persists, verify the credentials are correct.',
    connectionEstablished: 'Connection established',
    noDataLoading: 'Loading data...',
    lostConnection: 'Connection with the phone was lost',
    checkPhoneConnection: 'Ensure your phone is connected to the internet and WhatsApp is open, or click the "Disconnect" button to obtain a new QR Code.',
    establishingConnection: 'Establishing connection.',
    mightTakeTime: 'This might take a while...',
    lastUpdate: 'Last Update',
  },
  sessaoModalQrcode: {
    title: 'Scan the QR Code to start the session',
    pairingCode: 'Pairing Code: ',
    waitingQrCode: 'Waiting for QR Code',
    openQrCodeInNewTab: 'Open QR Code in a New Tab',
    qrCodeIssue: 'If you encounter issues with scanning, request a new QR Code',
    newQrCode: 'New QR Code',
  },
  sessaoModalWhatsapp: {
    novo: {
      configuracaoSmtp: "SMTP Configuration",
      servidorSmtp: "SMTP Server",
      exemploSmtp: "Ex: smtp.gmail.com",
      porta: "Port",
      exemploPorta: "Ex: 587 for TLS, 465 for SSL",
      conexaoSegura: "Secure Connection (SSL/TLS)",
      habilitarConexaoSegura: "Enable for secure connections",
      usuarioEmail: "User/Email",
      seuEmailAutenticacao: "Your authentication email",
      senha: "Password",
      senhaAplicativo: "Your password or app password",
      emailRemetente: "Sender Email",
      emailRemetenteHint: "Email that will appear as the sender",
      emailResposta: "Reply-To Email (optional)",
      emailRespostaHint: "Email where replies will be sent",
      configuracaoOAuth2: "OAuth2 Configuration (Recommended for Gmail)",
      clientIdOAuth2: "Client ID from Google Cloud Console",
      clientIdOAuth2Hint: "Client ID from Google Cloud Console",
      exemploClientIdOAuth2: "Ex: 123456789-abcdef.apps.googleusercontent.com",
      clientSecretOAuth2: "Client Secret from Google Cloud Console",
      clientSecretOAuth2Hint: "Client Secret from Google Cloud Console",
      redirectUri: "Redirect URI (optional)",
      redirectUriHint: "Callback URL for OAuth2 (leave empty for default)",
      exemploRedirectUri: "Ex: https://yourdomain.com/auth/callback",
      comoObterCredenciaisOAuth2: "How to obtain OAuth2 credentials:",
      acessarGoogleCloudConsole: "Go to https://console.cloud.google.com",
      criarProjeto: "Create a project or select an existing one",
      habilitarGmailAPI: "Enable Gmail API",
      criarCredenciaisOAuth2: "Create OAuth2 credentials",
      configureUrlsAutorizadas: "Configure authorized URLs",
      gmailOAuth2: "Gmail OAuth2:",
      gmailOAuth2Hint: "Gmail requires OAuth2 authentication for third-party apps.",
      configurarOAuth2: "Configure OAuth2",
      status: "Status:",
      statusHint: "Authenticated and working",
      oAuth2Configurado: "OAuth2 Configured:",
      oAuth2ConfiguradoHint: "OAuth2 authentication active for Gmail.",
      protocoloAtivo: "Active protocol:",
      statusDaConexao: "Connection Status:",
      detalhes: "Details:",
      testarSmtp: "Test SMTP",
      verificarStatus: "Check Status",
      abraUrlAutorizacao: "Open the authorization URL and follow the instructions. After authorization, you will receive a code.",
      errorConfigurarOAuth2: "Error configuring OAuth2: ",
      configOAuth2: "OAuth2 Configuration",
      completarConfiguracao: "Complete Configuration",
      cancelar: "Cancel",
      errorCompletarOAuth2: "Error completing OAuth2: ",
      salveWhatsAppPrimeiro: "Save WhatsApp first to test SMTP connection",
      conexaoSmtpTestadaComSucesso: "SMTP connection tested successfully!",
      falhaNoTesteSmtp: "SMTP test failed: ",
      erroAoTestarSmtp: "Error testing SMTP: ",
      statusDaConexaoAtualizado: "Connection status updated!",
      erroAoVerificarStatus: "Error checking status: "
    },    
    selectNewChannel1: "Transferring conversations may encounter synchronization issues if the volume is high or between different types (APIs) of channels. In this case, make a backup of the conversations first, and do not delete the old channel until you are sure all conversations have been transferred.",
    selectNewChannel2: "Select the new channel to transfer conversations. Attention! This action is irreversible.",
    selectNewChannel3: "If the volume is high or between different types (APIs) of channels, perform the data migration directly in the database with the help of a DBA.",
    transferringChannels: 'Transferring channels...',
    checkErrors: 'Oops! Check the errors...',
    whatsappSaved: 'Connection ',
    sucess: ' successfully!',
    edited: 'edited',
    created: 'created',
    variables: 'Variables',
    attentionEvo: 'After creating the Evolution channel, the name cannot be edited. Avoid using spaces or special characters, as they will be automatically removed.',
    title: 'Add or Edit Channel',
    editChannel: 'Add or Edit Channel',
    createChannel: 'Add or Edit Channel',
    type: 'Type',
    tokenTelegram: 'Telegram Token',
    pairingCode: 'Pairing Code',
    exactNumber: 'Exact WhatsApp Account Number',
    informationTab: 'Information',
    recommendationsTab: 'Recommendations',
    wppWarning: [
      'Before connecting your WhatsApp to the system, remove the connection to WhatsApp Web.',
      'Depends on the smartphone.',
      'Requires periodic reconnection.',
      'For proper functioning, keep the phone synchronized, always on, and connected to the internet. Disable the screen saver and keep the WhatsApp app open.',
      'Archive unnecessary or older conversations on your phone.',
      'We recommend using Chrome browser and Windows operating system.',
      'Do not open WhatsApp Web with the synchronized number on the platform in another browser. If this happens, functionality may be impacted.',
      'Unofficial Service',
      'Requires periodic reconnection.',
      'Preferably use VPSs located in Brazil and your state.',
      'We recommend using Chrome browser and Windows operating system.',
      'It may present synchronization problems such as loss and receipt of messages',,
    ],
    wabaAdvantages: [
      'Guaranteed connection stability',
      'No risk of banning',
      'Security against account theft',
      'Allows the use of buttons',
      'Allows the use of templates',
    ],
    typeMessage: 'Type the message',
    save: 'Save',
    user: 'User',
    numberId: 'Phone Number ID',
    bmId: 'WhatsApp Business Account ID',
    apiVersion: 'Meta API Version',
    tokenWaba: 'Meta Business Manager Token',
    igData: 'Instagram Account Data',
    transferChannel: 'Transfer Channel',
    selectNewChannel: 'Select New Channel to Transfer Tickets',
    newChannel: 'New Channel',
    confirm: 'Confirm',
    attention: 'Attention',
    cancel: 'Cancel',
    timeSelection: 'Select Time',
    birthdayDateMessage: 'Birthday Message',
    selectHub: 'Select a Hub',
    importMessage: 'Import Device Messages',
    importMessageCaption: 'Enabling this option will import device messages into the system.',
    importGroupMessage: 'Import Group Messages',
    dateHourSync: 'Start Date and Time for Import',
    queueImport: 'Queue to Import Messages',
    qrCodeWarning1: 'This event only works when scanning the QR Code.',
    qrCodeWarning2: 'During import, disable the internal chatbot and other interactions, and keep operating hours open. Any message entering the system will interact with these settings if they are active.',
    ok: 'OK',
    dateHourEndSync: 'End Date and Time for Import',
    finalizeTicket: 'Close Tickets After Import',
    chatGptConfig: {
      model: 'ChatGPT Model',
      title: 'ChatGPT Settings',
      apiKey: 'ChatGPT API Key',
      organizationKey: 'ChatGPT Organization Key',
      stopWord: 'Word to disable ChatGPT',
      prompt: 'Option #1: ChatGPT Prompt',
      resetHistory: 'Reset ChatGPT History',
      assistantOption: 'Option #2: ChatGPT Assistants',
      assistantId: 'Enter the Assistant ID',
      resetPrompt: 'After changing the Prompt, the ChatGPT history must be reset by clicking the button below:',
      removeAssistant: 'Remove Assistant',
      voiceModel: 'ChatGPT Voice Model (alloy, echo, fable, onyx, nova, shimmer)',
      chatgptVoice: 'Activate ChatGPT Voice',
    },
    lmConfig: {
      title: "LM Studio Settings",
      url: "LM Studio URL",
      model: "LLMs Models",
      stopWord: "Word to disable LLMs",
      prompt: "LLMs Prompt",
    },
    geminiConfig: {
      title: "Gemini Settings",
      url: "Gemini API Key",
      model: "Gemini Models",
      stopWord: "Word to disable Gemini",
      prompt: "Gemini Prompt",
    },
    qwenConfig: {
      title: "Qwen Settings",
      url: "Qwen API Key",
      model: "Qwen Models",
      stopWord: "Word to disable Qwen",
      prompt: "Qwen Prompt",
    },
    claudeConfig: {
      title: "Claude Settings",
      url: "Claude API Key",
      model: "Claude Models",
      stopWord: "Word to disable Claude",
      prompt: "Claude Prompt",
    },
    deepseekConfig: {
      title: "Deepseek Settings",
      url: "Deepseek API Key",
      model: "Deepseek Models",
      stopWord: "Word to disable Deepseek",
      prompt: "Deepseek Prompt",
    },
    grokConfig: {
      title: "Grok Settings",
      url: "Grok API Key",
      model: "Grok Models",
      stopWord: "Word to disable Grok",
      prompt: "Grok Prompt",
    },
    ollamaConfig: {
      title: "Ollama Settings",
      url: "Ollama URL",
      model: "LLMs Models",
      stopWord: "Word to disable LLMs",
      prompt: "LLMs Prompt",
    },
    proxyConfig: {
      useProxy: 'Use Proxy',
      proxyUrl: 'Proxy URL',
      proxyUser: 'Proxy User',
      proxyPass: 'Proxy Password',
    },
    enable: {
      webPush: 'Enable Web Push (Beta)',
      webPush2: 'Enabling this option will send notifications to the APP.',
      autoEvaluation: 'Enable automatic evaluation',
      autoEvaluation2: 'Enabling this option will automatically send the evaluation when resolving each ticket.',
      transcribeAudio: 'Enable audio transcription',
      transcribeAudio2: 'Enabling this option will transcribe received audios.',
      transcribeAudio5: 'JSON Configuration',
      transcribeAudio4: 'Enter the configurations in JSON format for Google Speech-To-Text.',
      transcribeAudio3: 'Audio Transcription Configuration (JSON)',
      autoDistribution: 'Enable auto-distribution',
      autoDistribution2: 'Enabling this option will distribute new tickets evenly among the system agents.',
      destroyMessage: 'Enable message destruction',
      destroyMessage2: 'Enabling this option will destroy deleted messages from the system.',
      birthdayMessage: 'Enable birthday message sending',
      birthdayMessage2: 'Enabling this option will send the defined message to the contact on their birthday.',
      birthdayMessage3: 'Birthday Message',
      birthdayMessage4: 'Message',
      birthdayMessage5: 'File (Upload the file after creating the channel)',
      birthdayMessage6: 'Choose the file',
      birthdayMessage7: 'Time: The system does not consider minutes (enter the full hour, e.g., 12:00):',
      birthdayMessage8: 'Choose the time',
      removeBirthdayFile: 'Remove birthday file',
      confirmRemoveBirthdayFile: 'Confirm removal',
      confirmRemoveBirthdayFileMessage: 'Are you sure you want to remove the birthday message file?',
      birthdayFileRemoved: 'Birthday file removed successfully!',
      externalIntegration: 'Enable automatic disabling of external integrations',
      externalIntegration2: 'Enabling this option will disable interactions from ChatGPT, Typebot, Dify, N8N, and DialogFlow when opening a ticket.',
      waitProcessExternalInteraction:'Enable waiting on message processing with external integrations  (Typebot, ChatGPT...)',
      waitProcessExternalInteraction2:'When receiving more than one message in customer service, the system will only process new messages after the first message has been responded to. Messages received in the meantime will not interact with the external integration.'
    },
    farewell: 'Farewell',
    farewellMessage: 'Farewell Message for the Ticket',
    automaticClosure: 'Keyword for automatic closure',
    automaticClosure2: 'This keyword, when received, will automatically close the ticket.',
    wavoipWarn: 'To connect more than one token, provide the keys separated by commas (token1,token2...)',
    whatsappTypes: {
      waba: 'WhatsApp Official (WABA)',
      baileys: 'WhatsApp Baileys (QRCode)',
      whatsapp: 'WhatsApp WebJs (QRCode)',
      meow: 'WhatsApp Meow (QRCode - Beta)',
      evo: 'WhatsApp Evolution (QRCode - Beta)',
      telegram: 'Telegram',
      hub: 'Hub NotificaMe',
    },
    conectLimit: 'Connection limit reached',
    saveError: 'Error saving the channel. Please try again.',
    wabaError: 'Oops! Incorrect WABA data, verify if the identifiers, token, and app permissions in your BM are correct...',
    integrationUrlCopied: 'Integration URL copied!',
    attentionMessage: 'Do you really want to transfer all tickets to the new channel? This action is irreversible.',
    noChannelSelected: 'Choose the new channel!',
    newChannelSuccess: 'Channel successfully transferred!',
    connectionError: 'Error transferring the channel. Please try again.',
    autoDistributeInfo: 'Automatically distribute tickets among available agents.',
    transcribeAudioInfo: 'Automatically transcribe received audios to text.',
    birthdayMessageInfo: 'Configuration for automatically sending birthday messages to contacts.',
    farewellInfo: 'Message sent automatically when closing a ticket.',
    confirmChannelTransfer: 'Are you sure you want to transfer the tickets to this channel?',
    importMessagesInfo: 'Import messages from the device to the system.',
    importGroupsInfo: 'Include group messages during import.',
    externalIntegrationDisableInfo: 'Automatically disable external integrations when starting a ticket.',
    dialogflowConfig: {
      projectId: 'Dialogflow Project ID',
      language: 'Language',
      jsonFile: 'JSON Configuration File',
      jsonContent: 'JSON File Content',
    },
    wavoip: {
      title: 'Wavoip Settings',
      token: 'Wavoip Token',
      info: 'Add tokens separated by commas for multiple accounts.',
    },
    hubConfig: {
      title: 'Hub Settings',
      selectHub: 'Select a Hub',
      hubIntegration: 'Hub NotificaMe Configuration',
    },
    n8nConfig: {
      title: 'N8N Settings',
      url: 'N8N URL',
      instructions: 'Configure the integration flow with N8N in this section.',
    },
    dialogConfig: {
      title: 'Dialogflow Settings',
      key: 'Dialogflow API Key',
      url: 'Dialogflow URL',
      name: 'Bot Name in Dialogflow',
      restartWord: 'Word to restart Dialogflow',
      stopWord: 'Word to disable Dialogflow',
      jsonContent: 'JSON File Content',
      jsonFile: 'JSON File Name',
      lang: 'Language',
      projectId: 'Project ID',
      buttonWarning: 'Enabling this option will send buttons for Dialogflow options, otherwise, lists will be sent.',
    },
    typeConfig: {
      title: 'Typebot Settings',
      key: 'Typebot API Key',
      url: 'Typebot URL',
      name: 'Bot Name in Typebot',
      restartWord: 'Word to restart Typebot',
      stopWord: 'Word to disable Typebot',
      type: 'Configuration Type',
      unknowMessage: 'Message for invalid response',
      buttonChoose: 'Message for button selection',
      buttons: 'Enable buttons',
      buttonWarning: 'Enabling this option will send buttons for Typebot options, otherwise, lists will be sent.',
    },
    difyConfig: {
      title: 'Dify Settings',
      key: 'Dify API Key',
      url: 'Dify URL',
      restartWord: 'Word to restart Dify',
      stopWord: 'Word to disable Dify',
      type: 'Configuration Type',
      typeOptions: {
        agent: 'Agent',
        textGenerator: 'Text Generator',
        chatBot: 'ChatBot',
        workflow: 'Workflow',
      },
    },
    additionalSettings: {
      title: 'Additional Layers for Non-Official Services',
      proxy: {
        useProxy: 'Use Proxy',
        proxyUrl: 'Proxy URL (http://177.69.214.155:53281)',
        proxyUser: 'Proxy User',
        proxyPass: 'Proxy Password',
      },
    },
    waiting: 'Please wait, trying to create your channel...',
    errors: {
      invalidJson: 'The entered JSON format is invalid. Please correct and try again.',
      requiredField: 'This field is required.',
      operationFailed: 'The operation failed. Please try again.',
    },
    success: {
      operationCompleted: 'The operation was successfully completed!',
      channelSaved: 'The channel was successfully saved!',
      transferCompleted: 'Transfer successfully completed!',
    },
    variaveis: [
      { label: 'Name', value: '{{name}}' },
      { label: 'Greeting', value: '{{greeting}}' },
      { label: 'Protocol', value: '{{protocol}}' },
      { label: 'Email (if exists)', value: '{{email}}' },
      { label: 'Phone', value: '{{phoneNumber}}' },
      { label: 'Kanban (if exists)', value: '{{kanban}}' },
      { label: 'Agent (if in service)', value: '{{user}}' },
      { label: 'Agent Email (if in service)', value: '{{userEmail}}' },
      { label: 'First Name (if exists)', value: '{{firstName}}' },
      { label: 'Last Name (if exists)', value: '{{lastName}}' },
      { label: 'Business (if exists)', value: '{{businessName}}' },
    ],
    variaveisAniversario: [
      { label: 'Name', value: '{{name}}' },
      { label: 'Greeting', value: '{{greeting}}' },
      { label: 'Email (if exists)', value: '{{email}}' },
      { label: 'Phone', value: '{{phoneNumber}}' },
      { label: 'First Name (if exists)', value: '{{firstName}}' },
      { label: 'Last Name (if exists)', value: '{{lastName}}' },
      { label: 'Business (if exists)', value: '{{businessName}}' },
    ],
  },    
  sessaoTenant: {
    communicationChannels: 'Communication Channels',
    tenant: 'Tenant',
    name: 'Name',
    status: 'Status',
    session: 'Session',
    number: 'Number',
    lastUpdate: 'Last Update',
    default: 'Default',
    actions: 'Actions',
    editConnection: 'Edit Connection',
    deleteConnection: 'Delete Connection',
    deleteAttention: 'Attention!! Do you really want to delete?',
    deleteWarning: 'It’s not a good idea to delete if this WhatsApp has already generated tickets.',
    yes: 'Yes',
    no: 'No',
    errorLoadingColors: 'Error loading colors',
  },
  sessaoTenantStatus: {
    waitingQrCode: 'Waiting for QR Code scan',
    clickQrCodeButton: "Click the 'QR CODE' button and scan the QR Code with your phone to start the session",
    connectionFailed: 'Failed to establish communication for this channel.',
    whatsappCheck: 'Ensure your phone is connected to the internet and try again, or request a new QR Code.',
    telegramCheck: 'Try reconnecting. If the error persists, verify the token is correct.',
    instagramCheck: 'Try reconnecting. If the error persists, verify the credentials are correct.',
    connectionEstablished: 'Connection established!',
    connectionLost: 'Connection with the phone was lost',
    ensureInternet: 'Ensure your phone is connected to the internet and WhatsApp is open, or click the "Disconnect" button to obtain a new QR Code.',
    establishingConnection: 'Establishing connection.',
    thisMayTakeTime: 'This may take a while...',
    lastUpdate: 'Last Update:',
  },
  relatorioContatosAtendimento: {
    unknownChannel: 'Unknown channel',
    yes: 'Yes',
    no: 'No',
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Ticket Report',
    filtersLegend: 'Filters (Ticket creation date)',
    startDate: 'Start',
    endDate: 'End',
    status: 'Status',
    queues: 'Queues',
    channels: 'Channels',
    demands: 'Demand',
    connections: 'Connections',
    users: 'Users',
    minValue: 'Minimum Value',
    maxValue: 'Maximum Value',
    generateButton: 'Generate',
    printButton: 'Print',
    excelButton: 'Excel',
    selectStatus: 'Select Status',
    selectQueues: 'Select Queues',
    selectChannels: 'Select Channels',
    selectDemands: 'Select Demands',
    selectConnections: 'Select Connections',
    selectUsers: 'Select Users',
    inputMinValue: 'Enter minimum value',
    inputMaxValue: 'Enter maximum value',
    tableHeaders: {
      ticketNotes: 'Ticket Notes',
      id: 'ID',
      status: 'Status',
      name: 'Name',
      number: 'Number',
      connection: 'Connection',
      lastMessage: 'Last Message',
      unreadMessages: 'Unread Messages',
      demand: 'Demand',
      queues: 'Queues',
      channel: 'Channel',
      value: 'Value',
      creationDate: 'Creation Date',
    },
    notifications: {
      loadError: 'Error loading data.',
      noDates: 'Please fill in the dates to generate the report.',
      noQueues: 'Select queues to generate the report.',
      reportGenerated: 'Report successfully generated!',
      exportingError: 'Error exporting the table.',
      exportSuccess: 'Report successfully exported!',
      exportError: 'Error exporting the report. Please try again.',
      loadingMotives: 'Problem loading demands.',
      loadingUsers: 'Problem loading users.',
      loadingQueues: 'Error loading queues.',
    },
    status:{
      status: 'Status',
      open: 'Open',
      closed: 'Closed',
      pending: 'Pending',
    }
  },
  relatorioContatosCarteira: {
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Contacts by Wallet Report',
    filters: 'Filters',
    tableHeaders: {
      name: 'Name',
      whatsapp: 'WhatsApp',
      email: 'Email',
      wallets: 'Wallets',
    },
    generateButton: 'Generate Report',
    printButton: 'Print',
    excelButton: 'Export to Excel',
    notifications: {
      selectWallet: 'Oops... To generate the report, at least one wallet must be selected.',
      reportGenerated: 'Report successfully generated!',
    },
  },
  relatorioContatosEstado: {
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Contacts by State Report',
    filters: 'Filters',
    tableHeaders: {
      name: 'Name',
      whatsapp: 'WhatsApp',
      email: 'Email',
      state: 'State',
    },
    generateButton: 'Generate Report',
    printButton: 'Print',
    excelButton: 'Export to Excel',
    notifications: {
      selectState: 'Oops... To generate the report, at least one state must be selected.',
      reportGenerated: 'Report successfully generated!',
    },
  },
  relatorioContatosEtiqueta: {
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Contacts by Tag Report',
    filters: 'Filters',
    tableHeaders: {
      name: 'Name',
      whatsapp: 'WhatsApp',
      email: 'Email',
      tags: 'Tags',
    },
    generateButton: 'Generate Report',
    printButton: 'Print',
    excelButton: 'Export to Excel',
    notifications: {
      selectTags: 'Oops... To generate the report, at least one tag must be selected.',
      reportGenerated: 'Report successfully generated!',
    },
  },
  relatorioContatosGeral: {
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Contacts Report',
    filters: 'Filters (Contact creation date)',
    tableHeaders: {
      empty: 'Empty',
      extraInfo: 'Extra Information',
      name: 'Name',
      whatsapp: 'WhatsApp',
      email: 'Email',
    },
    generateButton: 'Generate Report',
    printButton: 'Print',
    excelButton: 'Export to Excel',
    notifications: {
      reportGenerated: 'Report successfully generated!',
    },
  },
  relatorioContatosResumo: {
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Summary of User Services Report',
    filters: 'Filters (Service Date)',
    tableHeaders: {
      name: 'Name',
      email: 'Email',
      pending: 'Pending',
      inProgress: 'In Service',
      resolved: 'Resolved',
      total: 'Total',
    },
    generateButton: 'Generate Report',
    printButton: 'Print',
    excelButton: 'Export to Excel',
    notifications: {
      reportGenerated: 'Report successfully generated!',
    },
  },
  relatorioContatosKanban: {
    sheetName: 'report',
    sheetTitle: 'Service Report',
    title: 'Contacts by Kanban Report',
    filters: 'Filters',
    tableHeaders: {
      name: 'Name',
      whatsapp: 'WhatsApp',
      email: 'Email',
      kanban: 'Kanbans',
    },
    generateButton: 'Generate Report',
    printButton: 'Print',
    excelButton: 'Export to Excel',
    notifications: {
      reportGenerated: 'Report successfully generated!',
      selectKanban: 'Oops... To generate the report, at least one Kanban must be selected.',
    },
  },
  webphonecall: {
    callStatus: {
      accept: 'Accepted',
      accept_elsewhere: 'Accepted by another user',
      reject_elsewhere: 'Rejected by another user',
      terminate: 'Terminated',
      reject: 'Rejected',
      outcoming_calling: 'Dialing',
      preaccept: 'Calling',
      relaylatency: 'Calling',
      unknown: 'Unknown',
    },
    tooltips: {
      clear: 'Clear',
      close: 'Close',
      call: 'Call',
      hangUp: 'Hang Up',
      mute: 'Mute',
      unmute: 'Unmute',
    },
    labels: {
      keypad: 'Keypad',
      display: 'Display',
      duration: 'Duration',
    },
    placeholders: {
      phoneNumber: 'Enter the number',
    },
  },
  webphone: {
    callStatus: {
      accept: 'Accepted',
      accept_elsewhere: 'Accepted by another user',
      reject_elsewhere: 'Rejected by another user',
      terminate: 'Terminated',
      reject: 'Rejected',
      outcoming_calling: 'Dialing',
      preaccept: 'Calling',
      relaylatency: 'Calling',
      offer: 'Call Offer',
      unknown: 'Unknown',
    },
    tooltips: {
      clear: 'Clear',
      close: 'Close',
      call: 'Call',
      hangUp: 'Hang Up',
      accept: 'Accept',
      reject: 'Reject',
      mute: 'Mute',
      unmute: 'Unmute',
    },
    labels: {
      duration: 'Duration',
      caller: 'Caller',
      inbox: 'Inbox',
      phoneNumber: 'Phone Number',
    },
    placeholders: {
      phoneNumber: 'Enter the number',
    },
  },
  chatgptField: {
    placeholders: {
      apiKey: 'Enter the ChatGPT API Key',
      orgId: 'Enter the Organization ID',
      offKeyword: 'Keyword to turn off ChatGPT',
      prompt: 'Prompt for ChatGPT',
    },
  },
  delayField: {
    placeholders: {
      delayValue: 'Enter the delay value in seconds',
    },
  },
  typebotField: {
    placeholders: {
      url: 'Enter the Typebot URL',
      name: 'Enter the Typebot name',
      offKeyword: 'Keyword to turn off Typebot',
      restartKeyword: 'Keyword to restart Typebot',
    },
  },
  mediaField: {
    labels: {
      uploadFile: 'Media for message composition',
      replaceFile: 'Replace File',
      downloadPdf: 'Download PDF',
      captionPlaceholder: 'Subtitle',
    },
    errors: {
      fileError: 'Error uploading file',
      checkFiles: 'Please check the uploaded files and try again.',
    },
  },
  messageField: {
    placeholders: {
      typeMessage: 'Enter your message here...',
    },
    tooltips: {
      emoji: 'Emoji',
      variables: 'Variables',
    },
    variables: {
      name: 'Name',
      greeting: 'Greeting',
      protocol: 'Protocol',
      email: 'Email (if exists)',
      phoneNumber: 'Phone Number',
      kanban: 'Kanban (if exists)',
      user: 'Agent (if in service)',
      userEmail: 'Agent Email (if in service)',
      firstName: 'First Name (if exists)',
      lastName: 'Last Name (if exists)',
      businessName: 'Business (if exists)',
    },
  },
  messageOptionField: {
    placeholders: {
      typeMessage: 'Enter your message here...',
      options: 'Options',
    },
    hints: {
      options: 'Options will be treated as either a list/buttons or plain text depending on the destination channel support.',
    },
    tooltips: {
      emoji: 'Emoji',
    },
  },
  webhookField: {
    placeholder: 'Add Webhook (GET)',
    tooltip: {
      variables: 'Variables',
    },
    variables: {
      name: 'Name',
      greeting: 'Greeting',
      protocol: 'Protocol',
      email: 'Email (if exists)',
      phoneNumber: 'Phone Number',
      kanban: 'Kanban (if exists)',
      user: 'Agent (if in service)',
      userEmail: 'Agent Email (if in service)',
      firstName: 'First Name (if exists)',
      lastName: 'Last Name (if exists)',
      businessName: 'Business (if exists)',
    },
  },
  nodeForm: {
    ChatBotBlockField: "Block ChatBot",
    OpportunityField: "Opportunity",
    GoogleAgendaField: "Google Calendar",
    ScheduleField: "Schedule",
    WebhookAllField: "Webhooks",
    ChatFlowField: 'Chat Flow Field',
    MessageField: 'Message Field',
    MediaField: 'Media Field',
    TypebotField: 'Typebot Field',
    ChatGPTField: 'ChatGPT Field',
    DelayField: 'Delay Field',
    TagField: 'Tag Field',
    KanbanField: 'Kanban Field',
    WebhookField: 'Webhook Field',
    routeTo: 'Route to',
    routeToChatgpt: 'When receiving the keyword to disable, route to:',
    key: 'Key',
    redefine: 'Redefine',
    welcomeMessage: 'Welcome Message (Queue/User)',
    welcomeMessage2: 'When the bot directs the service to a queue or user, this message will be sent.',
    fallbackMessage: 'If no expected response is sent',
    fallbackMessage2: 'This exception will be applied if the response sent by the client does not match the expected values as per the conditions of the step.',
    keyWord: 'Keyword to start the flow',
    keyWord2: 'This interaction will be triggered when the client sends the defined keyword, and the client will be routed to the configured Queue/User.',
    noAnswer: 'No answer',
    noAnswer2: 'After the set time, if the client does not respond, the bot will route to the configured Queue/User.',
    hourMessage: 'Out of Hours Message',
    hourMessage2: 'After the set time, if the client does not respond, the bot will send this message, if the previously chosen setting is TERMINATE.',
    maxAttempts: 'Max Bot Attempts',
    maxAttempts2: 'Once the maximum number of question/answer retries is exceeded, if the client does not send a valid response, the bot will route to the configured Queue/User.',
    message: 'Message',
    message2: 'Feedback message',
    firstInteraction: 'Route on first interaction',
    firstInteraction2: 'This interaction will be triggered on the first interaction with the client, and the client will be routed to the configured Queue/User.',
    outBussinesHour: 'If outside business hours',
    outBussinesHour2: 'This interaction will be triggered if the client sends a message outside business hours, and the client will be routed to the configured Queue/User.',
    selfDistribution: 'Self-distribute service',
    selfDistribution2: 'No: Disabled',
    selfDistribution3: 'Random: Will assign a user randomly.',
    selfDistribution7: 'Balanced: Will assign the user with the least number of open tickets.',
    selfDistribution4: 'No',
    closeTicket: 'Close Service',
    closeTicket2: 'If the client sends any of the expected information, the service will be closed.',
    endMessage: 'End Message (Queue/User)',
    endMessage2: 'When the bot finishes the service for a queue or user, this message will be sent.',
    warning1: 'Step represents the initial contact',
    warning2: '- If it’s the first contact from the client, the system',
    warning3: 'will automatically save the client’s information in the agenda.',
    warning4: '- The bot will interact on the services initiated by the clients.',
    warning5: '- The bot will stop interacting if the service is taken over by a user.',
    warning6: "- Interactions with Typebot, ChatGPT, and Block Chatbot must always be the last node of the step; the internal chatbot is turned off, and the service continues with the defined integration.",
    warning7: "- When using the regex condition, it will be processed before any other condition.",
    selfDistribution5: 'Random',
    selfDistribution6: 'Balanced',
    emoji: 'Emoji',
    chatbotBlock: {
      chatbotBlocked: "ChatBot Blocked",
      chatbotActive: "ChatBot Active"
    },
    googleAgenda: {
      selectConfigHint: "Select the Google Calendar configuration",
      dateType: "Date Type",
      dateTypeHint: "Select the date type for scheduling",
      daysFromInteraction: "Days from interaction",
      daysRequired: "Days is required",
      daysFromInteractionHint: "Enter the number of days from interaction for scheduling",
      eventTitleHint: "Enter the event title",
      startDateTimeHint: "Enter the event start date and time",
      endDateTimeHint: "Enter the event end date and time",
      descriptionHint: "Enter the event description",
      locationHint: "Enter the event location",
      sendNotifications: "Send notifications",
      reminderBefore: "Reminder before",
      reminderMinutes: "Minutes before",
      reminderMinutesHint: "Enter the number of minutes before the event to send notifications",
      today: "Today",
      tomorrow: "Tomorrow",
      days_from_interaction: "Days from interaction",
      custom: "Custom date"
    },
    opportunity: {
      contactAutoFill: "Contact will be automatically filled from the ticket",
      today: "Today",
      tomorrow: "Tomorrow",
      days_from_interaction: "Days from interaction",
      custom: "Custom date",
      open: "Open",
      win: "Won",
      lose: "Lost",
      dateTypeHint: "Select the date type for scheduling",
      dateType: "Date Type"
    },
    schedule: {
      scheduleDateRequired: "Date is required",
      scheduleType: "Schedule Type",
      scheduleTypeHint: "Select the schedule type",
      scheduleDate: "Custom Date and Time",
      scheduleDateHint: "Enter the custom date and time for scheduling",
      uploadImage: "Upload Image",
      selectImage: "Select Image",
      deleteImage: "Delete Image",
      message: "Message",
      messageHint: "Enter the scheduling message",
      sendSignature: "Send Signature",
      includeContactInfo: "Include contact information",
      advancedSettings: "Advanced Settings",
      delayBeforeSend: "Delay before sending",
      delayBeforeSendHint: "Enter the delay value in seconds",
      customSchedule: "Custom date",
      thirtyMinutes: "30 minutes",
      oneHour: "1 hour",
      tomorrow: "Tomorrow",
      nextWeek: "Next week",
      nextMonth: "Next month"
    },
    webhook: {
      url: "Webhook URL",
      urlPlaceholder: "Enter the Webhook URL",
      urlHint: "Enter the Webhook URL",
      httpMethod: "HTTP Method",
      httpMethodHint: "Select the HTTP method for the webhook",
      headers: "Headers",
      headerKey: "Key",
      headerKeyPlaceholder: "Enter the header key",
      headerValue: "Value",
      headerValuePlaceholder: "Enter the header value",
      addHeader: "Add Header",
      body: "Body",
      bodyType: "Body Type",
      bodyContent: "Body Content",
      bodyContentPlaceholder: "Enter the body content",
      bodyContentHint: "Enter the body content",
      formDataPlaceholder: "Enter the form content",
      formDataHint: "Enter the form content",
      testWebhook: "Test Webhook",
      testWebhookHint: "Test the webhook to verify if it is working correctly.",
      testSuccess: "Webhook tested successfully!",
      testError: "Error testing webhook",
      responseDetails: "Response Details",
      advancedSettings: "Advanced Settings",
      timeout: "Timeout",
      timeoutHint: "Enter the timeout value in seconds",
      retryAttempts: "Retry Attempts",
      retryAttemptsHint: "Enter the number of retry attempts",
      retryDelay: "Retry Delay",
      retryDelayHint: "Enter the delay value in seconds",
      jsonBody: "JSON Body",
      formBody: "Form Body",
      testSuccessDetails: "Response received from the server (CORS blocks reading the response in the browser)",
      testErrorCors: "Network or CORS error. Check if the URL is accessible.",
      testErrorCorsDetails: "Error: {error}\n\nTip: The webhook may be working, but the browser blocks it due to CORS. Check on webhook.site if the request was received.",
      testErrorUnknown: "Unknown error"
    },
    ReasonsField: "Reason",
    SmsField: "SMS",
    VapiField: "VAPI",
    NotesField: "Notes",
    clear: "Clear",
    phoneNumberId: "Phone Number",
    assistantId: "Assistant",
    sms: {
      service: "Service",
      message: "Message",
      messagePlaceholder: "Enter the SMS message"
    },
    notes: {
      note: "Notes",
      notePlaceholder: "Enter notes"
    },
    buttons: {
      addStep: 'New Step',
      saveFlow: 'Save Flow',
      reorder: 'Reorder',
      addInteraction: {
        reasons: "Reason",
        sms: "SMS",
        vapi: "VAPI",
        notes: "Notes",
        chatbotBlock: "Block ChatBot",
        opportunity: "Opportunity",
        googleAgenda: "Google Calendar",
        schedule: "Schedule",
        webhookAll: "Webhooks",
        message: 'Send Message',
        media: 'Send documents, video, audio, and other files.',
        typebot: 'Add Typebot',
        chatgpt: 'Add ChatGPT',
        delay: 'Add Delay',
        tag: 'Add Tag',
        kanban: 'Add Kanban',
        webhook: 'Add Webhook (GET)',
        newFlow: 'Start New Flow',
      },
      addCondition: 'New Condition',
    },
    optionsVariableType: {
      text: 'Text',
      number: 'Number',
    },
    labels: {
      variableType: 'Variable Type',
      captureVariable: 'Capture Response as Variable',
      comparisonType: 'Comparison Type',
      timesAttempted: 'Number of Attempts',
      flow: 'Flow Configuration',
      stepName: 'Name',
      interactions: 'Interactions',
      conditions: 'Conditions',
      if: 'If',
      responses: 'Responses',
      routeTo: 'Route to',
      step: 'Step',
      queue: 'Queue',
      user: 'User',
      closeTicket: 'Close Service',
      channel: 'Channels',
      time: 'Time (minutes)',
      parameters: 'Parameters',
      keyword: 'Trigger Word',
      maxRetries: 'Max Attempts',
      autoDistribute: 'Auto-distribute Service',
      outOfHours: 'Outside business hours',
      firstInteraction: 'First Interaction',
      endMessage: 'End Message',
      welcomeMessage: 'Welcome Message',
      noResponse: 'No Response',
    },
    optionsComparisonType: {
      equals: "Equals",
      contains: "Contains",
      startsWith: "Starts with",
      endsWith: "Ends with",
      regex: "Regex"
    },    
    placeholders: {
      typeMessage: 'Enter your message here...',
      keyword: 'Enter the keyword',
      feedbackMessage: 'Feedback message',
      farewellMessage: 'Farewell message',
    },
    hints: {
      captureVariable: "Enter the variable key",
      typeEqual: 'Enter the exact text for comparison.',
      typeContains: 'Enter the text that must be contained in the response.',
      typeStartsWith: 'Enter the text that the response must start with.',
      typeEndsWith: 'Enter the text that the response must end with.',
      typeRegex: 'Enter a valid regular expression.',
      queueRedirect: 'This interaction will be triggered when the client sends the defined keyword.',
      outHours: 'Triggered if the client sends a message outside business hours.',
      autoDistribute: 'Will choose a user from the queue for service.',
      typeValue: 'Enter the value and press enter',
    },
    options: {
      routeTo: {
        queue: 'Queue',
        user: 'User',
        close: 'Close',
        channel: 'Channel',
      },
    },
  },
  monitor: {
    monitor: "Monitor",
    title: "System Monitoring",
    usage: "Usage",
    cores: "Cores",
    memory: "Memory",
    total: "Total",
    free: "Free",
    used: "Used",
    usedPercentage: "Usage Percentage",
    uptime: "Uptime",
  },    
  common: {
    required: 'Required',
    downloadSuccess: 'Download successful!',
    downloadError: 'Error downloading file',
    duplicate: "Duplicate",
    enableChatgptAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with ChatGPT. This setting will affect all support channels.",
    enableClaudeAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Claude. This setting will affect all support channels.",
    enableDeepseekAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Deepseek. This setting will affect all support channels.",
    enableDialogflowAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Dialogflow. This setting will affect all support channels.",
    enableDifyAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Dify. This setting will affect all support channels.",
    enableGeminiAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Gemini. This setting will affect all support channels.",
    enableGrokAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Grok. This setting will affect all support channels.",
    enableLmAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with LM. This setting will affect all support channels.",
    enableN8NAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with N8N. This setting will affect all support channels.",
    enableOllamaAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Ollama. This setting will affect all support channels.",
    enableQwenAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Qwen. This setting will affect all support channels.",
    enableTypebotAllBanner: "Attention: Configure the credentials for all channels. With this setting enabled, all new tickets created in any channel will automatically receive integration with Typebot. This setting will affect all support channels.",
    espiarAtendimento: 'Spy on Ticket',
    atualizar: 'Update',
    dadosAtualizados: 'Data updated successfully!',
    erroAtualizacao: 'Error updating data!',
    funil: 'Pipeline',
    accessDenied: 'Access Denied',
    loadMoreTickets: 'Searching for tickets... If necessary, click the button next to Load more tickets one or more times to list older tickets.',
    oldMessage: "Old message, load history by scrolling up...",
    rollTop: "Scrolling up, trying to find the message...",
    messageNotFound: "Message not found",
    fullscreen: 'Fullscreen',
    info: 'Information',
    addInfo: 'Add Information',
    hours: 'hours',
    minutes: 'minutes',
    confirmDeleteElement: 'Do you really want to delete the element ({idx})?',
    confirmDeleteCondition: 'Do you really want to delete the condition ({idx})?',
    invalidDate: 'Invalid date',
    pay: 'Invoice',
    version: 'Version',
    resume: 'Resume',
    readMore: 'Read more',
    redefineError: 'Error resetting password',
    recoverSucess: 'Password reset successfully!',
    recoverError: 'Error requesting password reset',
    recoverSend: 'Password recovery email sent successfully!',
    limitExceed: 'Too many login attempts. Please try again in 1 minute',
    loginSuccess: 'Login successful!',
    busyLine: 'Line busy, please try again later or upgrade',
    system: 'System',
    newClientPending: 'New client pending',
    client: 'Client: ',
    loading: 'Loading...',
    errorOccurred: 'An error occurred',
    errorFetchingData: 'Error fetching data',
    noData: 'No data',
    notInformed: 'Not informed',
    resolve: 'Resolve',
    register: 'Register',
    unknown: 'Unknown',
    message: 'Message',
    edited: 'Edited',
    sync: 'Synchronized',
    reply: 'Reply',
    forward: 'Forward',
    markToForward: 'Forward multiple (mark)',
    react: 'React',
    edit: 'Edit',
    delete2: 'Delete',
    download: 'Download',
    download2: 'Download',
    contact: 'Contact',
    typeMessage: 'Type your message...',
    emoji: 'Emoji',
    types: 'Types',
    ok: 'OK',
    cancel: 'Cancel',
    start: 'Start',
    close: 'Close',
    confirm: 'Confirm',
    send: 'Send',
    updated: 'Updated!',
    users: 'Users',
    dateHourFormat: 'dd/MM/yyyy HH:mm:ss',
    dateFormat: 'dd/MM/yyyy',
    active: 'Active',
    actions: 'Actions',
    description: 'Description',
    import: 'Import',
    save: 'Save',
    cancel: 'Cancel',
    add: 'Add',
    delete: 'Delete',
    no: 'No',
    yes: 'Yes',
    out: 'Log out',
    continue: 'Continue',
    attention: 'Attention!!',
    search: 'Search...',
    lang: 'pt-BR',
    variables: {
      name: 'Name',
      email: 'Email (if exists)',
      phoneNumber: 'Phone',
      kanban: 'Kanban (if exists)',
      firstName: 'First Name (if exists)',
      lastName: 'Last Name (if exists)',
      businessName: 'Business (if exists)',
    },
    notifications: {
      success: 'Configuration changed!',
      error: 'An error occurred.',
    },
    status: {
      pending: 'Pending',
      received: 'Received',
      overdue: 'Overdue',
      unknown: 'Unknown Status',
    },
  },
  funil: {
    createEvent: "Create Event",
    selectCalendar: "Select Calendar",
    noConfig: "No configuration available",
    createGoogleCalendarEvent: "Create event in Google Calendar",
    viewGoogleCalendar: "View Google Calendar events",
    googleCalendarEvents: "Google Calendar Events",
    noCalendarConfig: "No configuration available",
    editCalendarEvent: "Edit event",
    openCalendarEvent: "Open in Google Calendar",
    eventTitle: "Event Title",
    eventTitleRequired: "Title is required",
    eventStartDate: "Start Date",
    eventStatus: "Status",
    eventStartDateRequired: "Start date is required",
    eventEndDate: "End Date",
    eventEndDateRequired: "End date is required",
    eventDescription: "Description",
    eventLocation: "Location",
    eventAttendees: "Attendees (emails separated by commas)",
    eventAttendeesHint: "example＠email.com, other＠email.com",
    updateEvent: "Update Event",
    cancelUpdateEvent: "Cancel",
    eventActions: "Actions",
    eventUpdatedSuccess: "Event successfully updated!",
    selectCalendarConfig: "Select a configuration to fetch events.",
    configNotFound: "Selected configuration not found",
    configureGoogleCalendar: "Configure Google Calendar credentials first",
    eventError: "Error loading events",
    calendarConfigError: "Error loading Google Calendar configurations",
    todos: 'All',
    valorMin: 'Minimum Value',
    valorMax: 'Maximum Value',
    itemsPerPage: 'Items per page',
    filter: "Filter",
    oportunidadeAtualizada: 'Opportunity updated successfully',
    oportunidadeCriada: 'Opportunity created successfully',
    erroSalvar: 'Error saving opportunity',
    erroEnvioEmail: 'Error sending email',
    emailDestinatario: 'Recipient email',
    camposObrigatorios: 'Required fields',
    semEmailContato: 'No email available for the contact',
    mensagemEmail: 'Email message',
    assuntoEmail: 'Email subject',
    enviarEmail: 'Send email',
    emailError: 'Error sending email',
    emailErrorDetails: 'Unable to determine the error',
    dataAnteriorNaoPermitida: "The date cannot be earlier than today",
    nome: "Name",
    numero: "Number",
    email: "Email",
    dataCriacao: "Creation date",
    novaOportunidade: "New Opportunity",
    calendar: "Calendar",
    buscarPorTermoPlaceholder: "Enter a term to search",
    buscarPorTermo: "Search by term",
    dataInicio: "Start date",
    dataFim: "End date",
    limiteRegistros: "Record limit",
    registrosPorPagina: "Records per page",
    total: "Total",
    semDescricao: "No description",
    etapas: "Stage",
    contato: "Contact",
    noventaDiasLabel: "Last 90 days",
    filterByResponsible: "Filter by responsible",
    filterByPipeline: "Filter by pipeline",
    filterByStage: "Filter by stage",
    aberto: "Open",
    ganho: "Won",
    perdido: "Lost",
    export: "Export",
    exportCSV: "Export CSV",
    oportunidadesValue: "Opportunities",
    pipelinesValue: "Pipelines",
    etapasValue: "Stages",
    noDataToExport: "No data to export",
    filterByStatus: "Filter by status",
    filterByPeriod: "Filter by period",
    fitlerByResponsible: "Filter by responsible",
    oportunidadeStatus: "Opportunity Status",
    oportunidadePorResponsavel: "Opportunities by Responsible",
    evolucaoDasOportunidades: "Opportunities Evolution",
    ticketMedio: "Average Ticket per Responsible",
    todosLabel: "All",
    abertosLabel: "Open",
    ganhosLabel: "Won",
    perdidosLabel: "Lost",
    seteDiasLabel: "Last 7 days",
    trintaDiasLabel: "Last 30 days",
    noventeDiasLabel: "Last 90 days",
    noResponsible: "No responsible",
    oportunidades: "Opportunities",
    ticketMedio: "Average Ticket",
    criado: "Created deals",
    emAberto: "Open deals",
    negocioGanho: "Won deals",
    negocioPerdido: "Lost deals",
    taxaNegociosGanhos: "Win rate",
    dashBoard: "Dashboard",
    pipelines: "Pipelines",
    kanban: "Kanban",
    ultimaEtapa: "This is the last stage of the pipeline",
    deletarOportunidade: "Are you sure you want to delete this opportunity?",
    oportunidadeDeletada: "Opportunity deleted successfully",
    erroAoDeletar: "Error deleting opportunity",
    atencao: "Attention",
    nao: "No",
    sim: "Yes",
    cancelar: "Cancel",
    salvar: "Save",
    fechar: "Close",
    adicionar: "Add",
    editar: "Edit",
    deletar: "Delete",
    oportunidadeVencendo: "Expiring opportunity",
    venceEm: "expires in",
    dias: "day(s)",
    verDetalhes: "View details",
    semMovimentacao: "No movement",
    estaHa: "has been",
    diasSemMovimentacao: "days without movement",
    atualizar: "Update",
    valorAlto: "High value",
    comValorDe: "with value of R$ ",
    etapaEstagnada: "Stagnant stage",
    diasNaEtapa: "days in stage",
    avancarEtapa: "Advance stage",
    semResponsavel: "No responsible",
    reponsavelAlerta: "has no assigned responsible",
    designar: "Assign",
    fechamentoPrevisto: "Expected closing",
    dataProxima: "Upcoming closing date!",
    criadoEm: "Created on",
    detalhesOportunidade: "Opportunity details",
    nome: "Name",
    pipeline: "Pipeline",
    etapa: "Stage",
    status: "Status",
    valor: "Value",
    valoresData: "Values and Dates",
    previsao: "Expected Closing",
    ultimaUpdate: "Last update",
    responsaveis: "Responsibles",
    basicas: "Basic Information",
    lead: "Lead",
    responsavel: "Responsible",
    descricao: "Description",
    produtos: "Products",
    historicoAtividades: "Activity History",
    valorMinimo: "Minimum Value",
    valorMaximo: "Maximum Value",
    limparFiltros: "Clear Filters",
    esteMes: "This month",
    mesAnterior: "Last month",
    ultimos7dias: "Last 7 days",
    ultimos30dias: "Last 30 days",
    ultimos90dias: "Last 90 days",
    hoje: "Today",
    valorDesc: "Value (high to low)",
    valorAsc: "Value (low to high)",
    criacaoDesc: "Creation (newest to oldest)",
    criacaoAsc: "Creation (oldest to newest)",
    previsaoFechamento: "Closing Forecast",
    editarOportunidade: "Edit opportunity",
    criarOportunidade: "Create opportunity",
    pipeEtapa: "Pipeline & Stage",
    selecioneData: "Select expected closing date",
    dataObrigatoria: "Date is required",
    dataFutura: "Date must be in the future",
    loadError: "Error loading required data",
    contactError: "Error loading contacts",
    editarPipe: "Edit pipeline",
    novoPipe: "New pipeline",
    nomePipe: "Pipeline name",
    campoObrigatorio: "Required field",
    acoes: "Actions",
    excluirPipeline: "Are you sure you want to delete this pipeline?",
    funilDeletado: "Pipeline deleted successfully",
    erroAoDeletarFunil: "Error deleting pipeline",
    pipeTitle: "Pipelines",
  },
  asteriskWebphone: {
    conected: "Connected",
    setNumber: "Enter the number",
    callReceived: "Call received",
    disconnectedWebphone: "Webphone disconnected",
    calling: "Calling...",
    callError: "Error starting call",
    callReceivedError: "Error receiving call",
    callEnded: "Call ended",
    callEndedError: "Error ending call",
    callReceived: "Call received",
  },
  configuracaoTutoriais: {
    title: 'Tutorials',
    create: 'Create Tutorial',
    description: 'Description',
    link: 'Link',
    thumbnail: 'Thumbnail',
    isActive: 'Active',
    edit: 'Edit',
    deleteConfirmation: 'Are you sure you want to delete this tutorial?',
    tutorialDeleted: 'Tutorial successfully deleted',
    columns: {
      title: 'Title',
      link: 'Link',
      isActive: 'Active',
      acoes: 'Actions',
      thumbnail: 'Thumbnail',
      description: 'Description',
      actions: 'Actions',
      edit: 'Edit',
      delete: 'Delete',
      cancel: 'Cancel',
      id: 'ID',
    },
    notifications: {
      duplicated: 'Tutorial successfully duplicated',
      errorDelete: 'Error deleting tutorial',
      errorDuplicate: 'Error duplicating tutorial',
    }
  },
  funilacao: {
    fluxoSalvoComSucesso: 'Flow saved successfully',
    tipoAcaoFluxo: 'Flow',
    erroSalvarFluxo: 'Error saving flow',
    configurarFluxo: 'Configure Flow',
    configurarAdicaoCarteira: 'Configure Wallet Addition',
    configurarAdicaoTag: 'Configure Tag Addition',
    configurarMudancaStatus: 'Configure Status Change',
    configurarMudancaEtapa: 'Configure Stage Change',
    configurarMensagem: 'Configure Message',
    selecionarAcao: 'Select Action',
    acoesDoFluxo: 'Flow Actions',
    adicioneAcoes: 'Add actions to the flow',
    adicionarAcao: 'Add Action',
    moverParaBaixo: 'Move Down',
    moverParaCima: 'Move Up',
    diasAposInicio: '{dias} days',
    configurarAcao: 'Configure Action',
    selecionePipelineEtapa: 'Select pipeline and stage',
    novoFluxo: 'New Flow',
    editarFluxo: 'Edit Flow',
    editorFluxo: 'Flow Editor',
    acoesDisponiveis: 'Available Actions',
    fluxo: 'Flow',
    verLogs: 'View Logs',
    logAcao: 'Action Log',
    contato: 'Contact',
    numero: 'Number',
    email: 'Email',
    data: 'Date',
    oportunidade: 'Opportunity',
    status: 'Status',
    mensagemErro: 'Error Message',
    erroCarregarLogs: 'Error loading logs',
    acao: 'Action',
    pipeline: 'Pipeline',
    etapa: 'Stage',
    tipoAcao: 'Action Type',
    mensagem: 'Message',
    etapaDestino: 'Destination Stage',
    statusDestino: 'Destination Status',
    tag: 'Tag',
    carteira: 'Wallet',
    diasParaDisparar: 'Days to Trigger',
    tipoAcaoMensagem: 'Send Message',
    tipoAcaoMudarEtapa: 'Change Stage',
    tipoAcaoMudarStatus: 'Change Status',
    tipoAcaoAdicionarTag: 'Add Tag',
    tipoAcaoAdicionarCarteira: 'Add Wallet',
    aberto: 'Open',
    ganho: 'Won',
    perdido: 'Lost',
    novo: 'New',
    pesquisar: 'Search',
    ativo: 'Active',
    nome: 'Name',
    pipeline: 'Pipeline',
    etapa: 'Stage',
    status: 'Status',
    valor: 'Value',
    valoresData: 'Values and Dates',
    previsao: 'Closing Forecast',
    salvar: 'Save',
    cancelar: 'Cancel',
    descricao: 'Description',
    whatsapp: 'Connection',
    pesquisar: 'Search',
    novo: 'New',
    acoes: 'Actions',
    erroCarregarDados: 'Error loading data',
    required: 'Required',
    editar: 'Edit',
    salvoComSucesso: 'Successfully saved',
    excluir: 'Delete',
    alteradoComSucesso: 'Successfully updated',
    confirmarExclusao: 'Are you sure you want to delete this action?',
    confirmar: 'Confirm',
    excluidoComSucesso: 'Successfully deleted',
    erroExcluir: 'Error deleting action',
    erroSalvar: 'Error saving action',
    erroAtualizar: 'Error updating action',
    erroCarregarEtiquetas: 'Error loading tags',
    erroCarregarCarteiras: 'Error loading wallets',
    erroCarregarWhatsapps: 'Error loading WhatsApp connections',
  },
  vapi: {
    assistants: "Assistants",
    phones: "Phone Numbers",
    createAccountInstruction: "Create an account on Vapi and generate your token to use the Vapi integration",
    tokenLabel: "Token",
    tokenTooltip: "Vapi",
    tooltip: "Create an account on Vapi and generate your token to use the Vapi integration.",
    testCall: "Test Call",
    selectAssistant: "Select Assistant",
    selectPhoneNumber: "Select Phone Number",
    customerNumber: "Customer Number",
    makeCall: "Make Call",
    cancel: "Cancel",
    success: "Call made successfully!",
    call: "Call",
  },
  rewriteIa: {
    title: 'Rewrite with ChatGPT',
    estilos: 'Rewrite Styles',
    pro: 'Professional',
    prodesc: 'Formal and corporate tone',
    simp: 'Friendly',
    simpdesc: 'Friendly and warm tone',
    marketing: 'Marketing',
    marketingdesc: 'Persuasive and engaging tone',
    ortografia: 'Spelling',
    ortografiadesc: 'Spelling correction only',
    caracteres: 'characters',
    warning1: 'Enter a message to rewrite',
    warning2: 'ChatGPT API key is not configured',
    warning3: 'Text rewritten in the style',
    warning4: 'Rewrite undone',
    desfazer: 'Undo',
    error1: 'Error rewriting the text. Please try again'
  },
  dashStyles: {
    title: 'Customize Dashboards',
    tema: 'Dashboard Theme',
    tipoGrafico: 'Chart Type',
    tooltip: 'Customize the chart type displayed for: ',
    show: 'Display panel for: ',
    defaultLabel: 'Default',
    defaultValue: 'default',
    pizzaLabel: 'Pie',
    barLabel: 'Bars',
    lineLabel: 'Lines',
    areaLabel: 'Areas',
    donutLabel: 'Donut',
    radarLabel: 'Radar',
    queueLabel: 'Service by queue',
    userLabel: 'Service by user',
    statusLabel: 'Service by status',
    channelLabel: 'Service by channel (Connection)',
    channelNameLabel: 'Service by channel (Name)',
    reasonsLabel: 'Service by demand',
    users: 'Users',
    atendimento: 'Services',
    demandas: 'Demands',
    closed: 'Closed',
    open: 'Open',
    pending: 'Pending',
    schedule: 'Scheduled',
    undefined: 'Undefined',
    channels: 'Channels',
    classic: 'Classic',
    modern: 'Modern',
    nature: 'Nature',
    elegant: 'Elegant',
    vibrant: 'Vibrant',
    minimalist: 'Minimalist',
    corporative: 'Corporate',
    default: 'Default',
    performanceCardsLabel: 'Performance Cards',
    performanceTableLabel: 'Performance Table',
  },
  ticketCompartilhado: {
    convites: 'Invitations',
    convite: 'Invitation',
    conviteDeletado: 'Invitation successfully deleted',
    conviteDeletadoErro: 'Error deleting invitation',
    meusConviteCompartilhados: 'My Shared Invitations',
    carregandoConvites: 'Loading invitations...',
    nenhumConviteEncontrado: 'No invitations found',
    voceNaoPossuiConvitesAtivos: 'You have no active sharing invitations.',
    compartilhadoEm: 'Shared on',
    usuariosComAcesso: 'Users with access',
    criadoPor: 'Created by',
    voce: 'You',
    outroUsuario: 'Another user',
    abrirNaMesmaTela: 'Open in same window',
    deletarConvite: 'Delete invitation',
    erroAoCarregarConvites: 'Error loading invitations',
    linkCopiadoParaAreaDeTransferencia: 'Link copied to clipboard',
    naoFoiPossivelCopiarLink: 'Could not copy link',
    confirmarExclusa: 'Confirm deletion',
    temCertezaQueDesejaDeletarOConviteDoTicket: 'Are you sure you want to delete the ticket invitation #{ticketId}?',
    conviteDeletadoComSucesso: 'Invitation successfully deleted!',
    erroAoDeletarConvite: 'Error deleting invitation',
    confirmarExclusao: 'Are you sure you want to delete this invitation?',
    compartilharTicket: 'Share Ticket',
    editarCompartilhamento: 'Edit Sharing',
    editeOsUsuariosQueTeraoAcessoAEsteTicket: 'Edit users who will have access to this ticket',
    selecioneOsUsuariosQueTeraoAcessoAEsteTicket: 'Select users who will have access to this ticket',
    atualizar: 'Update',
    compartilhar: 'Share',
    erroAoVerificarConviteExistente: 'Error checking existing invitation',
    erroAoCarregarUsuarios: 'Error loading users',
    selecionePeloMenosUmUsuarioParaCompartilhar: 'Select at least one user to share with',
    conviteAtualizadoCom: 'Invitation updated with {length} user(s)',
    ticketCompartilhadoCom: 'Ticket shared with {length} user(s)',
    erroAoCompartilharTicket: 'Error sharing ticket',
    update: 'Update',
  },
  backup: {
    title: "Data Center",
    backupActions: "Data Export",
    individualBackup: "Individual Export",
    allTenantsConfig: "Export Settings - All Tenants",
    tenantConfig: "Export Settings per Tenant",
    oldBackupsCleanup: "Clean Up Old Data",
    backupResults: "Export Results",
    availableBackups: "Available Data",
    totalBackups: "Total Exports",
    totalSize: "Total Size",
    lastBackup: "Last Export",
    processedTenants: "Processed Exports",
    backupAllTenants: "Export All Tenants",
    updateStatus: "Update Status",
    makeBackup: "Export Data",
    updateConfigs: "Update Settings",
    searchTenant: "Search Tenant",
    newConfig: "New Configuration",
    recreateDefaultConfig: "Recreate Default Configuration",
    saveConfig: "Save Configuration",
    cancel: "Cancel",
    close: "Close",
    confirmRestore: "Confirm Restore",
    confirmGeneralCleanup: "Confirm General Cleanup",
    cleanTenantBackups: "Clean Tenant Old Data",
    cleanAllTenantsBackups: "Clean All Tenants Old Data",
    selectTenant: "Select Tenant",
    selectTenantForConfig: "Select Tenant to Configure",
    selectTenantForCleanup: "Select Tenant to Clean",
    viewAllTenantsConfig: "View export settings for all tenants",
    removeOldBackups: "Removes old data based on the configured retention policy",
    tenantConfigInfo: "Tenant Configuration:",
    noConfigFound: "No configuration found",
    withoutDescription: "No description",
    createdIn: "Created at:",
    editConfig: "Edit Configuration",
    newConfigTitle: "New Configuration",
    storage: "Storage",
    general: "General",
    advanced: "Advanced",
    storageType: "Storage Type",
    storagePath: "Storage Path",
    retentionDays: "Retention Days",
    compression: "Compression",
    description: "Description",
    configDescription: "Configuration Description",
    encryption: "Encryption",
    encryptionPassword: "Encryption Password",
    bucket: "Bucket",
    region: "Region",
    accessKeyId: "Access Key ID",
    secretAccessKey: "Secret Access Key",
    host: "Host",
    port: "Port",
    username: "Username",
    password: "Password",
    path: "Path",
    active: "Active",
    inactive: "Inactive",
    success: "Success",
    failure: "Failure",
    complete: "Complete",
    partial: "Partial",
    yes: "Yes",
    no: "No",
    edit: "Edit",
    recreateDefault: "Recreate Default",
    delete: "Delete",
    viewDetails: "View Details",
    downloadBackup: "Download Data",
    deleteBackup: "Delete Data",
    confirmDeleteBackup: "Confirm Deletion",
    confirmDeleteBackupMessage: "Are you sure you want to delete this export? This action cannot be undone.",
    backupDeleted: "Export deleted successfully",
    errorDeletingBackup: "Error deleting data",
    confirmDeleteBackupTitle: "Confirm Export Deletion",
    id: "ID",
    tenant: "Tenant",
    tenantId: "Tenant ID",
    backupName: "Export Name",
    size: "Size",
    dbSize: "DB Size",
    filesSize: "Files Size",
    totalSizeLabel: "Total Size:",
    duration: "Duration",
    type: "Type",
    date: "Date",
    actions: "Actions",
    createdAt: "Created At",
    status: "Status",
    backupDetails: "Export Details",
    name: "Name",
    database: "Database",
    files: "Files",
    dbSizeLabel: "DB Size:",
    filesSizeLabel: "Files Size:",
    dateLabel: "Date:",
    errors: "Errors:",
    restoreBackup: "Restore Data",
    restoreWarning: "⚠️ Warning: This action will overwrite the tenant's current data. This operation cannot be undone.",
    confirmGeneralCleanupTitle: "Confirm General Cleanup",
    action: "Action:",
    criteria: "Criteria:",
    cleanupAction: "Delete old data from ALL tenants",
    cleanupCriteria: "Data older than the configured retention period",
    cleanupWarning: "⚠️ WARNING: This action will permanently delete old data from all tenants. This operation cannot be undone and may result in loss of historical data.",
    cleanupAllWarning: "⚠️ This action will remove old data from ALL tenants",
    allBackupsCompleted: "All tenant exports completed",
    allBackupsExecuted: "All tenant exports completed",
    singleBackupExecuted: "Tenant export completed",
    tenantBackupCompleted: "Tenant export completed",
    configSaved: "Configuration saved successfully",
    configDeleted: "Configuration deleted successfully",
    defaultConfigRecreated: "Default configuration recreated successfully",
    restoreCompleted: "Restore completed successfully",
    tenantBackupsCleaned: "Tenant old data cleaned successfully",
    oldBackupsCleaned: "Old data cleaned successfully",
    allTenantsBackupsCleaned: "All tenants' old data cleaned successfully",
    allOldBackupsCleaned: "All tenants' old data cleaned successfully",
    backupDownloaded: "Data downloaded successfully!",
    tenantsWithSuccess: "tenants with success",
    errorLoadingInitialData: "Error loading initial data",
    errorLoadingStatus: "Error loading status",
    errorLoadingTenants: "Error loading tenants",
    errorLoadingBackups: "Error loading data",
    errorLoadingResults: "Error loading export results",
    errorLoadingAllConfigs: "Error loading all tenant configurations",
    errorLoadingTenantConfigs: "Error loading tenant configuration",
    errorExecutingBackup: "Error executing export",
    errorExecutingAllBackups: "Error executing export",
    errorExecutingTenantBackup: "Error executing tenant export",
    errorExecutingSingleBackup: "Error executing tenant export",
    errorSavingConfig: "Error saving configuration",
    errorDeletingConfig: "Error deleting configuration",
    errorRecreatingDefaultConfig: "Error recreating default configuration",
    errorRestoringBackup: "Error restoring data",
    errorCleaningTenantBackups: "Error cleaning tenant data",
    errorCleaningOldBackups: "Error cleaning old data",
    errorCleaningAllTenantsBackups: "Error cleaning all tenants' data",
    errorCleaningAllBackups: "Error cleaning all data",
    errorDownloadingBackup: "Error downloading data",
    selectTenantToConfigure: "Select a tenant to configure",
    selectTenantToClean: "Select a tenant to clean data",
    selectTenantToCleanBackups: "Select a tenant to clean data",
    selectTenantToRecreate: "Select a tenant to recreate default configuration",
    selectTenantToRecreateDefaultConfig: "Select a tenant to recreate default configuration",
    invalidConfig: "Invalid configuration",
    confirmDelete: "Confirm Deletion",
    confirmDeleteConfigTitle: "Confirm Deletion",
    confirmDeleteMessage: "Are you sure you want to delete this configuration?",
    confirmDeleteConfigMessage: "Are you sure you want to delete this configuration?",
    zeroBytes: "0 Bytes",
    na: "N/A",
    tenantPrefix: "Tenant ",
    backupInfoTitle: "Export Information",
    includedModels: "Included Models",
    excludedModels: "Excluded Models",
    databaseModelsInfo: "Database Models",
    includedModelsTitle: "Models Included in the Export",
    excludedModelsTitle: "Models Excluded from the Export",
    includedModelsDescription: "These models will be included in the database export",
    excludedModelsDescription: "These models will NOT be included in the database export",
    backupScope: "Export Scope",
    backupScopeDescription: "The export includes only tenant-specific data (with tenantId) and excludes system data, temporary logs, and internal settings.",
    showDetails: "Show Details",
    hideDetails: "Hide Details",
    backupAllTenantsTooltip: "Export All Tenants",
    backupAllTenantsDescription: "Performs export of all active tenants in the system",
    singleBackupTooltip: "Individual Export",
    singleBackupDescription: "Performs export of a specific tenant",
    modelsIncluded: "Included Models",
    modelsExcluded: "Excluded Models",
    models: "models",
    updateStatusDescription: "Updates export statistics and status",
    cleanupInfoTitle: "Data Cleanup",
    cleanupInfoDescription: "Removes old data based on the configured retention policy",
    cleanupScope: "Cleanup Scope",
    cleanupScopeDescription: "Removes only old export files, does not affect database data or settings"
  },
  masterkey: {
    masterkeyOption: "Use MasterKey"
  },
  configuracaoMetaPanel: {
    novos: {
      configureWebhook: "Configure Webhook",
      configureSIP: "Configure SIP",
      registerPhone: "Register Phone in WABA",
      configureWebhookDescription: "Set the callback URL to receive events from the WhatsApp Business API",
      callbackUrl: "Callback URL",
      callbackUrlRequired: "Callback URL is required",
      verifyToken: "Verification Token",
      metaToken: "Tenant Meta Token",
      metaTokenHint: "Token used to verify the authenticity of requests",
      metaTokenRequired: "Verification token is required",
      overrideWebhook: "Override Webhook",
      configureSIPDescription: "Configure the SIP server to receive voice calls through the WhatsApp Business API",
      hostnameSIP: "SIP Server Hostname",
      hostnameSIPHint: "SIP server hostname (e.g.: asterisk.exemplo.com.br)",
      hostnameSIPRequired: "SIP server hostname is required",
      hostnameSIPInvalid: "Invalid SIP server hostname",
      hostnameSIPPlaceholder: "example: asterisk.exemplo.com.br",
      portSIP: "SIP Server Port",
      portSIPHint: "SIP server port (1-65535)",
      portSIPRequired: "SIP server port is required",
      portSIPInvalid: "Invalid SIP server port",
      portSIPPlaceholder: "5061",
      important: "Important",
      configureSIPDescription2: "This configuration will enable voice calls through the WhatsApp Business API. Make sure the SIP server is correctly configured and accessible.",
      fillRequiredFields: "Fill in all required fields",
      portSIPInvalidMessage: "Invalid port. Must be a number between 1 and 65535",
      hostnameSIPInvalidMessage: "Invalid hostname",
      SIPConfiguredSuccess: "SIP configured successfully!",
      SIPConfiguredError: "Error configuring SIP"
    },    
    profile: {
      updateProfile: "Update Profile",
      profile: "WhatsApp Business Profile",
      about: "About",
      address: "Address",
      description: "Description",
      email: "Email",
      vertical: "Sector",
      websites: "Websites",
      loadingProfile: "Loading current profile...",
      configureProfile: "Configure Profile",
      configureProfileDescription: "Set up the WhatsApp Business profile information",
      reloadProfile: "Reload Profile",
      aboutPlaceholder: "Brief description about the business",
      aboutHint: "Maximum 512 characters",
      addressPlaceholder: "Full business address",
      addressHint: "Physical location of the business",
      descriptionPlaceholder: "Detailed description of the business",
      descriptionHint: "Complete description of services or products",
      emailPlaceholder: "contact@@company.com",
      emailHint: "Business contact email",
      verticalPlaceholder: "Select sector",
      verticalHint: "Main category of the business",
      websitesPlaceholder: "https://www.company.com",
      websitesHint: "Business websites URLs (separated by commas)",
      cancel: "Cancel",
      saveProfile: "Save Profile",
      profileLoadError: "Phone verified, but profile could not be loaded.",
      requiredFieldsError: "Fill in all required fields",
      invalidEmailFormat: "Invalid email format",
      profileUpdatedSuccess: "Profile successfully updated!",
      profileUpdateError: "Error updating profile. Check the data and try again.",
      retail: "Retail",
      services: "Services",
      restaurant: "Restaurant",
      education: "Education",
      health: "Health",
      technology: "Technology",
      beauty: "Beauty",
      automotive: "Automotive",
      realEstate: "Real Estate",
      financial: "Financial",
      sports: "Sports",
      entertainment: "Entertainment",
      travel: "Travel",
      wellness: "Wellness",
      pet: "Pet",
      other: "Other"
    },
    label: {
      approved: "Approved",
      pending: "Pending",
      rejected: "Rejected",
      inAppeal: "In Appeal",
      disabled: "Disabled",
      utility: "Utility",
      marketing: "Marketing",
      authentication: "Authentication",
      arAR: "Arabic (Saudi Arabia)",
      tshivenda: "Tshivenda",
      isiNdebeleNo: "Northern Ndebele",
      isiNdebeleSu: "Southern Ndebele",
      Sepedi: "Sepedi",
      Sesotho: "Sesotho",
      ptBR: "Portuguese (Brazil)",
      ptPT: "Portuguese (Portugal)",
      enUS: "English (USA)",
      enGB: "English (UK)",
      esES: "Spanish (Spain)",
      esMX: "Spanish (Mexico)",
      esAR: "Spanish (Argentina)",
      frFR: "French (France)",
      frCA: "French (Canada)",
      itIT: "Italian",
      deDE: "German",
      nlNL: "Dutch",
      ruRU: "Russian",
      jaJP: "Japanese",
      koKR: "Korean",
      zhCN: "Chinese (Simplified)",
      zhTW: "Chinese (Traditional)",
      arAE: "Arabic (UAE)",
      arEG: "Arabic (Egypt)",
      arSA: "Arabic (Saudi Arabia)",
      arMA: "Arabic (Morocco)",
      arTN: "Arabic (Tunisia)",
      arDZ: "Arabic (Algeria)",
      hiIN: "Hindi",
      trTR: "Turkish",
      plPL: "Polish",
      svSE: "Swedish",
      noNO: "Norwegian",
      daDK: "Danish",
      fiFI: "Finnish",
      elGR: "Greek",
      huHU: "Hungarian",
      csCZ: "Czech",
      skSK: "Slovak",
      roRO: "Romanian",
      bgBG: "Bulgarian",
      hrHR: "Croatian",
      srRS: "Serbian",
      slSI: "Slovenian",
      etEE: "Estonian",
      lvLV: "Latvian",
      ltLT: "Lithuanian",
      mtMT: "Maltese",
      isIS: "Icelandic",
      gaIE: "Irish",
      cyGB: "Welsh",
      euES: "Basque",
      caES: "Catalan",
      glES: "Galician",
      caESVALENCIA: "Catalan (Valencia)",
      heIL: "Hebrew",
      faIR: "Persian (Iran)",
      thTH: "Thai",
      viVN: "Vietnamese",
      idID: "Indonesian",
      msMY: "Malay",
      filPH: "Filipino",
      bnIN: "Bengali",
      taIN: "Tamil",
      teIN: "Telugu",
      mrIN: "Marathi",
      guIN: "Gujarati",
      knIN: "Kannada",
      mlIN: "Malayalam",
      paIN: "Punjabi",
      urPK: "Urdu (Pakistan)",
      sdPK: "Sindhi (Pakistan)",
      psAF: "Pashto",
      prsAF: "Dari (Afghanistan)",
      uzUZ: "Uzbek",
      kkKZ: "Kazakh",
      kyKG: "Kyrgyz",
      tgTJ: "Tajik",
      tkTM: "Turkmen",
      mnMN: "Mongolian",
      neNP: "Nepali",
      siLK: "Sinhala",
      myMM: "Burmese",
      kmKH: "Khmer",
      loLA: "Lao",
      mnMNCYRL: "Mongolian (Cyrillic)",
      mnMNMONG: "Mongolian (Traditional)",
      amET: "Amharic",
      tiET: "Tigrinya",
      soSO: "Somali",
      swKE: "Swahili",
      yoNG: "Yoruba",
      igNG: "Igbo",
      haNG: "Hausa",
      zuZA: "Zulu",
      xhZA: "Xhosa",
      afZA: "Afrikaans",
      stZA: "Southern Sotho",
      tnZA: "Tswana",
      veZA: "Venda",
      tsZA: "Tsonga",
      nrZA: "Southern Ndebele",
      ndZA: "Northern Ndebele",
      nsoZA: "Northern Sotho",
      sstZA: "Southern Sotho (variant)",
      header: "Header",
      body: "Body",
      footer: "Footer",
      buttons: "Buttons",
      texto: "Text",
      imagem: "Image",
      documento: "Document",
      video: "Video",
      localizacao: "Location",
      quickReply: "Quick Reply",
      url: "URL",
      telefone: "Phone",
      otp: "OTP"
    },    
    tabs: {
      phones: "Phones",
      templates: "Templates",
      create: "Create Template"
    },
    common: {
      selectWabaConnection: "Select WABA Connection",
      noWabaConnectionsAvailable: "No WABA connection available",
      appId: "App ID",
      appIdHint: "Facebook App ID for Media Upload",
      type: "Type",
      editTemplate: "Edit Template",
      nameHint: "Only lowercase letters and underscores (_) are allowed",
      buttonTextHint: "Maximum 25 characters",
      fieldRequired: "Mandatory field",
      phoneNumberIdRequired: "Phone Number ID is required",
      wabaIdRequired: "WABA ID is required",
      wabaVersionRequired: "WABA Version is mandatory",
      wabaTokenRequired: "WABA Token is mandatory",
      codeRequired: "Enter the code received",
      enterPin: "Enter the 6-digit PIN",
      enterCode: "Enter the code received",
      enterPhoneNumberId: "Enter Phone Number ID",
      enterWabaId: "Enter WABA ID",
      enterWabaVersion: "Ex: v23.0",
      enterWabaToken: "Enter the access token"
    },
    templates: {
      title: "Templates",
      create: "Create Template",
      refresh: "To update",
      noTemplates: "No templates found",
      noPreview: "No preview available",
      filters: {
        status: "Status",
        category: "Category",
        language: "Language",
        search: "Search templates..."
      },
      actions: {
        view: "View",
        test: "Test",
        edit: "Edit",
        delete: "Delete"
      },
      createForm: {
        basicInfo: "Basic Information",
        name: "Template Name",
        nameRequired: "Name is required",
        appIdRequired: "App ID is required",
        language: "Language",
        languageRequired: "Language is required",
        category: "Category",
        categoryRequired: "Category is mandatory",
        components: "Components",
        addComponent: "Add Component",
        component: "Component",
        componentType: "Component Type",
        headerFormat: "Header Format",
        text: "Text",
        buttons: "Buttons",
        addButton: "Add Button",
        button: "Button",
        buttonType: "Button Type",
        buttonText: "Button Text",
        url: "URL",
        phoneNumber: "Phone number",
        submit: "Create Template",
        requiredFieldsNote: "Fields marked with * are required"
      },
      details: {
        info: "Information",
        id: "ID",
        status: "Status",
        category: "Category",
        language: "Language",
        components: "Components"
      },
      delete: {
        confirmTitle: "Confirm Deletion",
        confirmMessage: "Are you sure you want to delete the template '{name}'? This action cannot be undone."
      },
      notifications: {
        created: "Template created successfully!",
        updated: "Template updated successfully!",
        deleted: "Template deleted successfully!"
      },
      errors: {
        listError: "Error loading templates",
        createError: "Error creating template",
        updateError: "Error updating template",
        deleteError: "Error deleting template"
      }
    },
    phones: {
      title: "Phones",
      selectConnection: "Select WABA Connection",
      noConnections: "No WABA connection available",
      checkPhone: "Check Phone",
      registerPhone: "Register Phone",
      noConnectionsFound: "No WABA connection found. Please set up a WABA connection first in the Communication Channels section.",
      selectConnectionToManage: "Select a WABA connection to manage phones.",
      connectionInfo: {
        title: "WABA Connection Information",
        phoneNumberId: "Phone Number ID",
        wabaId: "WABA ID",
        wabaVersion: "WABA Version"
      },
      phoneStatus: {
        title: "Phone Status",
        phoneNumber: "Phone Number",
        phoneId: "Phone ID",
        verifiedName: "Name Verified",
        status: "Status"
      },
      tips: {
        title: "Tips and Information",
        phoneVerification: {
          title: "Phone Verification",
          description: "Make sure your phone is registered and active with WhatsApp Business API."
        },
        phoneRegistration: {
          title: "Telephone Registration",
          description: "To register a phone, you need the 6-digit PIN provided by Facebook Business Manager."
        },
        verifiedStatus: {
          title: "Verified Status",
          description: "Verified phones can send messages and templates."
        },
        facebookBusinessManager: {
          title: "Facebook Business Manager",
          description: "Access: Business Manager → WhatsApp Business API → Phone Numbers"
        }
      }
    },
    phoneRegistration: {
      title: "Register Phone in WABA",
      description: "To register a phone, you need the 6-digit PIN provided by Facebook Business Manager.",
      phoneNumberId: "Phone Number ID",
      phoneNumberIdHint: "Unique Phone ID in WABA",
      wabaId: "WABA ID",
      wabaIdHint: "WhatsApp Business Account ID",
      wabaVersion: "WABA Version",
      wabaVersionHint: "Facebook Graph API Version",
      wabaToken: "WABA Token",
      wabaTokenHint: "API Access Token",
      pin: "6-digit PIN",
      pinHint: "6-digit PIN for Facebook Business Manager registration",
      register: "Register Phone",
      success: "Phone successfully registered with WABA!",
      error: "Error registering phone. Check PIN and credentials."
    },
    verification: {
      requestTitle: "Request Code",
      verifyTitle: "Check Code",
      requestDescription: "A verification code will be sent via SMS or phone call to the registered phone number.",
      verifyDescription: "Enter the verification code that was sent via SMS or phone call.",
      code: "Code",
      codeHint: "Enter the code received by SMS or phone call",
      requestCode: "Request Code",
      requestNewCode: "Request New Code",
      verify: "To check",
      success: "Verification code sent via SMS or phone call! Verify your phone.",
      verifySuccess: "Code verified successfully! Phone activated.",
      error: "Error requesting verification code.",
      verifyError: "Error verifying code. Please check if the code is correct.",
      smsOption: "SMS",
      voiceOption: "Phone Call",
      locale: "Location",
      language: "Language",
      methodTitle: "Shipping Method",
      localeHint: "Select the location for the verification code",
      languageHint: "Select the language for the verification code"
    },
    test: {
      title: "Send Test Template",
      phoneNumber: "Test phone number",
      phoneNumberHint: "Enter the number with country code (e.g. 5511999999999)",
      variables: "Values for variables:",
      variableValue: "Value for {{1}}",
      variablePlaceholder: "Enter the value for {variable}",
      preview: "Template Preview:",
      sendTest: "Submit Test",
      success: "Test template sent successfully!",
      error: "Error sending test template. Check the number and try again.",
      invalidNumber: "The phone number must be between 10 and 15 numeric digits.",
      fillVariables: "Fill in all the values of the template variables."
    },
    messages: {
      selectWabaConnection: "Select a WABA connection to view templates",
      selectWabaToCreate: "Select a WABA connection to create templates.",
      selectWabaToEdit: "Select a WABA connection to edit the template.",
      selectWabaToDelete: "Select a WABA connection to delete the template.",
      selectWabaToTest: "Select a WABA connection to send the test template.",
      selectWabaToCheck: "Select a WABA connection to check the phone.",
      selectWabaFirst: "Please select a WABA connection first.",
      phoneAlreadyRegistered: "Phone is already registered with this WABA!",
      phoneNotRegistered: "Phone is not registered with this WABA.",
      phoneVerifiedNotRegistered: "Phone verified at WABA.",
      phoneNotVerified: "Phone number not verified. You must complete the verification process.",
      codeExpired: "Verification code has expired. Verification needs to be renewed.",
      sampleTemplateEdit: "This is a sample template provided by Facebook and cannot be edited.",
      sampleTemplateDelete: "This is a sample template provided by Facebook and cannot be deleted.",
      sampleTemplateChip: "Example Template",
      sampleTemplateEditTitle: "Example templates cannot be edited.",
      sampleTemplateDeleteTitle: "Example templates cannot be deleted",
      noWabaConnections: "No WABA connection found. Please set up a WABA connection first in the Communication Channels section.",
      noWabaConnectionsShort: "No WABA connection found. Please set up a WABA connection first.",
      allFieldsRequired: "All fields are mandatory, including the 6-digit PIN.",
      pinFormatError: "PIN must have exactly 6 numeric digits.",
      enterPhoneNumber: "Enter a phone number to test.",
      enterCode: "Enter the verification code received via SMS or phone call.",
      codeExpiredDialog: {
        title: "Expired Code",
        message: "This phone's verification code has expired. Would you like to request a new one?"
      },
      phoneNotVerifiedDialog: {
        title: "Phone Not Verified",
        message: "This phone number has not been verified. Would you like to request a verification code?"
      }
    },
    statusOptions: {
      approved: "Approved",
      pending: "Pending",
      rejected: "Rejected",
      inAppeal: "On Appeal",
      disabled: "Disabled"
    },
    categoryOptions: {
      utility: "Utility",
      marketing: "Marketing",
      authentication: "Authentication"
    },
    languageOptions: {
      ptBR: "Portuguese (Brazil)",
      enUS: "English (US)",
      esES: "Spanish"
    },
    componentTypeOptions: {
      header: "Header",
      body: "Body",
      footer: "Baseboard",
      buttons: "Buttons"
    },
    headerFormatOptions: {
      text: "Text",
      image: "Image",
      document: "Document",
      video: "Video",
      location: "Location"
    },
    buttonTypeOptions: {
      quickReply: "Quick Response",
      url: "URL",
      phoneNumber: "Telephone",
      otp: "OTP"
    },
    headerFields: {
      imageUrl: "Image URL (example)",
      imagePlaceholder: "https://exemplo.com/imagem.jpg",
      documentUrl: "Document URL (example)",
      documentPlaceholder: "https://exemplo.com/documento.pdf",
      videoUrl: "Video URL (example)",
      videoPlaceholder: "https://exemplo.com/video.mp4",
      latitude: "Latitude (example)",
      latitudePlaceholder: "-23.5505",
      longitude: "Longitude (example)",
      longitudePlaceholder: "-46.6333",
      locationName: "Location Name (example)",
      locationNamePlaceholder: "Sao Paulo, SP"
    },
    characterLimits: {
      header: "Maximum 60 characters",
      body: "Maximum 1024 characters",
      footer: "Maximum 60 characters",
      button: "Maximum 25 characters"
    },
    preview: {
      title: "Template Preview",
      imageLoadError: "Failed to load image",
      urlNotAvailable: "URL/Handle not available",
      addButtonToStart: "Click \"Add Button\" to start configuring your buttons."
    },
    buttons: {
      cancel: "Cancel",
      sendTest: "Submit Test",
      registerPhone: "Register Phone",
      requestCode: "Request Code",
      requestNewCode: "Request New Code",
      verify: "To check",
      checkPhone: "Check Phone"
    },
    dynamic: {
      actionButton: "Action {index}",
      buttonNumber: "{index} button"
    },
    notifications: {
      noWabaConnectionsFound: "No WABA connection found. Please set up a WABA connection first.",
      selectWabaToList: "Select a WABA connection to list the templates.",
      selectWabaToCreate: "Select a WABA connection to create the template.",
      selectWabaToEdit: "Select a WABA connection to edit the template.",
      selectWabaToDelete: "Select a WABA connection to delete the template.",
      selectWabaToTest: "Select a WABA connection to send the test template.",
      selectWabaToCheck: "Select a WABA connection to check the phone.",
      selectWabaFirst: "Please select a WABA connection first.",
      phoneAlreadyRegistered: "Phone is already registered with this WABA!",
      templateCreated: "Template created successfully!",
      templateUpdated: "Template updated successfully!",
      templateDeleted: "Template deleted successfully!",
      phoneRegistered: "Phone successfully registered with WABA!",
      codeSent: "Verification code sent via SMS or phone call! Verify your phone.",
      codeVerified: "Code verified successfully! Phone activated.",
      testSent: "Test template sent successfully!",
      codeExpired: "Verification code has expired. Verification needs to be renewed.",
      phoneVerifiedNotRegistered: "Phone verified at WABA.",
      phoneNotVerified: "Phone number not verified. You must complete the verification process.",
      phoneNotRegistered: "Phone is not registered with this WABA.",
      sampleTemplateEdit: "This is a sample template provided by Facebook and cannot be edited.",
      sampleTemplateDelete: "This is a sample template provided by Facebook and cannot be deleted.",
      nameFormatted: "The template name was automatically formatted to follow Facebook's rules (lowercase letters and underscores only).",
      characterLimitExceeded: "Character limit exceeded",
      characterLimitsExceeded: "Limits exceeded: {details}",
      fillVariables: "Fill in all the values of the template variables.",
      invalidNumber: "The phone number must be between 10 and 15 numeric digits.",
      allFieldsRequired: "All fields are mandatory, including the 6-digit PIN.",
      pinFormatError: "PIN must have exactly 6 numeric digits.",
      enterPhoneNumber: "Enter a phone number to test.",
      enterCode: "Enter the verification code received via SMS or phone call.",
      listError: "Error loading templates",
      createError: "Error creating template",
      updateError: "Error editing template",
      deleteError: "Error deleting template",
      testError: "Error sending test template. Check the number and try again.",
      phoneCheckError: "Error verifying phone. Please check your credentials.",
      phoneRegistrationError: "Error registering phone. Check PIN and credentials.",
      codeRequestError: "Error requesting verification code.",
      codeVerificationError: "Error verifying code. Please check if the code is correct.",
      uploadError: "Error sending image. Check your connection and try again.",
      uploadSuccess: "Image uploaded successfully! Header handle: {handle}",
      codeExpiredDialog: {
        title: "Expired Code",
        message: "This phone's verification code has expired. Would you like to request a new one?"
      },
      phoneNotVerifiedDialog: {
        title: "Phone Not Verified",
        message: "This phone number has not been verified. Would you like to request a verification code?"
      }
    }
  },
  googleCallback: {
    processing: "Processing authorization...",
    waitMessage: "Please wait while we process your Google Calendar authorization.",
    errors: {
      authorization: "Authorization error: {error}",
      codeNotFound: "Authorization code not found",
      configNameNotFound: "Configuration name not found",
      noConfigFound: "No configuration found",
      configNotFoundForName: "Configuration not found for name: {name}",
      invalidTokens: "Error getting tokens: Invalid data returned",
      saveTokensError: "Error saving tokens: {error}",
      processAuthorizationError: "Error processing authorization: {error}"
    },
    success: {
      authorizationCompleted: "Authorization completed successfully!"
    },
    warnings: {
      noParameters: "No parameters found in URL"
    }
  },
  googleCalendar: {
    title: "Google Calendar",
    config: {
      modal: {
        redirectUri: {
          label: "Redirect URL",
          hint: "URL to receive the authorization code",
          copyTooltip: "Copy to clipboard",
          copySuccess: "Redirect URL copied to clipboard!",
          copyError: "Could not copy to clipboard. Please copy manually!"
        },        
        editTitle: "Edit Configuration",
        newTitle: "New Configuration",
        completeMessage: "Setup complete! You can save.",
        incompleteMessage: "Fill in all the fields and get the tokens to save.",
        name: {
          label: "Configuration Name",
          required: "Name is required",
          hint: "Ex: Main Agenda, Personal Agenda, etc."
        },
        clientId: {
          label: "Google Client ID",
          required: "Client ID is required"
        },
        clientSecret: {
          label: "Google Client Secret",
          required: "Client Secret is mandatory"
        },
        accessToken: {
          label: "Access Token",
          required: "Access Token is mandatory"
        },
        refreshToken: {
          label: "Refresh Token",
          required: "Refresh Token is mandatory"
        },
        getTokensButton: "Get Tokens Automatically",
        getTokensTooltip: "Click to get Access Token and Refresh Token automatically",
        saveButton: "Save Configuration",
        cancelButton: "Cancel",
        deleteButton: "Delete Configuration"
      },
      management: {
        title: "Manage Settings",
        newButton: "New Configuration",
        table: {
          name: "Name",
          status: "Status",
          tokens: "Tokens",
          createdAt: "Created in",
          actions: "Actions",
          statusActive: "Active",
          statusInactive: "Inactive",
          tokensComplete: "Complete",
          tokensPending: "Pending"
        },
        actions: {
          edit: "Edit configuration",
          delete: "Delete configuration"
        }
      },
      errors: {
        fillRequiredFields: "Fill in all required fields",
        saveError: "Error saving configuration: {error}",
        deleteError: "Error deleting configuration: {error}",
        fillClientCredentials: "Fill in the Client ID and Client Secret first",
        fillConfigName: "Fill in the configuration name first",
        generateAuthUrlError: "Error generating authorization URL: {error}",
        redirectingAuth: "Redirecting to Google authorization..."
      },
      success: {
        saved: "Configuration saved successfully!",
        deleted: "Configuration deleted successfully!",
        selectedForEdit: "Configuration selected for editing."
      },
      confirm: {
        deleteTitle: "Confirm deletion",
        deleteMessage: "Are you sure you want to delete this setting?",
        deleteCalendarMessage: "Are you sure you want to delete this Google Calendar setting?"
      }
    },
    events: {
      create: {
        modal: {
          titleCreate: "Create New Event",
          title: {
            label: "Event Title",
            required: "Title is required"
          },
          selectCalendar: "Select Calendar",
          selectCalendarRequired: "Select a schedule",
          noConfigAvailable: "No configuration available",
          startDateTime: {
            label: "Start Date and Time",
            required: "Start date is mandatory"
          },
          endDateTime: {
            label: "End Date and Time",
            required: "End date is mandatory"
          },
          description: {
            label: "Description"
          },
          location: {
            label: "Location"
          },
          attendees: {
            label: "Participants (emails separated by commas)",
            hint: "example@email.com, other@email.com"
          },
          createButton: "Create Event",
          cancelButton: "Cancel"
        },
        errors: {
          selectConfig: "Select a configuration to create the event.",
          configNotFound: "Selected configuration not found.",
          configureCredentials: "Set up your Google Calendar credentials first",
          createError: "Error creating event: {error}"
        },
        success: {
          created: "Event created successfully!"
        }
      },
      list: {
        title: "Events",
        selectCalendar: "Select Calendar",
        noConfigAvailable: "No configuration available",
        createNewButton: "Create New Event",
        createNewTooltip: "Create a new event in Google Calendar",
        filters: {
          startDate: "Start Date",
          endDate: "End Date",
          maxResults: "Number of Results",
          searchButton: "Search"
        },
        table: {
          title: "Title",
          start: "Start",
          end: "End",
          location: "Location",
          status: "Status",
          actions: "Actions"
        },
        actions: {
          edit: "Edit event",
          delete: "Delete event",
          open: "Open in Google Calendar"
        },
        errors: {
          selectConfig: "Select a configuration to search for events.",
          configNotFound: "Selected configuration not found.",
          configureCredentials: "Set up your Google Calendar credentials first",
          loadError: "Error loading events: {error}"
        }
      },
      edit: {
        modal: {
          titleEdit: "Edit Event",
          title: {
            label: "Event Title",
            required: "Title is required"
          },
          startDateTime: {
            label: "Start Date and Time",
            required: "Start date is mandatory"
          },
          endDateTime: {
            label: "End Date and Time",
            required: "End date is mandatory"
          },
          description: {
            label: "Description"
          },
          location: {
            label: "Location"
          },
          attendees: {
            label: "Participants (emails separated by commas)",
            hint: "example@email.com, other@email.com"
          },
          updateButton: "Update Event",
          cancelButton: "Cancel"
        },
        errors: {
          selectConfig: "Select a setting to update the event.",
          configNotFound: "Selected configuration not found.",
          updateError: "Error updating event: {error}"
        },
        success: {
          updated: "Event updated successfully!"
        }
      },
      delete: {
        confirm: {
          title: "Confirm deletion",
          message: "Are you sure you want to delete this event?"
        },
        errors: {
          selectConfig: "Select a setting to delete the event.",
          configNotFound: "Selected configuration not found.",
          deleteError: "Error deleting event: {error}"
        },
        success: {
          deleted: "Event deleted successfully!"
        }
      }
    }
  },
  gmailCallback: {
    processing: "Processing authorization...",
    waitMessage: "Please wait while we process your Gmail authorization.",
    title: "Gmail Authorization Completed!",
    message: "Your Gmail account has been successfully configured for OAuth2.",
    infoSession: "Session Information:",
    whatsappId: "WhatsApp ID:",
    status: "Status:",
    data: "Date:",
    closeWindow: "Close Window",
    errorTitle: "Authorization Error",
    debugInfo: "Debug Information:",
    fullUrl: "Full URL:",
    parameters: "Parameters:",
    retry: "Try Again",
    callbackTitle: "Gmail Callback",
    waitingMessage: "Waiting for authorization processing...",
    noParametersFound: "No parameters found in the URL",
    authorizationError: "Authorization error",
    codeNotFound: "Authorization code not found",
    whatsappIdNotFound: "WhatsApp ID not found",
    saveTokensError: "Error saving tokens",
    processAuthorizationError: "Error processing authorization"
  }  
}
